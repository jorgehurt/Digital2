

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 10:23:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0199                     __pidataBANK0:
   370                           
   371                           ;initializer for _segmentos
   372  0199  343F               	retlw	63
   373  019A  3406               	retlw	6
   374  019B  345B               	retlw	91
   375  019C  344F               	retlw	79
   376  019D  3466               	retlw	102
   377  019E  346D               	retlw	109
   378  019F  347D               	retlw	125
   379  01A0  3407               	retlw	7
   380  01A1  347F               	retlw	127
   381  01A2  346F               	retlw	111
   382  01A3  3477               	retlw	119
   383  01A4  347C               	retlw	124
   384  01A5  3439               	retlw	57
   385  01A6  345E               	retlw	94
   386  01A7  3479               	retlw	121
   387  01A8  3471               	retlw	113
   388  001F                     _ADCON0	set	31
   389  001E                     _ADRESH	set	30
   390  0009                     _PORTE	set	9
   391  0006                     _PORTB	set	6
   392  0005                     _PORTA	set	5
   393  0001                     _TMR0	set	1
   394  000C                     _PIR1bits	set	12
   395  000B                     _INTCONbits	set	11
   396  0006                     _PORTBbits	set	6
   397  0008                     _PORTD	set	8
   398  0007                     _PORTC	set	7
   399  0009                     _PORTEbits	set	9
   400  001F                     _ADCON0bits	set	31
   401  009F                     _ADCON1	set	159
   402  0089                     _TRISE	set	137
   403  0088                     _TRISD	set	136
   404  0087                     _TRISC	set	135
   405  0086                     _TRISB	set	134
   406  0085                     _TRISA	set	133
   407  0081                     _OPTION_REGbits	set	129
   408  0096                     _IOCBbits	set	150
   409  008C                     _PIE1bits	set	140
   410  008F                     _OSCCONbits	set	143
   411  0189                     _ANSELH	set	393
   412  0188                     _ANSEL	set	392
   413                           
   414                           	psect	cinit
   415  000F                     start_initialization:	
   416                           ; #config settings
   417                           
   418  000F                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421  000F  1383               	bcf	3,7	;select IRP bank0
   422  0010  3030               	movlw	low (__pdataBANK0+16)
   423  0011  00FD               	movwf	btemp+-1
   424  0012  3001               	movlw	high __pidataBANK0
   425  0013  00FE               	movwf	btemp
   426  0014  3099               	movlw	low __pidataBANK0
   427  0015  00FF               	movwf	btemp+1
   428  0016  3020               	movlw	low __pdataBANK0
   429  0017  0084               	movwf	4
   430  0018  120A  118A  218A  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to COMMON
   433  001D  01F6               	clrf	__pbssCOMMON& (0+127)
   434  001E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   435  001F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   436  0020  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   437  0021                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  0021                     __end_of__initialization:
   441  0021  0183               	clrf	3
   442  0022  120A  118A  28D5   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  0076                     __pbssCOMMON:
   446  0076                     _tog:
   447  0076                     	ds	1
   448  0077                     _pato:
   449  0077                     	ds	1
   450  0078                     _y:
   451  0078                     	ds	1
   452  0079                     _x:
   453  0079                     	ds	1
   454                           
   455                           	psect	dataBANK0
   456  0020                     __pdataBANK0:
   457  0020                     _segmentos:
   458  0020                     	ds	16
   459                           
   460                           	psect	inittext
   461  0186                     init_fetch0:	
   462                           ;	Called with low address in FSR and high address in W
   463                           
   464  0186  087E               	movf	btemp,w
   465  0187  008A               	movwf	10
   466  0188  087F               	movf	btemp+1,w
   467  0189  0082               	movwf	2
   468  018A                     init_ram0:	
   469                           ;Called with:
   470                           ;	high address of idata address in btemp 
   471                           ;	low address of idata address in btemp+1 
   472                           ;	low address of data in FSR
   473                           ;	high address + 1 of data in btemp-1
   474                           
   475  018A  120A  118A  2186  120A  118A  	fcall	init_fetch0
   476  018F  0080               	movwf	0
   477  0190  0A84               	incf	4,f
   478  0191  0804               	movf	4,w
   479  0192  067D               	xorwf	btemp+-1,w
   480  0193  1903               	btfsc	3,2
   481  0194  3400               	retlw	0
   482  0195  0AFF               	incf	btemp+1,f
   483  0196  1903               	btfsc	3,2
   484  0197  0AFE               	incf	btemp,f
   485  0198  298A               	goto	init_ram0
   486                           
   487                           	psect	cstackCOMMON
   488  0070                     __pcstackCOMMON:
   489  0070                     ?_setup:
   490  0070                     ?_initosc:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_toggle:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_toggle:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_ISR:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508                           
   509                           ; 1 bytes @ 0x0
   510  0070                     	ds	4
   511  0074                     ?_conversion:
   512  0074                     ??_initosc:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     conversion@channel:	
   516                           ; 1 bytes @ 0x4
   517                           
   518                           
   519                           ; 2 bytes @ 0x4
   520  0074                     	ds	2
   521  0076                     ??_setup:
   522                           
   523                           	psect	cstackBANK0
   524  0030                     __pcstackBANK0:	
   525                           ; 1 bytes @ 0x6
   526                           
   527  0030                     ??_conversion:
   528  0030                     initosc@IRCF:	
   529                           ; 1 bytes @ 0x0
   530                           
   531                           
   532                           ; 1 bytes @ 0x0
   533  0030                     	ds	1
   534  0031                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x1
   537  0031                     	ds	2
   538                           
   539                           	psect	maintext
   540  00D5                     __pmaintext:	
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 76 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : B00/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0
   562 ;;      Temps:          0       2       0       0       0
   563 ;;      Totals:         0       2       0       0       0
   564 ;;Total ram usage:        2 bytes
   565 ;; Hardware stack levels required when called:    4
   566 ;; This function calls:
   567 ;;		_conversion
   568 ;;		_setup
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _main
   576  00D5                     _main:
   577  00D5                     l1052:	
   578                           ;incstack = 0
   579                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;main.c: 78: void setup(void) {
   583  00D5  120A  118A  2121  120A  118A  	fcall	_setup
   584  00DA                     l1054:
   585                           
   586                           ;main.c: 84: 
   587  00DA  30E8               	movlw	232
   588  00DB  00F4               	movwf	conversion@channel
   589  00DC  3003               	movlw	3
   590  00DD  00F5               	movwf	conversion@channel+1
   591  00DE  120A  118A  216C  120A  118A  	fcall	_conversion
   592  00E3                     l1056:
   593                           
   594                           ;main.c: 85:     INTCONbits.GIE = 1;
   595  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   596  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   597  00E5  141F               	bsf	31,0	;volatile
   598  00E6                     l1058:
   599                           
   600                           ;main.c: 86:     INTCONbits.PEIE = 1;
   601  00E6  301A               	movlw	26
   602  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   603  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   604  00E9  00B2               	movwf	??_main+1
   605  00EA  30F7               	movlw	247
   606  00EB  00B1               	movwf	??_main
   607  00EC                     u227:
   608  00EC  0BB1               	decfsz	??_main,f
   609  00ED  28EC               	goto	u227
   610  00EE  0BB2               	decfsz	??_main+1,f
   611  00EF  28EC               	goto	u227
   612  00F0  28F1               	nop2
   613  00F1                     l1060:
   614                           
   615                           ;main.c: 87:     INTCONbits.RBIE = 1;
   616  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   617  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   618  00F3  149F               	bsf	31,1	;volatile
   619  00F4                     l70:	
   620                           ;main.c: 88:     INTCONbits.T0IE = 1;
   621                           
   622  00F4  189F               	btfsc	31,1	;volatile
   623  00F5  28F7               	goto	u181
   624  00F6  28F8               	goto	u180
   625  00F7                     u181:
   626  00F7  28F4               	goto	l70
   627  00F8                     u180:
   628  00F8                     l1062:
   629                           
   630                           ;main.c: 89:     INTCONbits.INTE = 1;
   631  00F8  0876               	movf	_tog,w
   632  00F9  1D03               	btfss	3,2
   633  00FA  28FC               	goto	u191
   634  00FB  28FD               	goto	u190
   635  00FC                     u191:
   636  00FC  2907               	goto	l1070
   637  00FD                     u190:
   638  00FD                     l1064:
   639                           
   640                           ;main.c: 90:     PIE1bits.ADIE = 1;
   641  00FD  1409               	bsf	9,0	;volatile
   642                           
   643                           ;main.c: 91: 
   644  00FE  1089               	bcf	9,1	;volatile
   645  00FF                     l1066:
   646                           
   647                           ;main.c: 92:     INTCONbits.T0IF = 0;
   648  00FF  0878               	movf	_y,w
   649  0100  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   650  0101  0084               	movwf	4
   651  0102  1383               	bcf	3,7	;select IRP bank0
   652  0103  0800               	movf	0,w
   653  0104  0087               	movwf	7	;volatile
   654  0105                     l1068:
   655                           
   656                           ;main.c: 93:     INTCONbits.RBIF = 0;
   657  0105  01F6               	clrf	_tog
   658  0106  0AF6               	incf	_tog,f
   659  0107                     l1070:
   660                           
   661                           ;main.c: 96:     IOCBbits.IOCB0 = 1;
   662  0107  0376               	decf	_tog,w
   663  0108  1D03               	btfss	3,2
   664  0109  290B               	goto	u201
   665  010A  290C               	goto	u200
   666  010B                     u201:
   667  010B  2915               	goto	l1078
   668  010C                     u200:
   669  010C                     l1072:
   670                           
   671                           ;main.c: 97:     IOCBbits.IOCB1 = 1;
   672  010C  1009               	bcf	9,0	;volatile
   673                           
   674                           ;main.c: 98:     IOCBbits.IOCB2 = 1;
   675  010D  1489               	bsf	9,1	;volatile
   676  010E                     l1074:
   677                           
   678                           ;main.c: 99: 
   679  010E  0879               	movf	_x,w
   680  010F  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   681  0110  0084               	movwf	4
   682  0111  1383               	bcf	3,7	;select IRP bank0
   683  0112  0800               	movf	0,w
   684  0113  0087               	movwf	7	;volatile
   685  0114                     l1076:
   686                           
   687                           ;main.c: 100: 
   688  0114  01F6               	clrf	_tog
   689  0115                     l1078:
   690                           
   691                           ;main.c: 103:     OPTION_REGbits.T0CS = 0;
   692  0115  0808               	movf	8,w	;volatile
   693  0116  0277               	subwf	_pato,w
   694  0117  1C03               	skipc
   695  0118  291A               	goto	u211
   696  0119  291B               	goto	u210
   697  011A                     u211:
   698  011A  291C               	goto	l75
   699  011B                     u210:
   700  011B                     l1080:
   701                           
   702                           ;main.c: 104:     OPTION_REGbits.T0SE = 0;
   703  011B  1586               	bsf	6,3	;volatile
   704  011C                     l75:	
   705                           ;main.c: 105:     OPTION_REGbits.PSA = 0;
   706                           
   707                           
   708                           ;main.c: 106:     OPTION_REGbits.PS = 0b000;
   709  011C  1186               	bcf	6,3	;volatile
   710  011D  28DA               	goto	l1054
   711  011E  120A  118A  280C   	ljmp	start
   712  0121                     __end_of_main:
   713                           
   714                           	psect	text1
   715  0121                     __ptext1:	
   716 ;; *************** function _setup *****************
   717 ;; Defined at:
   718 ;;		line 115 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    3
   739 ;; This function calls:
   740 ;;		_initosc
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _setup
   748  0121                     _setup:
   749  0121                     l972:	
   750                           ;incstack = 0
   751                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   752                           
   753                           
   754                           ;main.c: 117:     PORTD = 0;
   755  0121  3007               	movlw	7
   756  0122  120A  118A  2025  120A  118A  	fcall	_initosc
   757  0127                     l974:
   758                           
   759                           ;main.c: 118:     TRISE = 0;
   760  0127  1683               	bsf	3,5	;RP0=1, select bank1
   761  0128  1303               	bcf	3,6	;RP1=0, select bank1
   762  0129  118F               	bcf	15,3	;volatile
   763  012A                     l976:
   764                           
   765                           ;main.c: 119:     PORTE = 0;
   766  012A  110F               	bcf	15,2	;volatile
   767  012B                     l978:
   768                           
   769                           ;main.c: 120: }
   770  012B  108F               	bcf	15,1	;volatile
   771  012C                     l980:
   772                           
   773                           ;main.c: 122: 
   774  012C  178B               	bsf	11,7	;volatile
   775  012D                     l982:
   776                           
   777                           ;main.c: 123: 
   778  012D  170B               	bsf	11,6	;volatile
   779  012E                     l984:
   780                           
   781                           ;main.c: 124: 
   782  012E  158B               	bsf	11,3	;volatile
   783  012F                     l986:
   784                           
   785                           ;main.c: 125: 
   786  012F  168B               	bsf	11,5	;volatile
   787  0130                     l988:
   788                           
   789                           ;main.c: 126: void toggle(void) {
   790  0130  160B               	bsf	11,4	;volatile
   791  0131                     l990:
   792                           
   793                           ;main.c: 127:     if (tog == 0) {
   794  0131  170C               	bsf	12,6	;volatile
   795  0132                     l992:
   796                           
   797                           ;main.c: 129:     }
   798  0132  110B               	bcf	11,2	;volatile
   799  0133                     l994:
   800                           
   801                           ;main.c: 130:     if (tog == 1) {
   802  0133  100B               	bcf	11,0	;volatile
   803  0134                     l996:
   804                           
   805                           ;main.c: 131:         tog = 0;
   806  0134  1283               	bcf	3,5	;RP0=0, select bank0
   807  0135  1303               	bcf	3,6	;RP1=0, select bank0
   808  0136  130C               	bcf	12,6	;volatile
   809  0137                     l998:
   810                           
   811                           ;main.c: 133: }
   812  0137  1683               	bsf	3,5	;RP0=1, select bank1
   813  0138  1303               	bcf	3,6	;RP1=0, select bank1
   814  0139  1416               	bsf	22,0	;volatile
   815  013A                     l1000:
   816                           
   817                           ;main.c: 134: 
   818  013A  1496               	bsf	22,1	;volatile
   819  013B                     l1002:
   820                           
   821                           ;main.c: 135: 
   822  013B  1516               	bsf	22,2	;volatile
   823  013C                     l1004:
   824                           
   825                           ;main.c: 138: 
   826  013C  1781               	bsf	1,7	;volatile
   827  013D                     l1006:
   828                           
   829                           ;main.c: 139: 
   830  013D  1301               	bcf	1,6	;volatile
   831  013E                     l1008:
   832                           
   833                           ;main.c: 140: void __attribute__((picinterrupt(("")))) ISR() {
   834  013E  1281               	bcf	1,5	;volatile
   835  013F                     l1010:
   836                           
   837                           ;main.c: 141:     if (INTCONbits.RBIF == 1 && PORTBbits.RB0 == 0) {
   838  013F  1201               	bcf	1,4	;volatile
   839  0140                     l1012:
   840                           
   841                           ;main.c: 142:         PORTD = PORTD + 1;
   842  0140  1181               	bcf	1,3	;volatile
   843  0141                     l1014:
   844                           
   845                           ;main.c: 143:         INTCONbits.RBIF = 0;
   846  0141  30F8               	movlw	-8
   847  0142  0581               	andwf	1,f	;volatile
   848  0143                     l1016:
   849                           
   850                           ;main.c: 144:         return;
   851  0143  3002               	movlw	2
   852  0144  1283               	bcf	3,5	;RP0=0, select bank0
   853  0145  1303               	bcf	3,6	;RP1=0, select bank0
   854  0146  0081               	movwf	1	;volatile
   855  0147                     l1018:
   856                           
   857                           ;main.c: 145:     }
   858  0147  1683               	bsf	3,5	;RP0=1, select bank3
   859  0148  1703               	bsf	3,6	;RP1=1, select bank3
   860  0149  0188               	clrf	8	;volatile
   861  014A                     l1020:
   862                           
   863                           ;main.c: 146:     if (INTCONbits.RBIF == 1 && PORTBbits.RB1 == 0) {
   864  014A  3001               	movlw	1
   865  014B  0089               	movwf	9	;volatile
   866  014C                     l1022:
   867                           
   868                           ;main.c: 147:         PORTD = PORTD - 1;
   869  014C  1683               	bsf	3,5	;RP0=1, select bank1
   870  014D  1303               	bcf	3,6	;RP1=0, select bank1
   871  014E  0185               	clrf	5	;volatile
   872  014F                     l1024:
   873                           
   874                           ;main.c: 148:         INTCONbits.RBIF = 0;
   875  014F  1283               	bcf	3,5	;RP0=0, select bank0
   876  0150  1303               	bcf	3,6	;RP1=0, select bank0
   877  0151  0185               	clrf	5	;volatile
   878  0152                     l1026:
   879                           
   880                           ;main.c: 149:         return;
   881  0152  3007               	movlw	7
   882  0153  1683               	bsf	3,5	;RP0=1, select bank1
   883  0154  1303               	bcf	3,6	;RP1=0, select bank1
   884  0155  0086               	movwf	6	;volatile
   885  0156                     l1028:
   886                           
   887                           ;main.c: 150:     }
   888  0156  1283               	bcf	3,5	;RP0=0, select bank0
   889  0157  1303               	bcf	3,6	;RP1=0, select bank0
   890  0158  0186               	clrf	6	;volatile
   891  0159                     l1030:
   892                           
   893                           ;main.c: 151:     if (PIR1bits.ADIF == 1) {
   894  0159  1683               	bsf	3,5	;RP0=1, select bank1
   895  015A  1303               	bcf	3,6	;RP1=0, select bank1
   896  015B  0187               	clrf	7	;volatile
   897  015C                     l1032:
   898                           
   899                           ;main.c: 152:         PIR1bits.ADIF = 0;
   900  015C  1283               	bcf	3,5	;RP0=0, select bank0
   901  015D  1303               	bcf	3,6	;RP1=0, select bank0
   902  015E  0187               	clrf	7	;volatile
   903  015F                     l1034:
   904                           
   905                           ;main.c: 153:         INTCONbits.RBIF = 0;
   906  015F  1683               	bsf	3,5	;RP0=1, select bank1
   907  0160  1303               	bcf	3,6	;RP1=0, select bank1
   908  0161  0188               	clrf	8	;volatile
   909  0162                     l1036:
   910                           
   911                           ;main.c: 154:         pato = ADRESH;
   912  0162  1283               	bcf	3,5	;RP0=0, select bank0
   913  0163  1303               	bcf	3,6	;RP1=0, select bank0
   914  0164  0188               	clrf	8	;volatile
   915  0165                     l1038:
   916                           
   917                           ;main.c: 155:         y = pato;
   918  0165  1683               	bsf	3,5	;RP0=1, select bank1
   919  0166  1303               	bcf	3,6	;RP1=0, select bank1
   920  0167  0189               	clrf	9	;volatile
   921  0168                     l1040:
   922                           
   923                           ;main.c: 156:         x = pato & 0x0F;
   924  0168  1283               	bcf	3,5	;RP0=0, select bank0
   925  0169  1303               	bcf	3,6	;RP1=0, select bank0
   926  016A  0189               	clrf	9	;volatile
   927  016B                     l81:
   928  016B  0008               	return
   929  016C                     __end_of_setup:
   930                           
   931                           	psect	text2
   932  0025                     __ptext2:	
   933 ;; *************** function _initosc *****************
   934 ;; Defined at:
   935 ;;		line 8 in file "oscilador.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  IRCF            1    wreg     unsigned char 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  IRCF            1    0[BANK0 ] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       1       0       0       0
   951 ;;      Temps:          2       0       0       0       0
   952 ;;      Totals:         2       1       0       0       0
   953 ;;Total ram usage:        3 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    2
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_setup
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _initosc
   965  0025                     _initosc:
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _initosc: [wreg-fsr0h+status,2+status,0]
   969                           ;initosc@IRCF stored from wreg
   970  0025  1283               	bcf	3,5	;RP0=0, select bank0
   971  0026  1303               	bcf	3,6	;RP1=0, select bank0
   972  0027  00B0               	movwf	initosc@IRCF
   973  0028                     l960:
   974                           
   975                           ;oscilador.c: 10:     switch(IRCF){
   976  0028  285F               	goto	l964
   977  0029                     l101:	
   978                           ;oscilador.c: 11:         case 0:
   979                           
   980                           
   981                           ;oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   982  0029  1683               	bsf	3,5	;RP0=1, select bank1
   983  002A  1303               	bcf	3,6	;RP1=0, select bank1
   984  002B  130F               	bcf	15,6	;volatile
   985                           
   986                           ;oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   987  002C  128F               	bcf	15,5	;volatile
   988                           
   989                           ;oscilador.c: 14:             OSCCONbits.IRCF0 = 0;
   990  002D  120F               	bcf	15,4	;volatile
   991                           
   992                           ;oscilador.c: 15:             break;
   993  002E  2881               	goto	l102
   994  002F                     l103:	
   995                           ;oscilador.c: 17:         case 1:
   996                           
   997                           
   998                           ;oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   999  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1001  0031  130F               	bcf	15,6	;volatile
  1002                           
  1003                           ;oscilador.c: 19:             OSCCONbits.IRCF1 = 0;
  1004  0032  128F               	bcf	15,5	;volatile
  1005                           
  1006                           ;oscilador.c: 20:             OSCCONbits.IRCF0 = 1;
  1007  0033  160F               	bsf	15,4	;volatile
  1008                           
  1009                           ;oscilador.c: 21:             break;
  1010  0034  2881               	goto	l102
  1011  0035                     l104:	
  1012                           ;oscilador.c: 22:         case 2:
  1013                           
  1014                           
  1015                           ;oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
  1016  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1017  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0037  130F               	bcf	15,6	;volatile
  1019                           
  1020                           ;oscilador.c: 24:             OSCCONbits.IRCF1 = 1;
  1021  0038  168F               	bsf	15,5	;volatile
  1022                           
  1023                           ;oscilador.c: 25:             OSCCONbits.IRCF0 = 0;
  1024  0039  120F               	bcf	15,4	;volatile
  1025                           
  1026                           ;oscilador.c: 26:             break;
  1027  003A  2881               	goto	l102
  1028  003B                     l105:	
  1029                           ;oscilador.c: 27:         case 3:
  1030                           
  1031                           
  1032                           ;oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
  1033  003B  1683               	bsf	3,5	;RP0=1, select bank1
  1034  003C  1303               	bcf	3,6	;RP1=0, select bank1
  1035  003D  130F               	bcf	15,6	;volatile
  1036                           
  1037                           ;oscilador.c: 29:             OSCCONbits.IRCF1 = 1;
  1038  003E  168F               	bsf	15,5	;volatile
  1039                           
  1040                           ;oscilador.c: 30:             OSCCONbits.IRCF0 = 1;
  1041  003F  160F               	bsf	15,4	;volatile
  1042                           
  1043                           ;oscilador.c: 31:             break;
  1044  0040  2881               	goto	l102
  1045  0041                     l106:	
  1046                           ;oscilador.c: 32:         case 4:
  1047                           
  1048                           
  1049                           ;oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1050  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0043  170F               	bsf	15,6	;volatile
  1053                           
  1054                           ;oscilador.c: 34:             OSCCONbits.IRCF1 = 0;
  1055  0044  128F               	bcf	15,5	;volatile
  1056                           
  1057                           ;oscilador.c: 35:             OSCCONbits.IRCF0 = 0;
  1058  0045  120F               	bcf	15,4	;volatile
  1059                           
  1060                           ;oscilador.c: 36:             break;
  1061  0046  2881               	goto	l102
  1062  0047                     l107:	
  1063                           ;oscilador.c: 37:         case 5:
  1064                           
  1065                           
  1066                           ;oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1067  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1068  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1069  0049  170F               	bsf	15,6	;volatile
  1070                           
  1071                           ;oscilador.c: 39:             OSCCONbits.IRCF1 = 0;
  1072  004A  128F               	bcf	15,5	;volatile
  1073                           
  1074                           ;oscilador.c: 40:             OSCCONbits.IRCF0 = 1;
  1075  004B  160F               	bsf	15,4	;volatile
  1076                           
  1077                           ;oscilador.c: 41:             break;
  1078  004C  2881               	goto	l102
  1079  004D                     l108:	
  1080                           ;oscilador.c: 42:         case 6:
  1081                           
  1082                           
  1083                           ;oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1084  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1085  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1086  004F  170F               	bsf	15,6	;volatile
  1087                           
  1088                           ;oscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  1089  0050  168F               	bsf	15,5	;volatile
  1090                           
  1091                           ;oscilador.c: 45:             OSCCONbits.IRCF0 = 0;
  1092  0051  120F               	bcf	15,4	;volatile
  1093                           
  1094                           ;oscilador.c: 46:             break;
  1095  0052  2881               	goto	l102
  1096  0053                     l109:	
  1097                           ;oscilador.c: 47:         case 7:
  1098                           
  1099                           
  1100                           ;oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1101  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0055  170F               	bsf	15,6	;volatile
  1104                           
  1105                           ;oscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  1106  0056  168F               	bsf	15,5	;volatile
  1107                           
  1108                           ;oscilador.c: 50:             OSCCONbits.IRCF0 = 1;
  1109  0057  160F               	bsf	15,4	;volatile
  1110                           
  1111                           ;oscilador.c: 51:             break;
  1112  0058  2881               	goto	l102
  1113  0059                     l110:	
  1114                           ;oscilador.c: 52:         default:
  1115                           
  1116                           
  1117                           ;oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1118  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1119  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1120  005B  170F               	bsf	15,6	;volatile
  1121                           
  1122                           ;oscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  1123  005C  168F               	bsf	15,5	;volatile
  1124                           
  1125                           ;oscilador.c: 55:             OSCCONbits.IRCF0 = 0;
  1126  005D  120F               	bcf	15,4	;volatile
  1127                           
  1128                           ;oscilador.c: 56:             break;
  1129  005E  2881               	goto	l102
  1130  005F                     l964:
  1131  005F  0830               	movf	initosc@IRCF,w
  1132  0060  00F4               	movwf	??_initosc
  1133  0061  01F5               	clrf	??_initosc+1
  1134                           
  1135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1136                           ; Switch size 1, requested type "simple"
  1137                           ; Number of cases is 1, Range of values is 0 to 0
  1138                           ; switch strategies available:
  1139                           ; Name         Instructions Cycles
  1140                           ; simple_byte            4     3 (average)
  1141                           ; direct_byte           11     8 (fixed)
  1142                           ; jumptable            260     6 (fixed)
  1143                           ;	Chosen strategy is simple_byte
  1144  0062  0875               	movf	??_initosc+1,w
  1145  0063  3A00               	xorlw	0	; case 0
  1146  0064  1903               	skipnz
  1147  0065  2867               	goto	l1112
  1148  0066  2859               	goto	l110
  1149  0067                     l1112:
  1150                           
  1151                           ; Switch size 1, requested type "simple"
  1152                           ; Number of cases is 8, Range of values is 0 to 7
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte           25    13 (average)
  1156                           ; direct_byte           32     8 (fixed)
  1157                           ; jumptable            260     6 (fixed)
  1158                           ;	Chosen strategy is simple_byte
  1159  0067  0874               	movf	??_initosc,w
  1160  0068  3A00               	xorlw	0	; case 0
  1161  0069  1903               	skipnz
  1162  006A  2829               	goto	l101
  1163  006B  3A01               	xorlw	1	; case 1
  1164  006C  1903               	skipnz
  1165  006D  282F               	goto	l103
  1166  006E  3A03               	xorlw	3	; case 2
  1167  006F  1903               	skipnz
  1168  0070  2835               	goto	l104
  1169  0071  3A01               	xorlw	1	; case 3
  1170  0072  1903               	skipnz
  1171  0073  283B               	goto	l105
  1172  0074  3A07               	xorlw	7	; case 4
  1173  0075  1903               	skipnz
  1174  0076  2841               	goto	l106
  1175  0077  3A01               	xorlw	1	; case 5
  1176  0078  1903               	skipnz
  1177  0079  2847               	goto	l107
  1178  007A  3A03               	xorlw	3	; case 6
  1179  007B  1903               	skipnz
  1180  007C  284D               	goto	l108
  1181  007D  3A01               	xorlw	1	; case 7
  1182  007E  1903               	skipnz
  1183  007F  2853               	goto	l109
  1184  0080  2859               	goto	l110
  1185  0081                     l102:
  1186                           
  1187                           ;oscilador.c: 58:     OSCCONbits.SCS = 1;
  1188  0081  140F               	bsf	15,0	;volatile
  1189  0082                     l111:
  1190  0082  0008               	return
  1191  0083                     __end_of_initosc:
  1192                           
  1193                           	psect	text3
  1194  016C                     __ptext3:	
  1195 ;; *************** function _conversion *****************
  1196 ;; Defined at:
  1197 ;;		line 17 in file "adc.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  channel         2    4[COMMON] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         2       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       1       0       0       0
  1214 ;;      Totals:         2       1       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _conversion
  1227  016C                     _conversion:
  1228  016C                     l1042:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1231                           
  1232                           
  1233                           ;adc.c: 18:     INTCONbits.GIE = 1;
  1234  016C  178B               	bsf	11,7	;volatile
  1235                           
  1236                           ;adc.c: 19:     INTCONbits.PEIE = 1;
  1237  016D  170B               	bsf	11,6	;volatile
  1238                           
  1239                           ;adc.c: 20:     PIE1bits.ADIE = 1;
  1240  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1241  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0170  170C               	bsf	12,6	;volatile
  1243                           
  1244                           ;adc.c: 21:     PIR1bits.ADIF = 0;
  1245  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0173  130C               	bcf	12,6	;volatile
  1248  0174                     l1044:
  1249                           
  1250                           ;adc.c: 22:     ADCON0=0b01000000;
  1251  0174  3040               	movlw	64
  1252  0175  009F               	movwf	31	;volatile
  1253  0176                     l1046:
  1254                           
  1255                           ;adc.c: 24:     ADCON1=0b00000000;
  1256  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0178  019F               	clrf	31	;volatile
  1259  0179                     l1048:
  1260                           
  1261                           ;adc.c: 25:     ADCON0bits.CHS=channel;
  1262  0179  0874               	movf	conversion@channel,w
  1263  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1264  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1265  017C  00B0               	movwf	??_conversion
  1266  017D  0DB0               	rlf	??_conversion,f
  1267  017E  0DB0               	rlf	??_conversion,f
  1268  017F  081F               	movf	31,w	;volatile
  1269  0180  0630               	xorwf	??_conversion,w
  1270  0181  39C3               	andlw	-61
  1271  0182  0630               	xorwf	??_conversion,w
  1272  0183  009F               	movwf	31	;volatile
  1273  0184                     l1050:
  1274                           
  1275                           ;adc.c: 26:     PIR1bits.ADIF = 0;
  1276  0184  130C               	bcf	12,6	;volatile
  1277  0185                     l126:
  1278  0185  0008               	return
  1279  0186                     __end_of_conversion:
  1280                           
  1281                           	psect	text4
  1282  0083                     __ptext4:	
  1283 ;; *************** function _ISR *****************
  1284 ;; Defined at:
  1285 ;;		line 177 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0
  1301 ;;      Temps:          4       0       0       0       0
  1302 ;;      Totals:         4       0       0       0       0
  1303 ;;Total ram usage:        4 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		_toggle
  1308 ;; This function is called by:
  1309 ;;		Interrupt level 1
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _ISR
  1315  0083                     _ISR:
  1316  0083                     i1l846:
  1317  0083  1C0B               	btfss	11,0	;volatile
  1318  0084  2886               	goto	u7_21
  1319  0085  2887               	goto	u7_20
  1320  0086                     u7_21:
  1321  0086  2892               	goto	i1l91
  1322  0087                     u7_20:
  1323  0087                     i1l848:
  1324  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0089  1806               	btfsc	6,0	;volatile
  1327  008A  288C               	goto	u8_21
  1328  008B  288D               	goto	u8_20
  1329  008C                     u8_21:
  1330  008C  2892               	goto	i1l91
  1331  008D                     u8_20:
  1332  008D                     i1l850:
  1333  008D  0808               	movf	8,w	;volatile
  1334  008E  3E01               	addlw	1
  1335  008F  0088               	movwf	8	;volatile
  1336  0090                     i1l852:
  1337  0090  100B               	bcf	11,0	;volatile
  1338  0091  28CE               	goto	i1l92
  1339  0092                     i1l91:
  1340  0092  1C0B               	btfss	11,0	;volatile
  1341  0093  2895               	goto	u9_21
  1342  0094  2896               	goto	u9_20
  1343  0095                     u9_21:
  1344  0095  28A1               	goto	i1l93
  1345  0096                     u9_20:
  1346  0096                     i1l856:
  1347  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0098  1886               	btfsc	6,1	;volatile
  1350  0099  289B               	goto	u10_21
  1351  009A  289C               	goto	u10_20
  1352  009B                     u10_21:
  1353  009B  28A1               	goto	i1l93
  1354  009C                     u10_20:
  1355  009C                     i1l858:
  1356  009C  0808               	movf	8,w	;volatile
  1357  009D  3EFF               	addlw	255
  1358  009E  0088               	movwf	8	;volatile
  1359  009F                     i1l860:
  1360  009F  100B               	bcf	11,0	;volatile
  1361  00A0  28CE               	goto	i1l92
  1362  00A1                     i1l93:
  1363  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1364  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1365  00A3  1F0C               	btfss	12,6	;volatile
  1366  00A4  28A6               	goto	u11_21
  1367  00A5  28A7               	goto	u11_20
  1368  00A6                     u11_21:
  1369  00A6  28C4               	goto	i1l94
  1370  00A7                     u11_20:
  1371  00A7                     i1l864:
  1372  00A7  130C               	bcf	12,6	;volatile
  1373  00A8  100B               	bcf	11,0	;volatile
  1374  00A9                     i1l866:
  1375  00A9  081E               	movf	30,w	;volatile
  1376  00AA  00F0               	movwf	??_ISR
  1377  00AB  0870               	movf	??_ISR,w
  1378  00AC  00F7               	movwf	_pato
  1379  00AD  0877               	movf	_pato,w
  1380  00AE  00F0               	movwf	??_ISR
  1381  00AF  0870               	movf	??_ISR,w
  1382  00B0  00F8               	movwf	_y
  1383  00B1                     i1l868:
  1384  00B1  0877               	movf	_pato,w
  1385  00B2  390F               	andlw	15
  1386  00B3  00F0               	movwf	??_ISR
  1387  00B4  0870               	movf	??_ISR,w
  1388  00B5  00F9               	movwf	_x
  1389  00B6                     i1l870:
  1390  00B6  0877               	movf	_pato,w
  1391  00B7  00F0               	movwf	??_ISR
  1392  00B8  3004               	movlw	4
  1393  00B9                     u12_25:
  1394  00B9  1003               	clrc
  1395  00BA  0CF0               	rrf	??_ISR,f
  1396  00BB  3EFF               	addlw	-1
  1397  00BC  1D03               	skipz
  1398  00BD  28B9               	goto	u12_25
  1399  00BE  0870               	movf	??_ISR,w
  1400  00BF  390F               	andlw	15
  1401  00C0  00F1               	movwf	??_ISR+1
  1402  00C1  0871               	movf	??_ISR+1,w
  1403  00C2  00F8               	movwf	_y
  1404  00C3  28CE               	goto	i1l92
  1405  00C4                     i1l94:
  1406  00C4  1D0B               	btfss	11,2	;volatile
  1407  00C5  28C7               	goto	u13_21
  1408  00C6  28C8               	goto	u13_20
  1409  00C7                     u13_21:
  1410  00C7  28CE               	goto	i1l92
  1411  00C8                     u13_20:
  1412  00C8                     i1l874:
  1413  00C8  120A  118A  21A9  120A  118A  	fcall	_toggle
  1414  00CD                     i1l876:
  1415  00CD  110B               	bcf	11,2	;volatile
  1416  00CE                     i1l92:
  1417  00CE  0873               	movf	??_ISR+3,w
  1418  00CF  008A               	movwf	10
  1419  00D0  0E72               	swapf	??_ISR+2,w
  1420  00D1  0083               	movwf	3
  1421  00D2  0EFE               	swapf	btemp,f
  1422  00D3  0E7E               	swapf	btemp,w
  1423  00D4  0009               	retfie
  1424  00D5                     __end_of_ISR:
  1425                           
  1426                           	psect	intentry
  1427  0004                     __pintentry:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1430                           
  1431  0004                     interrupt_function:
  1432  007E                     saved_w	set	btemp
  1433  0004  00FE               	movwf	btemp
  1434  0005  0E03               	swapf	3,w
  1435  0006  00F2               	movwf	??_ISR+2
  1436  0007  080A               	movf	10,w
  1437  0008  00F3               	movwf	??_ISR+3
  1438  0009  120A  118A  2883   	ljmp	_ISR
  1439                           
  1440                           	psect	text5
  1441  01A9                     __ptext5:	
  1442 ;; *************** function _toggle *****************
  1443 ;; Defined at:
  1444 ;;		line 163 in file "main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_ISR
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _toggle
  1473  01A9                     _toggle:
  1474  01A9                     i1l808:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _toggle: [wreg+status,2+status,0]
  1477                           
  1478                           
  1479                           ;main.c: 164:         return;
  1480  01A9  0876               	movf	_tog,w
  1481  01AA  1D03               	btfss	3,2
  1482  01AB  29AD               	goto	u1_21
  1483  01AC  29AE               	goto	u1_20
  1484  01AD                     u1_21:
  1485  01AD  29B0               	goto	i1l812
  1486  01AE                     u1_20:
  1487  01AE                     i1l810:
  1488                           
  1489                           ;main.c: 165:     }
  1490  01AE  01F6               	clrf	_tog
  1491  01AF  0AF6               	incf	_tog,f
  1492  01B0                     i1l812:
  1493                           
  1494                           ;main.c: 167: }
  1495  01B0  0376               	decf	_tog,w
  1496  01B1  1D03               	btfss	3,2
  1497  01B2  29B4               	goto	u2_21
  1498  01B3  29B5               	goto	u2_20
  1499  01B4                     u2_21:
  1500  01B4  29B6               	goto	i1l86
  1501  01B5                     u2_20:
  1502  01B5                     i1l814:
  1503  01B5  01F6               	clrf	_tog
  1504  01B6                     i1l86:
  1505  01B6  0008               	return
  1506  01B7                     __end_of_toggle:
  1507  007E                     btemp	set	126	;btemp
  1508  007E                     wtemp0	set	126
  1509                           
  1510                           	psect	config
  1511                           
  1512                           ;Config register CONFIG1 @ 0x2007
  1513                           ;	Oscillator Selection bits
  1514                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1515                           ;	Watchdog Timer Enable bit
  1516                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1517                           ;	Power-up Timer Enable bit
  1518                           ;	PWRTE = OFF, PWRT disabled
  1519                           ;	RE3/MCLR pin function select bit
  1520                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1521                           ;	Code Protection bit
  1522                           ;	CP = OFF, Program memory code protection is disabled
  1523                           ;	Data Code Protection bit
  1524                           ;	CPD = OFF, Data memory code protection is disabled
  1525                           ;	Brown Out Reset Selection bits
  1526                           ;	BOREN = OFF, BOR disabled
  1527                           ;	Internal External Switchover bit
  1528                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1529                           ;	Fail-Safe Clock Monitor Enabled bit
  1530                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1531                           ;	Low Voltage Programming Enable bit
  1532                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1533                           ;	In-Circuit Debugger Mode bit
  1534                           ;	DEBUG = 0x1, unprogrammed default
  1535  2007                     	org	8199
  1536  2007  20D1               	dw	8401
  1537                           
  1538                           ;Config register CONFIG2 @ 0x2008
  1539                           ;	Brown-out Reset Selection bit
  1540                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1541                           ;	Flash Program Memory Self Write Enable bits
  1542                           ;	WRT = OFF, Write protection off
  1543  2008                     	org	8200
  1544  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_conversion
    _setup->_initosc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _setup->_initosc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     143
                                              1 BANK0      2     2      0
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initosc
 ---------------------------------------------------------------------------------
 (2) _initosc                                              3     3      0      22
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     1      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                             _toggle
 ---------------------------------------------------------------------------------
 (4) _toggle                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _initosc

 _ISR (ROOT)
   _toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 10:23:04 2021

                      _x 0079                        _y 0078                        pc 0002  
                     l70 00F4                       l81 016B                       l75 011C  
                     fsr 0004                      l101 0029                      l110 0059  
                    l102 0081                      l111 0082                      l103 002F  
                    l104 0035                      l105 003B                      l106 0041  
                    l107 0047                      l108 004D                      l109 0053  
                    l126 0185                      l960 0028                      l964 005F  
                    l980 012C                      l972 0121                      l990 0131  
                    l982 012D                      l974 0127                      l992 0132  
                    l984 012E                      l976 012A                      l994 0133  
                    l986 012F                      l978 012B                      l996 0134  
                    l988 0130                      l998 0137                      u200 010C  
                    u201 010B                      u210 011B                      u211 011A  
                    u227 00EC                      u180 00F8                      u181 00F7  
                    u190 00FD                      u191 00FC                      _ISR 0083  
                    _tog 0076                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     l1000 013A                     l1010 013F  
                   l1002 013B                     l1020 014A                     l1012 0140  
                   l1004 013C                     l1030 0159                     l1022 014C  
                   l1014 0141                     l1006 013D                     l1112 0067  
                   l1040 0168                     l1032 015C                     l1024 014F  
                   l1016 0143                     l1008 013E                     l1050 0184  
                   l1042 016C                     l1034 015F                     l1026 0152  
                   l1018 0147                     l1044 0174                     l1036 0162  
                   l1028 0156                     l1060 00F1                     l1052 00D5  
                   l1046 0176                     l1038 0165                     l1070 0107  
                   l1062 00F8                     l1054 00DA                     l1048 0179  
                   l1080 011B                     l1072 010C                     l1064 00FD  
                   l1056 00E3                     l1074 010E                     l1066 00FF  
                   l1058 00E6                     l1076 0114                     l1068 0105  
                   l1078 0115                     i1l91 0092                     i1l92 00CE  
                   i1l93 00A1                     i1l86 01B6                     i1l94 00C4  
                   _TMR0 0001                     u1_20 01AE                     u1_21 01AD  
                   u2_20 01B5                     u2_21 01B4                     u7_20 0087  
                   u7_21 0086                     u8_20 008D                     u8_21 008C  
                   u9_20 0096                     u9_21 0095                     _main 00D5  
                   _pato 0077                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l810 01AE                    i1l812 01B0                    i1l814 01B5  
                  i1l808 01A9                    i1l850 008D                    i1l860 009F  
                  i1l852 0090                    i1l870 00B6                    i1l846 0083  
                  i1l864 00A7                    i1l856 0096                    i1l848 0087  
                  i1l874 00C8                    i1l866 00A9                    i1l858 009C  
                  i1l876 00CD                    i1l868 00B1                    u10_20 009C  
                  u10_21 009B                    u11_20 00A7                    u11_21 00A6  
                  u12_25 00B9                    u13_20 00C8                    u13_21 00C7  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089          __end_of_initosc 0083                    _setup 0121  
                  pclath 000A                    status 0003                    wtemp0 007E  
      conversion@channel 0074          __initialization 000F             __end_of_main 0121  
                 ??_main 0031                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _toggle 01A9                ??_initosc 0074                   saved_w 007E  
            initosc@IRCF 0030  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 0199            __end_of_setup 016C           _OPTION_REGbits 0081  
                ??_setup 0076               __pmaintext 00D5               __pintentry 0004  
                ?_toggle 0070               _conversion 016C                  __ptext1 0121  
                __ptext2 0025                  __ptext3 016C                  __ptext4 0083  
                __ptext5 01A9          __size_of_toggle 000E             __size_of_ISR 0052  
                _initosc 0025     end_of_initialization 0021                _PORTBbits 0006  
              _PORTEbits 0009              ?_conversion 0074           __end_of_toggle 01B7  
    start_initialization 000F              __end_of_ISR 00D5               init_fetch0 0186  
            __pdataBANK0 0020                 ??_toggle 0070      __size_of_conversion 001A  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0030  
               ?_initosc 0070           __size_of_setup 004B        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                _segmentos 0020  
               _PIR1bits 000C               _ADCON0bits 001F             ??_conversion 0030  
     __end_of_conversion 0186         __size_of_initosc 005E            __size_of_main 004C  
             _INTCONbits 000B                 init_ram0 018A                 intlevel1 0000  
             _OSCCONbits 008F  
