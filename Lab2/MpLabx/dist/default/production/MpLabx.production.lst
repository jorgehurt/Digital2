

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 10:17:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  018E                     __pidataBANK0:
   370                           
   371                           ;initializer for _segmentos
   372  018E  343F               	retlw	63
   373  018F  3406               	retlw	6
   374  0190  345B               	retlw	91
   375  0191  344F               	retlw	79
   376  0192  3466               	retlw	102
   377  0193  346D               	retlw	109
   378  0194  347D               	retlw	125
   379  0195  3407               	retlw	7
   380  0196  347F               	retlw	127
   381  0197  346F               	retlw	111
   382  0198  3477               	retlw	119
   383  0199  347C               	retlw	124
   384  019A  3439               	retlw	57
   385  019B  345E               	retlw	94
   386  019C  3479               	retlw	121
   387  019D  3471               	retlw	113
   388  001F                     _ADCON0	set	31
   389  001E                     _ADRESH	set	30
   390  0006                     _PORTBbits	set	6
   391  0009                     _PORTE	set	9
   392  0008                     _PORTD	set	8
   393  0006                     _PORTB	set	6
   394  0005                     _PORTA	set	5
   395  0001                     _TMR0	set	1
   396  000C                     _PIR1bits	set	12
   397  000B                     _INTCONbits	set	11
   398  0007                     _PORTC	set	7
   399  0009                     _PORTEbits	set	9
   400  001F                     _ADCON0bits	set	31
   401  009F                     _ADCON1	set	159
   402  0089                     _TRISE	set	137
   403  0088                     _TRISD	set	136
   404  0087                     _TRISC	set	135
   405  0086                     _TRISB	set	134
   406  0085                     _TRISA	set	133
   407  0081                     _OPTION_REGbits	set	129
   408  0096                     _IOCBbits	set	150
   409  008C                     _PIE1bits	set	140
   410  008F                     _OSCCONbits	set	143
   411  0189                     _ANSELH	set	393
   412  0188                     _ANSEL	set	392
   413                           
   414                           	psect	cinit
   415  000F                     start_initialization:	
   416                           ; #config settings
   417                           
   418  000F                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421  000F  1383               	bcf	3,7	;select IRP bank0
   422  0010  3030               	movlw	low (__pdataBANK0+16)
   423  0011  00FD               	movwf	btemp+-1
   424  0012  3001               	movlw	high __pidataBANK0
   425  0013  00FE               	movwf	btemp
   426  0014  308E               	movlw	low __pidataBANK0
   427  0015  00FF               	movwf	btemp+1
   428  0016  3020               	movlw	low __pdataBANK0
   429  0017  0084               	movwf	4
   430  0018  120A  118A  217F  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to COMMON
   433  001D  01F6               	clrf	__pbssCOMMON& (0+127)
   434  001E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   435  001F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   436  0020  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   437  0021                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  0021                     __end_of__initialization:
   441  0021  0183               	clrf	3
   442  0022  120A  118A  291D   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  0076                     __pbssCOMMON:
   446  0076                     _tog:
   447  0076                     	ds	1
   448  0077                     _pato:
   449  0077                     	ds	1
   450  0078                     _y:
   451  0078                     	ds	1
   452  0079                     _x:
   453  0079                     	ds	1
   454                           
   455                           	psect	dataBANK0
   456  0020                     __pdataBANK0:
   457  0020                     _segmentos:
   458  0020                     	ds	16
   459                           
   460                           	psect	inittext
   461  017B                     init_fetch0:	
   462                           ;	Called with low address in FSR and high address in W
   463                           
   464  017B  087E               	movf	btemp,w
   465  017C  008A               	movwf	10
   466  017D  087F               	movf	btemp+1,w
   467  017E  0082               	movwf	2
   468  017F                     init_ram0:	
   469                           ;Called with:
   470                           ;	high address of idata address in btemp 
   471                           ;	low address of idata address in btemp+1 
   472                           ;	low address of data in FSR
   473                           ;	high address + 1 of data in btemp-1
   474                           
   475  017F  120A  118A  217B  120A  118A  	fcall	init_fetch0
   476  0184  0080               	movwf	0
   477  0185  0A84               	incf	4,f
   478  0186  0804               	movf	4,w
   479  0187  067D               	xorwf	btemp+-1,w
   480  0188  1903               	btfsc	3,2
   481  0189  3400               	retlw	0
   482  018A  0AFF               	incf	btemp+1,f
   483  018B  1903               	btfsc	3,2
   484  018C  0AFE               	incf	btemp,f
   485  018D  297F               	goto	init_ram0
   486                           
   487                           	psect	cstackCOMMON
   488  0070                     __pcstackCOMMON:
   489  0070                     ?_setup:
   490  0070                     ?_initosc:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_toggle:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_toggle:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_ISR:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508                           
   509                           ; 1 bytes @ 0x0
   510  0070                     	ds	4
   511  0074                     ?_conversion:
   512  0074                     ??_initosc:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     conversion@channel:	
   516                           ; 1 bytes @ 0x4
   517                           
   518                           
   519                           ; 2 bytes @ 0x4
   520  0074                     	ds	2
   521  0076                     ??_setup:
   522                           
   523                           	psect	cstackBANK0
   524  0030                     __pcstackBANK0:	
   525                           ; 1 bytes @ 0x6
   526                           
   527  0030                     ??_conversion:
   528  0030                     initosc@IRCF:	
   529                           ; 1 bytes @ 0x0
   530                           
   531                           
   532                           ; 1 bytes @ 0x0
   533  0030                     	ds	1
   534  0031                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x1
   537  0031                     	ds	2
   538                           
   539                           	psect	maintext
   540  011D                     __pmaintext:	
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 76 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : B00/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0
   562 ;;      Temps:          0       2       0       0       0
   563 ;;      Totals:         0       2       0       0       0
   564 ;;Total ram usage:        2 bytes
   565 ;; Hardware stack levels required when called:    4
   566 ;; This function calls:
   567 ;;		_conversion
   568 ;;		_setup
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _main
   576  011D                     _main:
   577  011D                     l1041:	
   578                           ;incstack = 0
   579                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;main.c: 78:     OSCCONbits.HTS = 0;
   583  011D  120A  118A  20D2  120A  118A  	fcall	_setup
   584  0122                     l1043:
   585                           
   586                           ;main.c: 84:     INTCONbits.T0IE = 1;
   587  0122  30E8               	movlw	232
   588  0123  00F4               	movwf	conversion@channel
   589  0124  3003               	movlw	3
   590  0125  00F5               	movwf	conversion@channel+1
   591  0126  120A  118A  2161  120A  118A  	fcall	_conversion
   592  012B                     l1045:
   593                           
   594                           ;main.c: 85:     INTCONbits.INTE = 1;
   595  012B  1283               	bcf	3,5	;RP0=0, select bank0
   596  012C  1303               	bcf	3,6	;RP1=0, select bank0
   597  012D  141F               	bsf	31,0	;volatile
   598  012E                     l1047:
   599                           
   600                           ;main.c: 86:     PIE1bits.ADIE = 1;
   601  012E  301A               	movlw	26
   602  012F  1283               	bcf	3,5	;RP0=0, select bank0
   603  0130  1303               	bcf	3,6	;RP1=0, select bank0
   604  0131  00B2               	movwf	??_main+1
   605  0132  30F7               	movlw	247
   606  0133  00B1               	movwf	??_main
   607  0134                     u197:
   608  0134  0BB1               	decfsz	??_main,f
   609  0135  2934               	goto	u197
   610  0136  0BB2               	decfsz	??_main+1,f
   611  0137  2934               	goto	u197
   612  0138  2939               	nop2
   613  0139                     l1049:
   614                           
   615                           ;main.c: 87: 
   616  0139  1283               	bcf	3,5	;RP0=0, select bank0
   617  013A  1303               	bcf	3,6	;RP1=0, select bank0
   618  013B  149F               	bsf	31,1	;volatile
   619  013C                     l70:	
   620                           ;main.c: 88:     INTCONbits.T0IF = 0;
   621                           
   622  013C  189F               	btfsc	31,1	;volatile
   623  013D  293F               	goto	u161
   624  013E  2940               	goto	u160
   625  013F                     u161:
   626  013F  293C               	goto	l70
   627  0140                     u160:
   628  0140                     l1051:
   629                           
   630                           ;main.c: 89:     INTCONbits.RBIF = 0;
   631  0140  0876               	movf	_tog,w
   632  0141  1D03               	btfss	3,2
   633  0142  2944               	goto	u171
   634  0143  2945               	goto	u170
   635  0144                     u171:
   636  0144  294F               	goto	l1059
   637  0145                     u170:
   638  0145                     l1053:
   639                           
   640                           ;main.c: 90:     PIR1bits.ADIF = 0;
   641  0145  1409               	bsf	9,0	;volatile
   642                           
   643                           ;main.c: 91: 
   644  0146  1089               	bcf	9,1	;volatile
   645  0147                     l1055:
   646                           
   647                           ;main.c: 92:     IOCBbits.IOCB0 = 1;
   648  0147  0878               	movf	_y,w
   649  0148  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   650  0149  0084               	movwf	4
   651  014A  1383               	bcf	3,7	;select IRP bank0
   652  014B  0800               	movf	0,w
   653  014C  0087               	movwf	7	;volatile
   654  014D                     l1057:
   655                           
   656                           ;main.c: 93:     IOCBbits.IOCB1 = 1;
   657  014D  01F6               	clrf	_tog
   658  014E  0AF6               	incf	_tog,f
   659  014F                     l1059:
   660                           
   661                           ;main.c: 96: 
   662  014F  0376               	decf	_tog,w
   663  0150  1D03               	btfss	3,2
   664  0151  2953               	goto	u181
   665  0152  2954               	goto	u180
   666  0153                     u181:
   667  0153  2922               	goto	l1043
   668  0154                     u180:
   669  0154                     l1061:
   670                           
   671                           ;main.c: 97:     OPTION_REGbits.nRBPU = 1;
   672  0154  1009               	bcf	9,0	;volatile
   673                           
   674                           ;main.c: 98:     OPTION_REGbits.INTEDG = 0;
   675  0155  1489               	bsf	9,1	;volatile
   676  0156                     l1063:
   677                           
   678                           ;main.c: 99:     OPTION_REGbits.T0CS = 0;
   679  0156  0879               	movf	_x,w
   680  0157  3E20               	addlw	(low (_segmentos| 0))& (0+255)
   681  0158  0084               	movwf	4
   682  0159  1383               	bcf	3,7	;select IRP bank0
   683  015A  0800               	movf	0,w
   684  015B  0087               	movwf	7	;volatile
   685  015C                     l1065:
   686                           
   687                           ;main.c: 100:     OPTION_REGbits.T0SE = 0;
   688  015C  01F6               	clrf	_tog
   689  015D  2922               	goto	l1043
   690  015E  120A  118A  280C   	ljmp	start
   691  0161                     __end_of_main:
   692                           
   693                           	psect	text1
   694  00D2                     __ptext1:	
   695 ;; *************** function _setup *****************
   696 ;; Defined at:
   697 ;;		line 111 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    3
   718 ;; This function calls:
   719 ;;		_initosc
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _setup
   727  00D2                     _setup:
   728  00D2                     l961:	
   729                           ;incstack = 0
   730                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   731                           
   732                           
   733                           ;main.c: 113:     PORTD = 0;
   734  00D2  3007               	movlw	7
   735  00D3  120A  118A  2025  120A  118A  	fcall	_initosc
   736  00D8                     l963:
   737                           
   738                           ;main.c: 114:     TRISE = 0;
   739  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   740  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   741  00DA  118F               	bcf	15,3	;volatile
   742  00DB                     l965:
   743                           
   744                           ;main.c: 115:     PORTE = 0;
   745  00DB  110F               	bcf	15,2	;volatile
   746  00DC                     l967:
   747                           
   748                           ;main.c: 116: }
   749  00DC  108F               	bcf	15,1	;volatile
   750  00DD                     l969:
   751                           
   752                           ;main.c: 118: 
   753  00DD  178B               	bsf	11,7	;volatile
   754  00DE                     l971:
   755                           
   756                           ;main.c: 119: 
   757  00DE  170B               	bsf	11,6	;volatile
   758  00DF                     l973:
   759                           
   760                           ;main.c: 120: 
   761  00DF  158B               	bsf	11,3	;volatile
   762  00E0                     l975:
   763                           
   764                           ;main.c: 121: 
   765  00E0  168B               	bsf	11,5	;volatile
   766  00E1                     l977:
   767                           
   768                           ;main.c: 122: void toggle(void) {
   769  00E1  160B               	bsf	11,4	;volatile
   770  00E2                     l979:
   771                           
   772                           ;main.c: 123:     if (tog == 0) {
   773  00E2  170C               	bsf	12,6	;volatile
   774  00E3                     l981:
   775                           
   776                           ;main.c: 125:     }
   777  00E3  110B               	bcf	11,2	;volatile
   778  00E4                     l983:
   779                           
   780                           ;main.c: 126:     if (tog == 1) {
   781  00E4  100B               	bcf	11,0	;volatile
   782  00E5                     l985:
   783                           
   784                           ;main.c: 127:         tog = 0;
   785  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   786  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   787  00E7  130C               	bcf	12,6	;volatile
   788  00E8                     l987:
   789                           
   790                           ;main.c: 129: }
   791  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   792  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   793  00EA  1416               	bsf	22,0	;volatile
   794  00EB                     l989:
   795                           
   796                           ;main.c: 130: 
   797  00EB  1496               	bsf	22,1	;volatile
   798  00EC                     l991:
   799                           
   800                           ;main.c: 131: 
   801  00EC  1516               	bsf	22,2	;volatile
   802  00ED                     l993:
   803                           
   804                           ;main.c: 134: 
   805  00ED  1781               	bsf	1,7	;volatile
   806  00EE                     l995:
   807                           
   808                           ;main.c: 135: 
   809  00EE  1301               	bcf	1,6	;volatile
   810  00EF                     l997:
   811                           
   812                           ;main.c: 136: void __attribute__((picinterrupt(("")))) ISR() {
   813  00EF  1281               	bcf	1,5	;volatile
   814  00F0                     l999:
   815                           
   816                           ;main.c: 137:     if (INTCONbits.RBIF == 1 && PORTBbits.RB0 == 0) {
   817  00F0  1201               	bcf	1,4	;volatile
   818  00F1                     l1001:
   819                           
   820                           ;main.c: 138:         PORTD = PORTD + 1;
   821  00F1  1181               	bcf	1,3	;volatile
   822  00F2                     l1003:
   823                           
   824                           ;main.c: 139:         INTCONbits.RBIF = 0;
   825  00F2  30F8               	movlw	-8
   826  00F3  0581               	andwf	1,f	;volatile
   827  00F4                     l1005:
   828                           
   829                           ;main.c: 140:     }
   830  00F4  3002               	movlw	2
   831  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   832  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   833  00F7  0081               	movwf	1	;volatile
   834  00F8                     l1007:
   835                           
   836                           ;main.c: 141:     if (INTCONbits.RBIF == 1 && PORTBbits.RB1 == 0) {
   837  00F8  1683               	bsf	3,5	;RP0=1, select bank3
   838  00F9  1703               	bsf	3,6	;RP1=1, select bank3
   839  00FA  0188               	clrf	8	;volatile
   840  00FB                     l1009:
   841                           
   842                           ;main.c: 142:         PORTD = PORTD - 1;
   843  00FB  3001               	movlw	1
   844  00FC  0089               	movwf	9	;volatile
   845  00FD                     l1011:
   846                           
   847                           ;main.c: 143:         INTCONbits.RBIF = 0;
   848  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   849  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   850  00FF  0185               	clrf	5	;volatile
   851  0100                     l1013:
   852                           
   853                           ;main.c: 144:     }
   854  0100  1283               	bcf	3,5	;RP0=0, select bank0
   855  0101  1303               	bcf	3,6	;RP1=0, select bank0
   856  0102  0185               	clrf	5	;volatile
   857  0103                     l1015:
   858                           
   859                           ;main.c: 145:     if (PIR1bits.ADIF == 1) {
   860  0103  3007               	movlw	7
   861  0104  1683               	bsf	3,5	;RP0=1, select bank1
   862  0105  1303               	bcf	3,6	;RP1=0, select bank1
   863  0106  0086               	movwf	6	;volatile
   864  0107                     l1017:
   865                           
   866                           ;main.c: 146:         PIR1bits.ADIF = 0;
   867  0107  1283               	bcf	3,5	;RP0=0, select bank0
   868  0108  1303               	bcf	3,6	;RP1=0, select bank0
   869  0109  0186               	clrf	6	;volatile
   870  010A                     l1019:
   871                           
   872                           ;main.c: 147:         INTCONbits.RBIF = 0;
   873  010A  1683               	bsf	3,5	;RP0=1, select bank1
   874  010B  1303               	bcf	3,6	;RP1=0, select bank1
   875  010C  0187               	clrf	7	;volatile
   876  010D                     l1021:
   877                           
   878                           ;main.c: 148:         pato = ADRESH;
   879  010D  1283               	bcf	3,5	;RP0=0, select bank0
   880  010E  1303               	bcf	3,6	;RP1=0, select bank0
   881  010F  0187               	clrf	7	;volatile
   882  0110                     l1023:
   883                           
   884                           ;main.c: 149:         y = pato;
   885  0110  1683               	bsf	3,5	;RP0=1, select bank1
   886  0111  1303               	bcf	3,6	;RP1=0, select bank1
   887  0112  0188               	clrf	8	;volatile
   888  0113                     l1025:
   889                           
   890                           ;main.c: 150:         x = pato & 0x0F;
   891  0113  1283               	bcf	3,5	;RP0=0, select bank0
   892  0114  1303               	bcf	3,6	;RP1=0, select bank0
   893  0115  0188               	clrf	8	;volatile
   894  0116                     l1027:
   895                           
   896                           ;main.c: 151:         y = ((pato & 0xF0) >> 4);
   897  0116  1683               	bsf	3,5	;RP0=1, select bank1
   898  0117  1303               	bcf	3,6	;RP1=0, select bank1
   899  0118  0189               	clrf	9	;volatile
   900  0119                     l1029:
   901                           
   902                           ;main.c: 152: 
   903  0119  1283               	bcf	3,5	;RP0=0, select bank0
   904  011A  1303               	bcf	3,6	;RP1=0, select bank0
   905  011B  0189               	clrf	9	;volatile
   906  011C                     l80:
   907  011C  0008               	return
   908  011D                     __end_of_setup:
   909                           
   910                           	psect	text2
   911  0025                     __ptext2:	
   912 ;; *************** function _initosc *****************
   913 ;; Defined at:
   914 ;;		line 8 in file "oscilador.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  IRCF            1    wreg     unsigned char 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  IRCF            1    0[BANK0 ] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       1       0       0       0
   930 ;;      Temps:          2       0       0       0       0
   931 ;;      Totals:         2       1       0       0       0
   932 ;;Total ram usage:        3 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_setup
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _initosc
   944  0025                     _initosc:
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _initosc: [wreg-fsr0h+status,2+status,0]
   948                           ;initosc@IRCF stored from wreg
   949  0025  1283               	bcf	3,5	;RP0=0, select bank0
   950  0026  1303               	bcf	3,6	;RP1=0, select bank0
   951  0027  00B0               	movwf	initosc@IRCF
   952  0028                     l949:
   953                           
   954                           ;oscilador.c: 10:     switch(IRCF){
   955  0028  285F               	goto	l953
   956  0029                     l100:	
   957                           ;oscilador.c: 11:         case 0:
   958                           
   959                           
   960                           ;oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   961  0029  1683               	bsf	3,5	;RP0=1, select bank1
   962  002A  1303               	bcf	3,6	;RP1=0, select bank1
   963  002B  130F               	bcf	15,6	;volatile
   964                           
   965                           ;oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   966  002C  128F               	bcf	15,5	;volatile
   967                           
   968                           ;oscilador.c: 14:             OSCCONbits.IRCF0 = 0;
   969  002D  120F               	bcf	15,4	;volatile
   970                           
   971                           ;oscilador.c: 15:             break;
   972  002E  2881               	goto	l101
   973  002F                     l102:	
   974                           ;oscilador.c: 17:         case 1:
   975                           
   976                           
   977                           ;oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   978  002F  1683               	bsf	3,5	;RP0=1, select bank1
   979  0030  1303               	bcf	3,6	;RP1=0, select bank1
   980  0031  130F               	bcf	15,6	;volatile
   981                           
   982                           ;oscilador.c: 19:             OSCCONbits.IRCF1 = 0;
   983  0032  128F               	bcf	15,5	;volatile
   984                           
   985                           ;oscilador.c: 20:             OSCCONbits.IRCF0 = 1;
   986  0033  160F               	bsf	15,4	;volatile
   987                           
   988                           ;oscilador.c: 21:             break;
   989  0034  2881               	goto	l101
   990  0035                     l103:	
   991                           ;oscilador.c: 22:         case 2:
   992                           
   993                           
   994                           ;oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   995  0035  1683               	bsf	3,5	;RP0=1, select bank1
   996  0036  1303               	bcf	3,6	;RP1=0, select bank1
   997  0037  130F               	bcf	15,6	;volatile
   998                           
   999                           ;oscilador.c: 24:             OSCCONbits.IRCF1 = 1;
  1000  0038  168F               	bsf	15,5	;volatile
  1001                           
  1002                           ;oscilador.c: 25:             OSCCONbits.IRCF0 = 0;
  1003  0039  120F               	bcf	15,4	;volatile
  1004                           
  1005                           ;oscilador.c: 26:             break;
  1006  003A  2881               	goto	l101
  1007  003B                     l104:	
  1008                           ;oscilador.c: 27:         case 3:
  1009                           
  1010                           
  1011                           ;oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
  1012  003B  1683               	bsf	3,5	;RP0=1, select bank1
  1013  003C  1303               	bcf	3,6	;RP1=0, select bank1
  1014  003D  130F               	bcf	15,6	;volatile
  1015                           
  1016                           ;oscilador.c: 29:             OSCCONbits.IRCF1 = 1;
  1017  003E  168F               	bsf	15,5	;volatile
  1018                           
  1019                           ;oscilador.c: 30:             OSCCONbits.IRCF0 = 1;
  1020  003F  160F               	bsf	15,4	;volatile
  1021                           
  1022                           ;oscilador.c: 31:             break;
  1023  0040  2881               	goto	l101
  1024  0041                     l105:	
  1025                           ;oscilador.c: 32:         case 4:
  1026                           
  1027                           
  1028                           ;oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1029  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0043  170F               	bsf	15,6	;volatile
  1032                           
  1033                           ;oscilador.c: 34:             OSCCONbits.IRCF1 = 0;
  1034  0044  128F               	bcf	15,5	;volatile
  1035                           
  1036                           ;oscilador.c: 35:             OSCCONbits.IRCF0 = 0;
  1037  0045  120F               	bcf	15,4	;volatile
  1038                           
  1039                           ;oscilador.c: 36:             break;
  1040  0046  2881               	goto	l101
  1041  0047                     l106:	
  1042                           ;oscilador.c: 37:         case 5:
  1043                           
  1044                           
  1045                           ;oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1046  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1047  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1048  0049  170F               	bsf	15,6	;volatile
  1049                           
  1050                           ;oscilador.c: 39:             OSCCONbits.IRCF1 = 0;
  1051  004A  128F               	bcf	15,5	;volatile
  1052                           
  1053                           ;oscilador.c: 40:             OSCCONbits.IRCF0 = 1;
  1054  004B  160F               	bsf	15,4	;volatile
  1055                           
  1056                           ;oscilador.c: 41:             break;
  1057  004C  2881               	goto	l101
  1058  004D                     l107:	
  1059                           ;oscilador.c: 42:         case 6:
  1060                           
  1061                           
  1062                           ;oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1063  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1064  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1065  004F  170F               	bsf	15,6	;volatile
  1066                           
  1067                           ;oscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  1068  0050  168F               	bsf	15,5	;volatile
  1069                           
  1070                           ;oscilador.c: 45:             OSCCONbits.IRCF0 = 0;
  1071  0051  120F               	bcf	15,4	;volatile
  1072                           
  1073                           ;oscilador.c: 46:             break;
  1074  0052  2881               	goto	l101
  1075  0053                     l108:	
  1076                           ;oscilador.c: 47:         case 7:
  1077                           
  1078                           
  1079                           ;oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1080  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1081  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0055  170F               	bsf	15,6	;volatile
  1083                           
  1084                           ;oscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  1085  0056  168F               	bsf	15,5	;volatile
  1086                           
  1087                           ;oscilador.c: 50:             OSCCONbits.IRCF0 = 1;
  1088  0057  160F               	bsf	15,4	;volatile
  1089                           
  1090                           ;oscilador.c: 51:             break;
  1091  0058  2881               	goto	l101
  1092  0059                     l109:	
  1093                           ;oscilador.c: 52:         default:
  1094                           
  1095                           
  1096                           ;oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1097  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1098  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1099  005B  170F               	bsf	15,6	;volatile
  1100                           
  1101                           ;oscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  1102  005C  168F               	bsf	15,5	;volatile
  1103                           
  1104                           ;oscilador.c: 55:             OSCCONbits.IRCF0 = 0;
  1105  005D  120F               	bcf	15,4	;volatile
  1106                           
  1107                           ;oscilador.c: 56:             break;
  1108  005E  2881               	goto	l101
  1109  005F                     l953:
  1110  005F  0830               	movf	initosc@IRCF,w
  1111  0060  00F4               	movwf	??_initosc
  1112  0061  01F5               	clrf	??_initosc+1
  1113                           
  1114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 1, Range of values is 0 to 0
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte            4     3 (average)
  1120                           ; direct_byte           11     8 (fixed)
  1121                           ; jumptable            260     6 (fixed)
  1122                           ;	Chosen strategy is simple_byte
  1123  0062  0875               	movf	??_initosc+1,w
  1124  0063  3A00               	xorlw	0	; case 0
  1125  0064  1903               	skipnz
  1126  0065  2867               	goto	l1097
  1127  0066  2859               	goto	l109
  1128  0067                     l1097:
  1129                           
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 8, Range of values is 0 to 7
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte           25    13 (average)
  1135                           ; direct_byte           32     8 (fixed)
  1136                           ; jumptable            260     6 (fixed)
  1137                           ;	Chosen strategy is simple_byte
  1138  0067  0874               	movf	??_initosc,w
  1139  0068  3A00               	xorlw	0	; case 0
  1140  0069  1903               	skipnz
  1141  006A  2829               	goto	l100
  1142  006B  3A01               	xorlw	1	; case 1
  1143  006C  1903               	skipnz
  1144  006D  282F               	goto	l102
  1145  006E  3A03               	xorlw	3	; case 2
  1146  006F  1903               	skipnz
  1147  0070  2835               	goto	l103
  1148  0071  3A01               	xorlw	1	; case 3
  1149  0072  1903               	skipnz
  1150  0073  283B               	goto	l104
  1151  0074  3A07               	xorlw	7	; case 4
  1152  0075  1903               	skipnz
  1153  0076  2841               	goto	l105
  1154  0077  3A01               	xorlw	1	; case 5
  1155  0078  1903               	skipnz
  1156  0079  2847               	goto	l106
  1157  007A  3A03               	xorlw	3	; case 6
  1158  007B  1903               	skipnz
  1159  007C  284D               	goto	l107
  1160  007D  3A01               	xorlw	1	; case 7
  1161  007E  1903               	skipnz
  1162  007F  2853               	goto	l108
  1163  0080  2859               	goto	l109
  1164  0081                     l101:
  1165                           
  1166                           ;oscilador.c: 58:     OSCCONbits.SCS = 1;
  1167  0081  140F               	bsf	15,0	;volatile
  1168  0082                     l110:
  1169  0082  0008               	return
  1170  0083                     __end_of_initosc:
  1171                           
  1172                           	psect	text3
  1173  0161                     __ptext3:	
  1174 ;; *************** function _conversion *****************
  1175 ;; Defined at:
  1176 ;;		line 17 in file "adc.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  channel         2    4[COMMON] int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         2       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0
  1192 ;;      Temps:          0       1       0       0       0
  1193 ;;      Totals:         2       1       0       0       0
  1194 ;;Total ram usage:        3 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _conversion
  1206  0161                     _conversion:
  1207  0161                     l1031:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1210                           
  1211                           
  1212                           ;adc.c: 18:     INTCONbits.GIE = 1;
  1213  0161  178B               	bsf	11,7	;volatile
  1214                           
  1215                           ;adc.c: 19:     INTCONbits.PEIE = 1;
  1216  0162  170B               	bsf	11,6	;volatile
  1217                           
  1218                           ;adc.c: 20:     PIE1bits.ADIE = 1;
  1219  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1220  0164  1303               	bcf	3,6	;RP1=0, select bank1
  1221  0165  170C               	bsf	12,6	;volatile
  1222                           
  1223                           ;adc.c: 21:     PIR1bits.ADIF = 0;
  1224  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0168  130C               	bcf	12,6	;volatile
  1227  0169                     l1033:
  1228                           
  1229                           ;adc.c: 22:     ADCON0=0b01000000;
  1230  0169  3040               	movlw	64
  1231  016A  009F               	movwf	31	;volatile
  1232  016B                     l1035:
  1233                           
  1234                           ;adc.c: 24:     ADCON1=0b00000000;
  1235  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1236  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1237  016D  019F               	clrf	31	;volatile
  1238  016E                     l1037:
  1239                           
  1240                           ;adc.c: 25:     ADCON0bits.CHS=channel;
  1241  016E  0874               	movf	conversion@channel,w
  1242  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0171  00B0               	movwf	??_conversion
  1245  0172  0DB0               	rlf	??_conversion,f
  1246  0173  0DB0               	rlf	??_conversion,f
  1247  0174  081F               	movf	31,w	;volatile
  1248  0175  0630               	xorwf	??_conversion,w
  1249  0176  39C3               	andlw	-61
  1250  0177  0630               	xorwf	??_conversion,w
  1251  0178  009F               	movwf	31	;volatile
  1252  0179                     l1039:
  1253                           
  1254                           ;adc.c: 26:     PIR1bits.ADIF = 0;
  1255  0179  130C               	bcf	12,6	;volatile
  1256  017A                     l125:
  1257  017A  0008               	return
  1258  017B                     __end_of_conversion:
  1259                           
  1260                           	psect	text4
  1261  0083                     __ptext4:	
  1262 ;; *************** function _ISR *****************
  1263 ;; Defined at:
  1264 ;;		line 173 in file "main.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          4       0       0       0       0
  1281 ;;      Totals:         4       0       0       0       0
  1282 ;;Total ram usage:        4 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    1
  1285 ;; This function calls:
  1286 ;;		_toggle
  1287 ;; This function is called by:
  1288 ;;		Interrupt level 1
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _ISR
  1294  0083                     _ISR:
  1295  0083                     i1l841:
  1296  0083  1C0B               	btfss	11,0	;volatile
  1297  0084  2886               	goto	u6_21
  1298  0085  2887               	goto	u6_20
  1299  0086                     u6_21:
  1300  0086  2891               	goto	i1l849
  1301  0087                     u6_20:
  1302  0087                     i1l843:
  1303  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0089  1806               	btfsc	6,0	;volatile
  1306  008A  288C               	goto	u7_21
  1307  008B  288D               	goto	u7_20
  1308  008C                     u7_21:
  1309  008C  2891               	goto	i1l849
  1310  008D                     u7_20:
  1311  008D                     i1l845:
  1312  008D  0808               	movf	8,w	;volatile
  1313  008E  3E01               	addlw	1
  1314  008F  0088               	movwf	8	;volatile
  1315  0090                     i1l847:
  1316  0090  100B               	bcf	11,0	;volatile
  1317  0091                     i1l849:
  1318  0091  1C0B               	btfss	11,0	;volatile
  1319  0092  2894               	goto	u8_21
  1320  0093  2895               	goto	u8_20
  1321  0094                     u8_21:
  1322  0094  289F               	goto	i1l857
  1323  0095                     u8_20:
  1324  0095                     i1l851:
  1325  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0097  1886               	btfsc	6,1	;volatile
  1328  0098  289A               	goto	u9_21
  1329  0099  289B               	goto	u9_20
  1330  009A                     u9_21:
  1331  009A  289F               	goto	i1l857
  1332  009B                     u9_20:
  1333  009B                     i1l853:
  1334  009B  0808               	movf	8,w	;volatile
  1335  009C  3EFF               	addlw	255
  1336  009D  0088               	movwf	8	;volatile
  1337  009E                     i1l855:
  1338  009E  100B               	bcf	11,0	;volatile
  1339  009F                     i1l857:
  1340  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1341  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1342  00A1  1F0C               	btfss	12,6	;volatile
  1343  00A2  28A4               	goto	u10_21
  1344  00A3  28A5               	goto	u10_20
  1345  00A4                     u10_21:
  1346  00A4  28C1               	goto	i1l867
  1347  00A5                     u10_20:
  1348  00A5                     i1l859:
  1349  00A5  130C               	bcf	12,6	;volatile
  1350  00A6  100B               	bcf	11,0	;volatile
  1351  00A7                     i1l861:
  1352  00A7  081E               	movf	30,w	;volatile
  1353  00A8  00F0               	movwf	??_ISR
  1354  00A9  0870               	movf	??_ISR,w
  1355  00AA  00F7               	movwf	_pato
  1356  00AB  0877               	movf	_pato,w
  1357  00AC  00F0               	movwf	??_ISR
  1358  00AD  0870               	movf	??_ISR,w
  1359  00AE  00F8               	movwf	_y
  1360  00AF                     i1l863:
  1361  00AF  0877               	movf	_pato,w
  1362  00B0  390F               	andlw	15
  1363  00B1  00F0               	movwf	??_ISR
  1364  00B2  0870               	movf	??_ISR,w
  1365  00B3  00F9               	movwf	_x
  1366  00B4                     i1l865:
  1367  00B4  0877               	movf	_pato,w
  1368  00B5  00F0               	movwf	??_ISR
  1369  00B6  3004               	movlw	4
  1370  00B7                     u11_25:
  1371  00B7  1003               	clrc
  1372  00B8  0CF0               	rrf	??_ISR,f
  1373  00B9  3EFF               	addlw	-1
  1374  00BA  1D03               	skipz
  1375  00BB  28B7               	goto	u11_25
  1376  00BC  0870               	movf	??_ISR,w
  1377  00BD  390F               	andlw	15
  1378  00BE  00F1               	movwf	??_ISR+1
  1379  00BF  0871               	movf	??_ISR+1,w
  1380  00C0  00F8               	movwf	_y
  1381  00C1                     i1l867:
  1382  00C1  1D0B               	btfss	11,2	;volatile
  1383  00C2  28C4               	goto	u12_21
  1384  00C3  28C5               	goto	u12_20
  1385  00C4                     u12_21:
  1386  00C4  28CB               	goto	i1l94
  1387  00C5                     u12_20:
  1388  00C5                     i1l869:
  1389  00C5  120A  118A  219E  120A  118A  	fcall	_toggle
  1390  00CA                     i1l871:
  1391  00CA  110B               	bcf	11,2	;volatile
  1392  00CB                     i1l94:
  1393  00CB  0873               	movf	??_ISR+3,w
  1394  00CC  008A               	movwf	10
  1395  00CD  0E72               	swapf	??_ISR+2,w
  1396  00CE  0083               	movwf	3
  1397  00CF  0EFE               	swapf	btemp,f
  1398  00D0  0E7E               	swapf	btemp,w
  1399  00D1  0009               	retfie
  1400  00D2                     __end_of_ISR:
  1401                           
  1402                           	psect	intentry
  1403  0004                     __pintentry:	
  1404                           ;incstack = 0
  1405                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1406                           
  1407  0004                     interrupt_function:
  1408  007E                     saved_w	set	btemp
  1409  0004  00FE               	movwf	btemp
  1410  0005  0E03               	swapf	3,w
  1411  0006  00F2               	movwf	??_ISR+2
  1412  0007  080A               	movf	10,w
  1413  0008  00F3               	movwf	??_ISR+3
  1414  0009  120A  118A  2883   	ljmp	_ISR
  1415                           
  1416                           	psect	text5
  1417  019E                     __ptext5:	
  1418 ;; *************** function _toggle *****************
  1419 ;; Defined at:
  1420 ;;		line 159 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_ISR
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _toggle
  1449  019E                     _toggle:
  1450  019E                     i1l807:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _toggle: [wreg+status,2+status,0]
  1453                           
  1454  019E  0876               	movf	_tog,w
  1455  019F  1D03               	btfss	3,2
  1456  01A0  29A2               	goto	u1_21
  1457  01A1  29A3               	goto	u1_20
  1458  01A2                     u1_21:
  1459  01A2  29A5               	goto	i1l811
  1460  01A3                     u1_20:
  1461  01A3                     i1l809:
  1462  01A3  01F6               	clrf	_tog
  1463  01A4  0AF6               	incf	_tog,f
  1464  01A5                     i1l811:
  1465  01A5  0376               	decf	_tog,w
  1466  01A6  1D03               	btfss	3,2
  1467  01A7  29A9               	goto	u2_21
  1468  01A8  29AA               	goto	u2_20
  1469  01A9                     u2_21:
  1470  01A9  29AB               	goto	i1l85
  1471  01AA                     u2_20:
  1472  01AA                     i1l813:
  1473  01AA  01F6               	clrf	_tog
  1474  01AB                     i1l85:
  1475  01AB  0008               	return
  1476  01AC                     __end_of_toggle:
  1477  007E                     btemp	set	126	;btemp
  1478  007E                     wtemp0	set	126
  1479                           
  1480                           	psect	config
  1481                           
  1482                           ;Config register CONFIG1 @ 0x2007
  1483                           ;	Oscillator Selection bits
  1484                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1485                           ;	Watchdog Timer Enable bit
  1486                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1487                           ;	Power-up Timer Enable bit
  1488                           ;	PWRTE = OFF, PWRT disabled
  1489                           ;	RE3/MCLR pin function select bit
  1490                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1491                           ;	Code Protection bit
  1492                           ;	CP = OFF, Program memory code protection is disabled
  1493                           ;	Data Code Protection bit
  1494                           ;	CPD = OFF, Data memory code protection is disabled
  1495                           ;	Brown Out Reset Selection bits
  1496                           ;	BOREN = OFF, BOR disabled
  1497                           ;	Internal External Switchover bit
  1498                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1499                           ;	Fail-Safe Clock Monitor Enabled bit
  1500                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1501                           ;	Low Voltage Programming Enable bit
  1502                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1503                           ;	In-Circuit Debugger Mode bit
  1504                           ;	DEBUG = 0x1, unprogrammed default
  1505  2007                     	org	8199
  1506  2007  20D1               	dw	8401
  1507                           
  1508                           ;Config register CONFIG2 @ 0x2008
  1509                           ;	Brown-out Reset Selection bit
  1510                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1511                           ;	Flash Program Memory Self Write Enable bits
  1512                           ;	WRT = OFF, Write protection off
  1513  2008                     	org	8200
  1514  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_conversion
    _setup->_initosc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _setup->_initosc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     143
                                              1 BANK0      2     2      0
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initosc
 ---------------------------------------------------------------------------------
 (2) _initosc                                              3     3      0      22
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     1      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                             _toggle
 ---------------------------------------------------------------------------------
 (4) _toggle                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _initosc

 _ISR (ROOT)
   _toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 10:17:36 2021

                      _x 0079                        _y 0078                        pc 0002  
                     l70 013C                       l80 011C                       fsr 0004  
                    l100 0029                      l101 0081                      l110 0082  
                    l102 002F                      l103 0035                      l104 003B  
                    l105 0041                      l106 0047                      l107 004D  
                    l108 0053                      l125 017A                      l109 0059  
                    l953 005F                      l961 00D2                      l971 00DE  
                    l963 00D8                      l949 0028                      l981 00E3  
                    l973 00DF                      l965 00DB                      l991 00EC  
                    l983 00E4                      l975 00E0                      l967 00DC  
                    l993 00ED                      l985 00E5                      l977 00E1  
                    l969 00DD                      l995 00EE                      l987 00E8  
                    l979 00E2                      l997 00EF                      l989 00EB  
                    l999 00F0                      u160 0140                      u161 013F  
                    u170 0145                      u171 0144                      u180 0154  
                    u181 0153                      _ISR 0083                      u197 0134  
                    _tog 0076                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     l1001 00F1                     l1011 00FD  
                   l1003 00F2                     l1021 010D                     l1013 0100  
                   l1005 00F4                     l1031 0161                     l1023 0110  
                   l1015 0103                     l1007 00F8                     l1033 0169  
                   l1025 0113                     l1017 0107                     l1009 00FB  
                   l1041 011D                     l1035 016B                     l1027 0116  
                   l1019 010A                     l1051 0140                     l1043 0122  
                   l1037 016E                     l1029 0119                     l1061 0154  
                   l1053 0145                     l1045 012B                     l1039 0179  
                   l1063 0156                     l1055 0147                     l1047 012E  
                   l1065 015C                     l1057 014D                     l1049 0139  
                   l1059 014F                     l1097 0067                     i1l85 01AB  
                   i1l94 00CB                     _TMR0 0001                     u1_20 01A3  
                   u1_21 01A2                     u2_20 01AA                     u2_21 01A9  
                   u6_20 0087                     u6_21 0086                     u7_20 008D  
                   u7_21 008C                     u8_20 0095                     u8_21 0094  
                   u9_20 009B                     u9_21 009A                     _main 011D  
                   _pato 0077                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l811 01A5                    i1l813 01AA                    i1l807 019E  
                  i1l809 01A3                    i1l841 0083                    i1l851 0095  
                  i1l843 0087                    i1l861 00A7                    i1l853 009B  
                  i1l845 008D                    i1l871 00CA                    i1l863 00AF  
                  i1l855 009E                    i1l847 0090                    i1l865 00B4  
                  i1l857 009F                    i1l849 0091                    i1l859 00A5  
                  i1l867 00C1                    i1l869 00C5                    u10_20 00A5  
                  u10_21 00A4                    u11_25 00B7                    u12_20 00C5  
                  u12_21 00C4                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_initosc 0083  
                  _setup 00D2                    pclath 000A                    status 0003  
                  wtemp0 007E        conversion@channel 0074          __initialization 000F  
           __end_of_main 0161                   ??_main 0031                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _toggle 019E                ??_initosc 0074  
                 saved_w 007E              initosc@IRCF 0030  __end_of__initialization 0021  
         __pcstackCOMMON 0070             __pidataBANK0 018E            __end_of_setup 011D  
         _OPTION_REGbits 0081                  ??_setup 0076               __pmaintext 011D  
             __pintentry 0004                  ?_toggle 0070               _conversion 0161  
                __ptext1 00D2                  __ptext2 0025                  __ptext3 0161  
                __ptext4 0083                  __ptext5 019E          __size_of_toggle 000E  
           __size_of_ISR 004F                  _initosc 0025     end_of_initialization 0021  
              _PORTBbits 0006                _PORTEbits 0009              ?_conversion 0074  
         __end_of_toggle 01AC      start_initialization 000F              __end_of_ISR 00D2  
             init_fetch0 017B              __pdataBANK0 0020                 ??_toggle 0070  
    __size_of_conversion 001A              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0030                 ?_initosc 0070           __size_of_setup 004B  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
              _segmentos 0020                 _PIR1bits 000C               _ADCON0bits 001F  
           ??_conversion 0030       __end_of_conversion 017B         __size_of_initosc 005E  
          __size_of_main 0044               _INTCONbits 000B                 init_ram0 017F  
               intlevel1 0000               _OSCCONbits 008F  
