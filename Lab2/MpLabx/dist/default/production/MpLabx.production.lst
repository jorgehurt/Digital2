

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 01:44:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0006                     _PORTBbits	set	6
   284  0009                     _PORTE	set	9
   285  0008                     _PORTD	set	8
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  000B                     _INTCONbits	set	11
   290  0089                     _TRISE	set	137
   291  0088                     _TRISD	set	136
   292  0087                     _TRISC	set	135
   293  0086                     _TRISB	set	134
   294  0085                     _TRISA	set	133
   295  0096                     _IOCBbits	set	150
   296  008F                     _OSCCONbits	set	143
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  000F                     start_initialization:	
   302                           ; #config settings
   303                           
   304  000F                     __initialization:
   305                           
   306                           ; Clear objects allocated to COMMON
   307  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   308  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   309  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   310  0012                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0012                     __end_of__initialization:
   314  0012  0183               	clrf	3
   315  0013  120A  118A  28CF   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0075                     __pbssCOMMON:
   319  0075                     _Push2:
   320  0075                     	ds	1
   321  0076                     _Push1:
   322  0076                     	ds	1
   323  0077                     _contadorJA:
   324  0077                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_setup:
   329  0070                     ?_initosc:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_ISR:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ??_initosc:
   345                           
   346                           ; 1 bytes @ 0x2
   347  0072                     	ds	2
   348  0074                     initosc@IRCF:
   349                           
   350                           ; 1 bytes @ 0x4
   351  0074                     	ds	1
   352  0075                     ??_setup:
   353  0075                     ??_main:	
   354                           ; 1 bytes @ 0x5
   355                           
   356                           
   357                           	psect	maintext
   358  00CF                     __pmaintext:	
   359                           ; 1 bytes @ 0x5
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 59 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels required when called:    3
   385 ;; This function calls:
   386 ;;		_setup
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _main
   394  00CF                     _main:
   395  00CF                     l728:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;main.c: 61:     setup();
   401  00CF  120A  118A  2072  120A  118A  	fcall	_setup
   402  00D4                     l47:	
   403                           ;main.c: 67:     while (1) {
   404                           
   405  00D4                     l48:	
   406                           ;main.c: 69:     }
   407                           
   408  00D4  28D4               	goto	l47
   409  00D5  120A  118A  280C   	ljmp	start
   410  00D8                     __end_of_main:
   411                           
   412                           	psect	text1
   413  0072                     __ptext1:	
   414 ;; *************** function _setup *****************
   415 ;; Defined at:
   416 ;;		line 76 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    2
   437 ;; This function calls:
   438 ;;		_initosc
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _setup
   446  0072                     _setup:
   447  0072                     l678:	
   448                           ;incstack = 0
   449                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 77:     initosc(7);
   453  0072  3007               	movlw	7
   454  0073  120A  118A  2016  120A  118A  	fcall	_initosc
   455  0078                     l680:
   456                           
   457                           ;main.c: 78:     OSCCONbits.OSTS = 0;
   458  0078  1683               	bsf	3,5	;RP0=1, select bank1
   459  0079  1303               	bcf	3,6	;RP1=0, select bank1
   460  007A  118F               	bcf	15,3	;volatile
   461  007B                     l682:
   462                           
   463                           ;main.c: 79:     OSCCONbits.HTS = 0;
   464  007B  110F               	bcf	15,2	;volatile
   465  007C                     l684:
   466                           
   467                           ;main.c: 80:     OSCCONbits.LTS = 0;
   468  007C  108F               	bcf	15,1	;volatile
   469  007D                     l686:
   470                           
   471                           ;main.c: 81:     INTCONbits.GIE = 1;
   472  007D  178B               	bsf	11,7	;volatile
   473  007E                     l688:
   474                           
   475                           ;main.c: 82:     INTCONbits.PEIE = 1;
   476  007E  170B               	bsf	11,6	;volatile
   477  007F                     l690:
   478                           
   479                           ;main.c: 83:     INTCONbits.RBIE = 1;
   480  007F  158B               	bsf	11,3	;volatile
   481  0080                     l692:
   482                           
   483                           ;main.c: 84:     INTCONbits.T0IE = 1;
   484  0080  168B               	bsf	11,5	;volatile
   485  0081                     l694:
   486                           
   487                           ;main.c: 85:     INTCONbits.INTE = 1;
   488  0081  160B               	bsf	11,4	;volatile
   489  0082                     l696:
   490                           
   491                           ;main.c: 86:     INTCONbits.T0IF = 0;
   492  0082  110B               	bcf	11,2	;volatile
   493  0083                     l698:
   494                           
   495                           ;main.c: 87:     INTCONbits.RBIF = 0;
   496  0083  100B               	bcf	11,0	;volatile
   497  0084                     l700:
   498                           
   499                           ;main.c: 88:     IOCBbits.IOCB0 = 1;
   500  0084  1416               	bsf	22,0	;volatile
   501  0085                     l702:
   502                           
   503                           ;main.c: 89:     IOCBbits.IOCB1 = 1;
   504  0085  1496               	bsf	22,1	;volatile
   505  0086                     l704:
   506                           
   507                           ;main.c: 90:     ANSEL = 0;
   508  0086  1683               	bsf	3,5	;RP0=1, select bank3
   509  0087  1703               	bsf	3,6	;RP1=1, select bank3
   510  0088  0188               	clrf	8	;volatile
   511  0089                     l706:
   512                           
   513                           ;main.c: 91:     ANSELH = 0b00000001;
   514  0089  3001               	movlw	1
   515  008A  0089               	movwf	9	;volatile
   516  008B                     l708:
   517                           
   518                           ;main.c: 92:     TRISA = 0;
   519  008B  1683               	bsf	3,5	;RP0=1, select bank1
   520  008C  1303               	bcf	3,6	;RP1=0, select bank1
   521  008D  0185               	clrf	5	;volatile
   522  008E                     l710:
   523                           
   524                           ;main.c: 93:     PORTA = 0;
   525  008E  1283               	bcf	3,5	;RP0=0, select bank0
   526  008F  1303               	bcf	3,6	;RP1=0, select bank0
   527  0090  0185               	clrf	5	;volatile
   528  0091                     l712:
   529                           
   530                           ;main.c: 94:     TRISB = 0b00000111;
   531  0091  3007               	movlw	7
   532  0092  1683               	bsf	3,5	;RP0=1, select bank1
   533  0093  1303               	bcf	3,6	;RP1=0, select bank1
   534  0094  0086               	movwf	6	;volatile
   535  0095                     l714:
   536                           
   537                           ;main.c: 95:     PORTB = 0;
   538  0095  1283               	bcf	3,5	;RP0=0, select bank0
   539  0096  1303               	bcf	3,6	;RP1=0, select bank0
   540  0097  0186               	clrf	6	;volatile
   541  0098                     l716:
   542                           
   543                           ;main.c: 96:     TRISC = 0;
   544  0098  1683               	bsf	3,5	;RP0=1, select bank1
   545  0099  1303               	bcf	3,6	;RP1=0, select bank1
   546  009A  0187               	clrf	7	;volatile
   547  009B                     l718:
   548                           
   549                           ;main.c: 97:     PORTC = 0;
   550  009B  1283               	bcf	3,5	;RP0=0, select bank0
   551  009C  1303               	bcf	3,6	;RP1=0, select bank0
   552  009D  0187               	clrf	7	;volatile
   553  009E                     l720:
   554                           
   555                           ;main.c: 98:     TRISD = 0;
   556  009E  1683               	bsf	3,5	;RP0=1, select bank1
   557  009F  1303               	bcf	3,6	;RP1=0, select bank1
   558  00A0  0188               	clrf	8	;volatile
   559  00A1                     l722:
   560                           
   561                           ;main.c: 99:     PORTD = 0;
   562  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   563  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   564  00A3  0188               	clrf	8	;volatile
   565  00A4                     l724:
   566                           
   567                           ;main.c: 100:     TRISE = 0;
   568  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   569  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   570  00A6  0189               	clrf	9	;volatile
   571  00A7                     l726:
   572                           
   573                           ;main.c: 101:     PORTE = 0;
   574  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   575  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   576  00A9  0189               	clrf	9	;volatile
   577  00AA                     l53:
   578  00AA  0008               	return
   579  00AB                     __end_of_setup:
   580                           
   581                           	psect	text2
   582  0016                     __ptext2:	
   583 ;; *************** function _initosc *****************
   584 ;; Defined at:
   585 ;;		line 8 in file "oscilador.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  IRCF            1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  IRCF            1    4[COMMON] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0
   602 ;;      Totals:         3       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_setup
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _initosc
   615  0016                     _initosc:
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _initosc: [wreg-fsr0h+status,2+status,0]
   619                           ;initosc@IRCF stored from wreg
   620  0016  00F4               	movwf	initosc@IRCF
   621  0017                     l668:
   622                           
   623                           ;oscilador.c: 10:     switch(IRCF){
   624  0017  284E               	goto	l672
   625  0018                     l66:	
   626                           ;oscilador.c: 11:         case 0:
   627                           
   628                           
   629                           ;oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   630  0018  1683               	bsf	3,5	;RP0=1, select bank1
   631  0019  1303               	bcf	3,6	;RP1=0, select bank1
   632  001A  130F               	bcf	15,6	;volatile
   633                           
   634                           ;oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   635  001B  128F               	bcf	15,5	;volatile
   636                           
   637                           ;oscilador.c: 14:             OSCCONbits.IRCF0 = 0;
   638  001C  120F               	bcf	15,4	;volatile
   639                           
   640                           ;oscilador.c: 15:             break;
   641  001D  2870               	goto	l67
   642  001E                     l68:	
   643                           ;oscilador.c: 17:         case 1:
   644                           
   645                           
   646                           ;oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   647  001E  1683               	bsf	3,5	;RP0=1, select bank1
   648  001F  1303               	bcf	3,6	;RP1=0, select bank1
   649  0020  130F               	bcf	15,6	;volatile
   650                           
   651                           ;oscilador.c: 19:             OSCCONbits.IRCF1 = 0;
   652  0021  128F               	bcf	15,5	;volatile
   653                           
   654                           ;oscilador.c: 20:             OSCCONbits.IRCF0 = 1;
   655  0022  160F               	bsf	15,4	;volatile
   656                           
   657                           ;oscilador.c: 21:             break;
   658  0023  2870               	goto	l67
   659  0024                     l69:	
   660                           ;oscilador.c: 22:         case 2:
   661                           
   662                           
   663                           ;oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   664  0024  1683               	bsf	3,5	;RP0=1, select bank1
   665  0025  1303               	bcf	3,6	;RP1=0, select bank1
   666  0026  130F               	bcf	15,6	;volatile
   667                           
   668                           ;oscilador.c: 24:             OSCCONbits.IRCF1 = 1;
   669  0027  168F               	bsf	15,5	;volatile
   670                           
   671                           ;oscilador.c: 25:             OSCCONbits.IRCF0 = 0;
   672  0028  120F               	bcf	15,4	;volatile
   673                           
   674                           ;oscilador.c: 26:             break;
   675  0029  2870               	goto	l67
   676  002A                     l70:	
   677                           ;oscilador.c: 27:         case 3:
   678                           
   679                           
   680                           ;oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   681  002A  1683               	bsf	3,5	;RP0=1, select bank1
   682  002B  1303               	bcf	3,6	;RP1=0, select bank1
   683  002C  130F               	bcf	15,6	;volatile
   684                           
   685                           ;oscilador.c: 29:             OSCCONbits.IRCF1 = 1;
   686  002D  168F               	bsf	15,5	;volatile
   687                           
   688                           ;oscilador.c: 30:             OSCCONbits.IRCF0 = 1;
   689  002E  160F               	bsf	15,4	;volatile
   690                           
   691                           ;oscilador.c: 31:             break;
   692  002F  2870               	goto	l67
   693  0030                     l71:	
   694                           ;oscilador.c: 32:         case 4:
   695                           
   696                           
   697                           ;oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   698  0030  1683               	bsf	3,5	;RP0=1, select bank1
   699  0031  1303               	bcf	3,6	;RP1=0, select bank1
   700  0032  170F               	bsf	15,6	;volatile
   701                           
   702                           ;oscilador.c: 34:             OSCCONbits.IRCF1 = 0;
   703  0033  128F               	bcf	15,5	;volatile
   704                           
   705                           ;oscilador.c: 35:             OSCCONbits.IRCF0 = 0;
   706  0034  120F               	bcf	15,4	;volatile
   707                           
   708                           ;oscilador.c: 36:             break;
   709  0035  2870               	goto	l67
   710  0036                     l72:	
   711                           ;oscilador.c: 37:         case 5:
   712                           
   713                           
   714                           ;oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   715  0036  1683               	bsf	3,5	;RP0=1, select bank1
   716  0037  1303               	bcf	3,6	;RP1=0, select bank1
   717  0038  170F               	bsf	15,6	;volatile
   718                           
   719                           ;oscilador.c: 39:             OSCCONbits.IRCF1 = 0;
   720  0039  128F               	bcf	15,5	;volatile
   721                           
   722                           ;oscilador.c: 40:             OSCCONbits.IRCF0 = 1;
   723  003A  160F               	bsf	15,4	;volatile
   724                           
   725                           ;oscilador.c: 41:             break;
   726  003B  2870               	goto	l67
   727  003C                     l73:	
   728                           ;oscilador.c: 42:         case 6:
   729                           
   730                           
   731                           ;oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   732  003C  1683               	bsf	3,5	;RP0=1, select bank1
   733  003D  1303               	bcf	3,6	;RP1=0, select bank1
   734  003E  170F               	bsf	15,6	;volatile
   735                           
   736                           ;oscilador.c: 44:             OSCCONbits.IRCF1 = 1;
   737  003F  168F               	bsf	15,5	;volatile
   738                           
   739                           ;oscilador.c: 45:             OSCCONbits.IRCF0 = 0;
   740  0040  120F               	bcf	15,4	;volatile
   741                           
   742                           ;oscilador.c: 46:             break;
   743  0041  2870               	goto	l67
   744  0042                     l74:	
   745                           ;oscilador.c: 47:         case 7:
   746                           
   747                           
   748                           ;oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   749  0042  1683               	bsf	3,5	;RP0=1, select bank1
   750  0043  1303               	bcf	3,6	;RP1=0, select bank1
   751  0044  170F               	bsf	15,6	;volatile
   752                           
   753                           ;oscilador.c: 49:             OSCCONbits.IRCF1 = 1;
   754  0045  168F               	bsf	15,5	;volatile
   755                           
   756                           ;oscilador.c: 50:             OSCCONbits.IRCF0 = 1;
   757  0046  160F               	bsf	15,4	;volatile
   758                           
   759                           ;oscilador.c: 51:             break;
   760  0047  2870               	goto	l67
   761  0048                     l75:	
   762                           ;oscilador.c: 52:         default:
   763                           
   764                           
   765                           ;oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
   766  0048  1683               	bsf	3,5	;RP0=1, select bank1
   767  0049  1303               	bcf	3,6	;RP1=0, select bank1
   768  004A  170F               	bsf	15,6	;volatile
   769                           
   770                           ;oscilador.c: 54:             OSCCONbits.IRCF1 = 1;
   771  004B  168F               	bsf	15,5	;volatile
   772                           
   773                           ;oscilador.c: 55:             OSCCONbits.IRCF0 = 0;
   774  004C  120F               	bcf	15,4	;volatile
   775                           
   776                           ;oscilador.c: 56:             break;
   777  004D  2870               	goto	l67
   778  004E                     l672:
   779  004E  0874               	movf	initosc@IRCF,w
   780  004F  00F2               	movwf	??_initosc
   781  0050  01F3               	clrf	??_initosc+1
   782                           
   783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 1, Range of values is 0 to 0
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte            4     3 (average)
   789                           ; direct_byte           11     8 (fixed)
   790                           ; jumptable            260     6 (fixed)
   791                           ;	Chosen strategy is simple_byte
   792  0051  0873               	movf	??_initosc+1,w
   793  0052  3A00               	xorlw	0	; case 0
   794  0053  1903               	skipnz
   795  0054  2856               	goto	l768
   796  0055  2848               	goto	l75
   797  0056                     l768:
   798                           
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 8, Range of values is 0 to 7
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte           25    13 (average)
   804                           ; direct_byte           32     8 (fixed)
   805                           ; jumptable            260     6 (fixed)
   806                           ;	Chosen strategy is simple_byte
   807  0056  0872               	movf	??_initosc,w
   808  0057  3A00               	xorlw	0	; case 0
   809  0058  1903               	skipnz
   810  0059  2818               	goto	l66
   811  005A  3A01               	xorlw	1	; case 1
   812  005B  1903               	skipnz
   813  005C  281E               	goto	l68
   814  005D  3A03               	xorlw	3	; case 2
   815  005E  1903               	skipnz
   816  005F  2824               	goto	l69
   817  0060  3A01               	xorlw	1	; case 3
   818  0061  1903               	skipnz
   819  0062  282A               	goto	l70
   820  0063  3A07               	xorlw	7	; case 4
   821  0064  1903               	skipnz
   822  0065  2830               	goto	l71
   823  0066  3A01               	xorlw	1	; case 5
   824  0067  1903               	skipnz
   825  0068  2836               	goto	l72
   826  0069  3A03               	xorlw	3	; case 6
   827  006A  1903               	skipnz
   828  006B  283C               	goto	l73
   829  006C  3A01               	xorlw	1	; case 7
   830  006D  1903               	skipnz
   831  006E  2842               	goto	l74
   832  006F  2848               	goto	l75
   833  0070                     l67:
   834                           
   835                           ;oscilador.c: 58:     OSCCONbits.SCS = 1;
   836  0070  140F               	bsf	15,0	;volatile
   837  0071                     l76:
   838  0071  0008               	return
   839  0072                     __end_of_initosc:
   840                           
   841                           	psect	text3
   842  00AB                     __ptext3:	
   843 ;; *************** function _ISR *****************
   844 ;; Defined at:
   845 ;;		line 112 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		Interrupt level 1
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _ISR
   874  00AB                     _ISR:
   875  00AB                     i1l730:
   876                           
   877                           ;main.c: 113:     if (INTCONbits.RBIF == 1 && PORTBbits.RB0==0) {
   878  00AB  1C0B               	btfss	11,0	;volatile
   879  00AC  28AE               	goto	u1_21
   880  00AD  28AF               	goto	u1_20
   881  00AE                     u1_21:
   882  00AE  28B9               	goto	i1l738
   883  00AF                     u1_20:
   884  00AF                     i1l732:
   885  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   886  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   887  00B1  1806               	btfsc	6,0	;volatile
   888  00B2  28B4               	goto	u2_21
   889  00B3  28B5               	goto	u2_20
   890  00B4                     u2_21:
   891  00B4  28B9               	goto	i1l738
   892  00B5                     u2_20:
   893  00B5                     i1l734:
   894                           
   895                           ;main.c: 114:         PORTD=PORTD+1;
   896  00B5  0808               	movf	8,w	;volatile
   897  00B6  3E01               	addlw	1
   898  00B7  0088               	movwf	8	;volatile
   899  00B8                     i1l736:
   900                           
   901                           ;main.c: 115:         INTCONbits.RBIF=0;
   902  00B8  100B               	bcf	11,0	;volatile
   903  00B9                     i1l738:
   904                           
   905                           ;main.c: 117:     if (INTCONbits.RBIF == 1 && PORTBbits.RB1==0) {
   906  00B9  1C0B               	btfss	11,0	;volatile
   907  00BA  28BC               	goto	u3_21
   908  00BB  28BD               	goto	u3_20
   909  00BC                     u3_21:
   910  00BC  28C7               	goto	i1l746
   911  00BD                     u3_20:
   912  00BD                     i1l740:
   913  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   914  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   915  00BF  1886               	btfsc	6,1	;volatile
   916  00C0  28C2               	goto	u4_21
   917  00C1  28C3               	goto	u4_20
   918  00C2                     u4_21:
   919  00C2  28C7               	goto	i1l746
   920  00C3                     u4_20:
   921  00C3                     i1l742:
   922                           
   923                           ;main.c: 118:         PORTD=PORTD-1;
   924  00C3  0808               	movf	8,w	;volatile
   925  00C4  3EFF               	addlw	255
   926  00C5  0088               	movwf	8	;volatile
   927  00C6                     i1l744:
   928                           
   929                           ;main.c: 119:         INTCONbits.RBIF=0;
   930  00C6  100B               	bcf	11,0	;volatile
   931  00C7                     i1l746:
   932                           
   933                           ;main.c: 121:         INTCONbits.RBIF=0;
   934  00C7  100B               	bcf	11,0	;volatile
   935  00C8                     i1l60:
   936  00C8  0871               	movf	??_ISR+1,w
   937  00C9  008A               	movwf	10
   938  00CA  0E70               	swapf	??_ISR,w
   939  00CB  0083               	movwf	3
   940  00CC  0EFE               	swapf	btemp,f
   941  00CD  0E7E               	swapf	btemp,w
   942  00CE  0009               	retfie
   943  00CF                     __end_of_ISR:
   944  007E                     btemp	set	126	;btemp
   945  007E                     wtemp0	set	126
   946                           
   947                           	psect	intentry
   948  0004                     __pintentry:	
   949                           ;incstack = 0
   950                           ; Regs used in _ISR: [wreg+status,2+status,0]
   951                           
   952  0004                     interrupt_function:
   953  007E                     saved_w	set	btemp
   954  0004  00FE               	movwf	btemp
   955  0005  0E03               	swapf	3,w
   956  0006  00F0               	movwf	??_ISR
   957  0007  080A               	movf	10,w
   958  0008  00F1               	movwf	??_ISR+1
   959  0009  120A  118A  28AB   	ljmp	_ISR
   960                           
   961                           	psect	config
   962                           
   963                           ;Config register CONFIG1 @ 0x2007
   964                           ;	Oscillator Selection bits
   965                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   966                           ;	Watchdog Timer Enable bit
   967                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   968                           ;	Power-up Timer Enable bit
   969                           ;	PWRTE = OFF, PWRT disabled
   970                           ;	RE3/MCLR pin function select bit
   971                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   972                           ;	Code Protection bit
   973                           ;	CP = OFF, Program memory code protection is disabled
   974                           ;	Data Code Protection bit
   975                           ;	CPD = OFF, Data memory code protection is disabled
   976                           ;	Brown Out Reset Selection bits
   977                           ;	BOREN = OFF, BOR disabled
   978                           ;	Internal External Switchover bit
   979                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   980                           ;	Fail-Safe Clock Monitor Enabled bit
   981                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   982                           ;	Low Voltage Programming Enable bit
   983                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   984                           ;	In-Circuit Debugger Mode bit
   985                           ;	DEBUG = 0x1, unprogrammed default
   986  2007                     	org	8199
   987  2007  20D1               	dw	8401
   988                           
   989                           ;Config register CONFIG2 @ 0x2008
   990                           ;	Brown-out Reset Selection bit
   991                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   992                           ;	Flash Program Memory Self Write Enable bits
   993                           ;	WRT = OFF, Write protection off
   994  2008                     	org	8200
   995  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initosc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initosc
 ---------------------------------------------------------------------------------
 (2) _initosc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _initosc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 01:44:38 2021

                     l53 00AA                       l70 002A                       l71 0030  
                     l47 00D4                       l72 0036                       l48 00D4  
                     l73 003C                       l74 0042                       l66 0018  
                     l75 0048                       l67 0070                       l76 0071  
                     l68 001E                       l69 0024                      l700 0084  
                    l710 008E                      l702 0085                      l720 009E  
                    l712 0091                      l704 0086                      l722 00A1  
                    l714 0095                      l706 0089                      l724 00A4  
                    l716 0098                      l708 008B                      l726 00A7  
                    l718 009B                      l672 004E                      l680 0078  
                    l728 00CF                      l690 007F                      l682 007B  
                    l668 0017                      l692 0080                      l684 007C  
                    l694 0081                      l686 007D                      l678 0072  
                    l768 0056                      l696 0082                      l688 007E  
                    l698 0083                      _ISR 00AB                     ?_ISR 0070  
                   i1l60 00C8                     u1_20 00AF                     u1_21 00AE  
                   u2_20 00B5                     u2_21 00B4                     u3_20 00BD  
                   u3_21 00BC                     u4_20 00C3                     u4_21 00C2  
                   _main 00CF                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l730 00AB                    i1l740 00BD                    i1l732 00AF  
                  i1l742 00C3                    i1l734 00B5                    i1l744 00C6  
                  i1l736 00B8                    i1l746 00C7                    i1l738 00B9  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Push1 0076                    _Push2 0075  
        __end_of_initosc 0072                    _setup 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00D8                   ??_main 0075                   ?_setup 0070  
                 _ANSELH 0189                ??_initosc 0072                   saved_w 007E  
            initosc@IRCF 0074  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 00AB                  ??_setup 0075               __pmaintext 00CF  
             __pintentry 0004               _contadorJA 0077                  __ptext1 0072  
                __ptext2 0016                  __ptext3 00AB             __size_of_ISR 0024  
                _initosc 0016     end_of_initialization 0012                _PORTBbits 0006  
    start_initialization 000F              __end_of_ISR 00CF              __pbssCOMMON 0075  
              ___latbits 0002                 ?_initosc 0070           __size_of_setup 0039  
      interrupt_function 0004                 _IOCBbits 0096         __size_of_initosc 005C  
          __size_of_main 0009               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
