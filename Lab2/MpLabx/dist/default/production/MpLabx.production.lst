

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 23:20:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataBANK0
   370  01D8                     __pidataBANK0:
   371                           
   372                           ;initializer for _segmentos
   373  01D8  343F               	retlw	63
   374  01D9  3406               	retlw	6
   375  01DA  345B               	retlw	91
   376  01DB  344F               	retlw	79
   377  01DC  3466               	retlw	102
   378  01DD  346D               	retlw	109
   379  01DE  347D               	retlw	125
   380  01DF  3407               	retlw	7
   381  01E0  347F               	retlw	127
   382  01E1  346F               	retlw	111
   383  01E2  3477               	retlw	119
   384  01E3  347C               	retlw	124
   385  01E4  3439               	retlw	57
   386  01E5  345E               	retlw	94
   387  01E6  3479               	retlw	121
   388  01E7  3471               	retlw	113
   389  001F                     _ADCON0	set	31
   390  0009                     _PORTEbits	set	9
   391  001E                     _ADRESH	set	30
   392  0009                     _PORTE	set	9
   393  0008                     _PORTD	set	8
   394  0007                     _PORTC	set	7
   395  0006                     _PORTB	set	6
   396  0005                     _PORTA	set	5
   397  0001                     _TMR0	set	1
   398  000C                     _PIR1bits	set	12
   399  000B                     _INTCONbits	set	11
   400  0006                     _PORTBbits	set	6
   401  001F                     _ADCON0bits	set	31
   402  009F                     _ADCON1	set	159
   403  0089                     _TRISE	set	137
   404  0088                     _TRISD	set	136
   405  0087                     _TRISC	set	135
   406  0086                     _TRISB	set	134
   407  0085                     _TRISA	set	133
   408  0081                     _OPTION_REGbits	set	129
   409  0096                     _IOCBbits	set	150
   410  008C                     _PIE1bits	set	140
   411  008F                     _OSCCONbits	set	143
   412  0189                     _ANSELH	set	393
   413  0188                     _ANSEL	set	392
   414                           
   415                           	psect	cinit
   416  0011                     start_initialization:	
   417                           ; #config settings
   418                           
   419  0011                     __initialization:
   420                           
   421                           ; Initialize objects allocated to BANK0
   422  0011  1383               	bcf	3,7	;select IRP bank0
   423  0012  3030               	movlw	low (__pdataBANK0+16)
   424  0013  00FD               	movwf	btemp+-1
   425  0014  3001               	movlw	high __pidataBANK0
   426  0015  00FE               	movwf	btemp
   427  0016  30D8               	movlw	low __pidataBANK0
   428  0017  00FF               	movwf	btemp+1
   429  0018  3020               	movlw	low __pdataBANK0
   430  0019  0084               	movwf	4
   431  001A  120A  118A  21C9  120A  118A  	fcall	init_ram0
   432                           
   433                           ; Clear objects allocated to BANK0
   434  001F  01B5               	clrf	__pbssBANK0& (0+127)
   435                           
   436                           ; Clear objects allocated to COMMON
   437  0020  01F0               	clrf	__pbssCOMMON& (0+127)
   438  0021  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   439  0022  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   440  0023  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   441  0024  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   442  0025  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   443  0026                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446  0026                     __end_of__initialization:
   447  0026  0183               	clrf	3
   448  0027  120A  118A  2931   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssCOMMON
   451  0070                     __pbssCOMMON:
   452  0070                     _perro:
   453  0070                     	ds	1
   454  0071                     _tog:
   455  0071                     	ds	1
   456  0072                     _pato:
   457  0072                     	ds	1
   458  0073                     _x:
   459  0073                     	ds	1
   460  0074                     _A2:
   461  0074                     	ds	1
   462  0075                     _A1:
   463  0075                     	ds	1
   464                           
   465                           	psect	bssBANK0
   466  0035                     __pbssBANK0:
   467  0035                     _y:
   468  0035                     	ds	1
   469                           
   470                           	psect	dataBANK0
   471  0020                     __pdataBANK0:
   472  0020                     _segmentos:
   473  0020                     	ds	16
   474                           
   475                           	psect	inittext
   476  01C5                     init_fetch0:	
   477                           ;	Called with low address in FSR and high address in W
   478                           
   479  01C5  087E               	movf	btemp,w
   480  01C6  008A               	movwf	10
   481  01C7  087F               	movf	btemp+1,w
   482  01C8  0082               	movwf	2
   483  01C9                     init_ram0:	
   484                           ;Called with:
   485                           ;	high address of idata address in btemp 
   486                           ;	low address of idata address in btemp+1 
   487                           ;	low address of data in FSR
   488                           ;	high address + 1 of data in btemp-1
   489                           
   490  01C9  120A  118A  21C5  120A  118A  	fcall	init_fetch0
   491  01CE  0080               	movwf	0
   492  01CF  0A84               	incf	4,f
   493  01D0  0804               	movf	4,w
   494  01D1  067D               	xorwf	btemp+-1,w
   495  01D2  1903               	btfsc	3,2
   496  01D3  3400               	retlw	0
   497  01D4  0AFF               	incf	btemp+1,f
   498  01D5  1903               	btfsc	3,2
   499  01D6  0AFE               	incf	btemp,f
   500  01D7  29C9               	goto	init_ram0
   501                           
   502                           	psect	cstackCOMMON
   503  0076                     __pcstackCOMMON:
   504  0076                     ?_setup:
   505  0076                     ?_initosc:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0076                     ?_op:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0076                     ??_op:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0076                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0076                     ?_ISR:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 1 bytes @ 0x0
   522  0076                     	ds	1
   523  0077                     ??_ISR:
   524                           
   525                           ; 1 bytes @ 0x1
   526  0077                     	ds	5
   527                           
   528                           	psect	cstackBANK0
   529  0030                     __pcstackBANK0:
   530  0030                     ?_conversion:
   531  0030                     ??_initosc:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0030                     conversion@channel:	
   535                           ; 1 bytes @ 0x0
   536                           
   537                           
   538                           ; 2 bytes @ 0x0
   539  0030                     	ds	2
   540  0032                     ??_conversion:
   541  0032                     initosc@IRCF:	
   542                           ; 1 bytes @ 0x2
   543                           
   544                           
   545                           ; 1 bytes @ 0x2
   546  0032                     	ds	1
   547  0033                     ??_setup:
   548  0033                     ??_main:	
   549                           ; 1 bytes @ 0x3
   550                           
   551                           
   552                           ; 1 bytes @ 0x3
   553  0033                     	ds	2
   554                           
   555                           	psect	maintext
   556  0131                     __pmaintext:	
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 81 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : B00/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       2       0       0       0
   579 ;;      Totals:         0       2       0       0       0
   580 ;;Total ram usage:        2 bytes
   581 ;; Hardware stack levels required when called:    4
   582 ;; This function calls:
   583 ;;		_conversion
   584 ;;		_setup
   585 ;; This function is called by:
   586 ;;		Startup code after reset
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _main
   592  0131                     _main:
   593  0131                     l1242:	
   594                           ;incstack = 0
   595                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   596                           
   597                           
   598                           ;main.c: 83:     INTCONbits.INTE = 1;
   599  0131  120A  118A  20E3  120A  118A  	fcall	_setup
   600  0136                     l1244:
   601                           
   602                           ;main.c: 89: 
   603  0136  30E8               	movlw	232
   604  0137  1283               	bcf	3,5	;RP0=0, select bank0
   605  0138  1303               	bcf	3,6	;RP1=0, select bank0
   606  0139  00B0               	movwf	conversion@channel
   607  013A  3003               	movlw	3
   608  013B  00B1               	movwf	conversion@channel+1
   609  013C  120A  118A  21AB  120A  118A  	fcall	_conversion
   610  0141                     l1246:
   611                           
   612                           ;main.c: 90:     IOCBbits.IOCB0 = 1;
   613  0141  1283               	bcf	3,5	;RP0=0, select bank0
   614  0142  1303               	bcf	3,6	;RP1=0, select bank0
   615  0143  141F               	bsf	31,0	;volatile
   616  0144                     l1248:
   617                           
   618                           ;main.c: 91:     IOCBbits.IOCB1 = 1;
   619  0144  300D               	movlw	13
   620  0145  1283               	bcf	3,5	;RP0=0, select bank0
   621  0146  1303               	bcf	3,6	;RP1=0, select bank0
   622  0147  00B4               	movwf	??_main+1
   623  0148  30FB               	movlw	251
   624  0149  00B3               	movwf	??_main
   625  014A                     u347:
   626  014A  0BB3               	decfsz	??_main,f
   627  014B  294A               	goto	u347
   628  014C  0BB4               	decfsz	??_main+1,f
   629  014D  294A               	goto	u347
   630  014E                     l1250:
   631                           
   632                           ;main.c: 92:     IOCBbits.IOCB2 = 1;
   633  014E  1283               	bcf	3,5	;RP0=0, select bank0
   634  014F  1303               	bcf	3,6	;RP1=0, select bank0
   635  0150  149F               	bsf	31,1	;volatile
   636  0151                     l1252:
   637                           
   638                           ;main.c: 93: 
   639  0151  300D               	movlw	13
   640  0152  1283               	bcf	3,5	;RP0=0, select bank0
   641  0153  1303               	bcf	3,6	;RP1=0, select bank0
   642  0154  00B4               	movwf	??_main+1
   643  0155  30FB               	movlw	251
   644  0156  00B3               	movwf	??_main
   645  0157                     u357:
   646  0157  0BB3               	decfsz	??_main,f
   647  0158  2957               	goto	u357
   648  0159  0BB4               	decfsz	??_main+1,f
   649  015A  2957               	goto	u357
   650  015B                     l78:	
   651                           ;main.c: 94: 
   652                           
   653  015B  1283               	bcf	3,5	;RP0=0, select bank0
   654  015C  1303               	bcf	3,6	;RP1=0, select bank0
   655  015D  189F               	btfsc	31,1	;volatile
   656  015E  2960               	goto	u311
   657  015F  2961               	goto	u310
   658  0160                     u311:
   659  0160  295B               	goto	l78
   660  0161                     u310:
   661  0161                     l1254:
   662                           
   663                           ;main.c: 95:     OPTION_REGbits.nRBPU = 1;
   664  0161  0870               	movf	_perro,w
   665  0162  0272               	subwf	_pato,w
   666  0163  1C03               	skipc
   667  0164  2966               	goto	u321
   668  0165  2967               	goto	u320
   669  0166                     u321:
   670  0166  2968               	goto	l1258
   671  0167                     u320:
   672  0167                     l1256:
   673                           
   674                           ;main.c: 96:     OPTION_REGbits.INTEDG = 0;
   675  0167  1586               	bsf	6,3	;volatile
   676  0168                     l1258:
   677                           
   678                           ;main.c: 98:     OPTION_REGbits.T0SE = 0;
   679  0168  0870               	movf	_perro,w
   680  0169  0272               	subwf	_pato,w
   681  016A  1803               	skipnc
   682  016B  296D               	goto	u331
   683  016C  296E               	goto	u330
   684  016D                     u331:
   685  016D  2936               	goto	l1244
   686  016E                     u330:
   687  016E                     l1260:
   688                           
   689                           ;main.c: 99:     OPTION_REGbits.PSA = 0;
   690  016E  1186               	bcf	6,3	;volatile
   691  016F  2936               	goto	l1244
   692  0170  120A  118A  280E   	ljmp	start
   693  0173                     __end_of_main:
   694                           
   695                           	psect	text1
   696  00E3                     __ptext1:	
   697 ;; *************** function _setup *****************
   698 ;; Defined at:
   699 ;;		line 110 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		_initosc
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _setup
   729  00E3                     _setup:
   730  00E3                     l1160:	
   731                           ;incstack = 0
   732                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   733                           
   734                           
   735                           ;main.c: 112:     TRISE = 0;
   736  00E3  3006               	movlw	6
   737  00E4  120A  118A  202A  120A  118A  	fcall	_initosc
   738  00E9                     l1162:
   739                           
   740                           ;main.c: 113:     PORTE = 0;
   741  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   742  00EA  1303               	bcf	3,6	;RP1=0, select bank1
   743  00EB  118F               	bcf	15,3	;volatile
   744  00EC                     l1164:
   745                           
   746                           ;main.c: 114:     tog = 0;
   747  00EC  110F               	bcf	15,2	;volatile
   748  00ED                     l1166:
   749                           
   750                           ;main.c: 115: }
   751  00ED  108F               	bcf	15,1	;volatile
   752  00EE                     l1168:
   753  00EE  178B               	bsf	11,7	;volatile
   754  00EF                     l1170:
   755  00EF  170B               	bsf	11,6	;volatile
   756  00F0                     l1172:
   757  00F0  158B               	bsf	11,3	;volatile
   758  00F1                     l1174:
   759  00F1  168B               	bsf	11,5	;volatile
   760  00F2                     l1176:
   761  00F2  160B               	bsf	11,4	;volatile
   762  00F3                     l1178:
   763  00F3  170C               	bsf	12,6	;volatile
   764  00F4                     l1180:
   765  00F4  110B               	bcf	11,2	;volatile
   766  00F5                     l1182:
   767  00F5  100B               	bcf	11,0	;volatile
   768  00F6                     l1184:
   769  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   770  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   771  00F8  130C               	bcf	12,6	;volatile
   772  00F9                     l1186:
   773  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   774  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   775  00FB  1416               	bsf	22,0	;volatile
   776  00FC                     l1188:
   777  00FC  1496               	bsf	22,1	;volatile
   778  00FD                     l1190:
   779  00FD  1516               	bsf	22,2	;volatile
   780  00FE                     l1192:
   781  00FE  1781               	bsf	1,7	;volatile
   782  00FF                     l1194:
   783  00FF  1301               	bcf	1,6	;volatile
   784  0100                     l1196:
   785  0100  1281               	bcf	1,5	;volatile
   786  0101                     l1198:
   787  0101  1201               	bcf	1,4	;volatile
   788  0102                     l1200:
   789  0102  1181               	bcf	1,3	;volatile
   790  0103                     l1202:
   791  0103  0801               	movf	1,w	;volatile
   792  0104  39F8               	andlw	-8
   793  0105  3806               	iorlw	6
   794  0106  0081               	movwf	1	;volatile
   795  0107                     l1204:
   796  0107  30DC               	movlw	220
   797  0108  1283               	bcf	3,5	;RP0=0, select bank0
   798  0109  1303               	bcf	3,6	;RP1=0, select bank0
   799  010A  0081               	movwf	1	;volatile
   800  010B                     l1206:
   801  010B  1683               	bsf	3,5	;RP0=1, select bank3
   802  010C  1703               	bsf	3,6	;RP1=1, select bank3
   803  010D  0188               	clrf	8	;volatile
   804  010E                     l1208:
   805  010E  3001               	movlw	1
   806  010F  0089               	movwf	9	;volatile
   807  0110                     l1210:
   808  0110  1683               	bsf	3,5	;RP0=1, select bank1
   809  0111  1303               	bcf	3,6	;RP1=0, select bank1
   810  0112  0185               	clrf	5	;volatile
   811  0113                     l1212:
   812  0113  1283               	bcf	3,5	;RP0=0, select bank0
   813  0114  1303               	bcf	3,6	;RP1=0, select bank0
   814  0115  0185               	clrf	5	;volatile
   815  0116                     l1214:
   816  0116  3007               	movlw	7
   817  0117  1683               	bsf	3,5	;RP0=1, select bank1
   818  0118  1303               	bcf	3,6	;RP1=0, select bank1
   819  0119  0086               	movwf	6	;volatile
   820  011A                     l1216:
   821  011A  1283               	bcf	3,5	;RP0=0, select bank0
   822  011B  1303               	bcf	3,6	;RP1=0, select bank0
   823  011C  0186               	clrf	6	;volatile
   824  011D                     l1218:
   825  011D  1683               	bsf	3,5	;RP0=1, select bank1
   826  011E  1303               	bcf	3,6	;RP1=0, select bank1
   827  011F  0187               	clrf	7	;volatile
   828  0120                     l1220:
   829  0120  1283               	bcf	3,5	;RP0=0, select bank0
   830  0121  1303               	bcf	3,6	;RP1=0, select bank0
   831  0122  0187               	clrf	7	;volatile
   832  0123                     l1222:
   833  0123  1683               	bsf	3,5	;RP0=1, select bank1
   834  0124  1303               	bcf	3,6	;RP1=0, select bank1
   835  0125  0188               	clrf	8	;volatile
   836  0126                     l1224:
   837  0126  1283               	bcf	3,5	;RP0=0, select bank0
   838  0127  1303               	bcf	3,6	;RP1=0, select bank0
   839  0128  0188               	clrf	8	;volatile
   840  0129                     l1226:
   841  0129  1683               	bsf	3,5	;RP0=1, select bank1
   842  012A  1303               	bcf	3,6	;RP1=0, select bank1
   843  012B  0189               	clrf	9	;volatile
   844  012C                     l1228:
   845  012C  1283               	bcf	3,5	;RP0=0, select bank0
   846  012D  1303               	bcf	3,6	;RP1=0, select bank0
   847  012E  0189               	clrf	9	;volatile
   848  012F                     l1230:
   849  012F  01F1               	clrf	_tog
   850  0130                     l88:
   851  0130  0008               	return
   852  0131                     __end_of_setup:
   853                           
   854                           	psect	text2
   855  002A                     __ptext2:	
   856 ;; *************** function _initosc *****************
   857 ;; Defined at:
   858 ;;		line 8 in file "oscilador.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  IRCF            1    wreg     unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  IRCF            1    2[BANK0 ] unsigned char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       0       0       0       0
   873 ;;      Locals:         0       1       0       0       0
   874 ;;      Temps:          0       2       0       0       0
   875 ;;      Totals:         0       3       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_setup
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _initosc
   888  002A                     _initosc:
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _initosc: [wreg-fsr0h+status,2+status,0]
   892                           ;initosc@IRCF stored from wreg
   893  002A  1283               	bcf	3,5	;RP0=0, select bank0
   894  002B  1303               	bcf	3,6	;RP1=0, select bank0
   895  002C  00B2               	movwf	initosc@IRCF
   896  002D                     l1148:
   897                           
   898                           ;oscilador.c: 10:     switch(IRCF){
   899  002D  2864               	goto	l1152
   900  002E                     l111:	
   901                           ;oscilador.c: 11:         case 0:
   902                           
   903                           
   904                           ;oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   905  002E  1683               	bsf	3,5	;RP0=1, select bank1
   906  002F  1303               	bcf	3,6	;RP1=0, select bank1
   907  0030  130F               	bcf	15,6	;volatile
   908                           
   909                           ;oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   910  0031  128F               	bcf	15,5	;volatile
   911                           
   912                           ;oscilador.c: 14:             OSCCONbits.IRCF0 = 0;
   913  0032  120F               	bcf	15,4	;volatile
   914                           
   915                           ;oscilador.c: 15:             break;
   916  0033  2886               	goto	l112
   917  0034                     l113:	
   918                           ;oscilador.c: 17:         case 1:
   919                           
   920                           
   921                           ;oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   922  0034  1683               	bsf	3,5	;RP0=1, select bank1
   923  0035  1303               	bcf	3,6	;RP1=0, select bank1
   924  0036  130F               	bcf	15,6	;volatile
   925                           
   926                           ;oscilador.c: 19:             OSCCONbits.IRCF1 = 0;
   927  0037  128F               	bcf	15,5	;volatile
   928                           
   929                           ;oscilador.c: 20:             OSCCONbits.IRCF0 = 1;
   930  0038  160F               	bsf	15,4	;volatile
   931                           
   932                           ;oscilador.c: 21:             break;
   933  0039  2886               	goto	l112
   934  003A                     l114:	
   935                           ;oscilador.c: 22:         case 2:
   936                           
   937                           
   938                           ;oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   939  003A  1683               	bsf	3,5	;RP0=1, select bank1
   940  003B  1303               	bcf	3,6	;RP1=0, select bank1
   941  003C  130F               	bcf	15,6	;volatile
   942                           
   943                           ;oscilador.c: 24:             OSCCONbits.IRCF1 = 1;
   944  003D  168F               	bsf	15,5	;volatile
   945                           
   946                           ;oscilador.c: 25:             OSCCONbits.IRCF0 = 0;
   947  003E  120F               	bcf	15,4	;volatile
   948                           
   949                           ;oscilador.c: 26:             break;
   950  003F  2886               	goto	l112
   951  0040                     l115:	
   952                           ;oscilador.c: 27:         case 3:
   953                           
   954                           
   955                           ;oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   956  0040  1683               	bsf	3,5	;RP0=1, select bank1
   957  0041  1303               	bcf	3,6	;RP1=0, select bank1
   958  0042  130F               	bcf	15,6	;volatile
   959                           
   960                           ;oscilador.c: 29:             OSCCONbits.IRCF1 = 1;
   961  0043  168F               	bsf	15,5	;volatile
   962                           
   963                           ;oscilador.c: 30:             OSCCONbits.IRCF0 = 1;
   964  0044  160F               	bsf	15,4	;volatile
   965                           
   966                           ;oscilador.c: 31:             break;
   967  0045  2886               	goto	l112
   968  0046                     l116:	
   969                           ;oscilador.c: 32:         case 4:
   970                           
   971                           
   972                           ;oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   973  0046  1683               	bsf	3,5	;RP0=1, select bank1
   974  0047  1303               	bcf	3,6	;RP1=0, select bank1
   975  0048  170F               	bsf	15,6	;volatile
   976                           
   977                           ;oscilador.c: 34:             OSCCONbits.IRCF1 = 0;
   978  0049  128F               	bcf	15,5	;volatile
   979                           
   980                           ;oscilador.c: 35:             OSCCONbits.IRCF0 = 0;
   981  004A  120F               	bcf	15,4	;volatile
   982                           
   983                           ;oscilador.c: 36:             break;
   984  004B  2886               	goto	l112
   985  004C                     l117:	
   986                           ;oscilador.c: 37:         case 5:
   987                           
   988                           
   989                           ;oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   990  004C  1683               	bsf	3,5	;RP0=1, select bank1
   991  004D  1303               	bcf	3,6	;RP1=0, select bank1
   992  004E  170F               	bsf	15,6	;volatile
   993                           
   994                           ;oscilador.c: 39:             OSCCONbits.IRCF1 = 0;
   995  004F  128F               	bcf	15,5	;volatile
   996                           
   997                           ;oscilador.c: 40:             OSCCONbits.IRCF0 = 1;
   998  0050  160F               	bsf	15,4	;volatile
   999                           
  1000                           ;oscilador.c: 41:             break;
  1001  0051  2886               	goto	l112
  1002  0052                     l118:	
  1003                           ;oscilador.c: 42:         case 6:
  1004                           
  1005                           
  1006                           ;oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1007  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1008  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1009  0054  170F               	bsf	15,6	;volatile
  1010                           
  1011                           ;oscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  1012  0055  168F               	bsf	15,5	;volatile
  1013                           
  1014                           ;oscilador.c: 45:             OSCCONbits.IRCF0 = 0;
  1015  0056  120F               	bcf	15,4	;volatile
  1016                           
  1017                           ;oscilador.c: 46:             break;
  1018  0057  2886               	goto	l112
  1019  0058                     l119:	
  1020                           ;oscilador.c: 47:         case 7:
  1021                           
  1022                           
  1023                           ;oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1024  0058  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0059  1303               	bcf	3,6	;RP1=0, select bank1
  1026  005A  170F               	bsf	15,6	;volatile
  1027                           
  1028                           ;oscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  1029  005B  168F               	bsf	15,5	;volatile
  1030                           
  1031                           ;oscilador.c: 50:             OSCCONbits.IRCF0 = 1;
  1032  005C  160F               	bsf	15,4	;volatile
  1033                           
  1034                           ;oscilador.c: 51:             break;
  1035  005D  2886               	goto	l112
  1036  005E                     l120:	
  1037                           ;oscilador.c: 52:         default:
  1038                           
  1039                           
  1040                           ;oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1041  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1042  005F  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0060  170F               	bsf	15,6	;volatile
  1044                           
  1045                           ;oscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  1046  0061  168F               	bsf	15,5	;volatile
  1047                           
  1048                           ;oscilador.c: 55:             OSCCONbits.IRCF0 = 0;
  1049  0062  120F               	bcf	15,4	;volatile
  1050                           
  1051                           ;oscilador.c: 56:             break;
  1052  0063  2886               	goto	l112
  1053  0064                     l1152:
  1054  0064  0832               	movf	initosc@IRCF,w
  1055  0065  00B0               	movwf	??_initosc
  1056  0066  01B1               	clrf	??_initosc+1
  1057                           
  1058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 1, Range of values is 0 to 0
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte            4     3 (average)
  1064                           ; direct_byte           11     8 (fixed)
  1065                           ; jumptable            260     6 (fixed)
  1066                           ;	Chosen strategy is simple_byte
  1067  0067  0831               	movf	??_initosc+1,w
  1068  0068  3A00               	xorlw	0	; case 0
  1069  0069  1903               	skipnz
  1070  006A  286C               	goto	l1292
  1071  006B  285E               	goto	l120
  1072  006C                     l1292:
  1073                           
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 8, Range of values is 0 to 7
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte           25    13 (average)
  1079                           ; direct_byte           32     8 (fixed)
  1080                           ; jumptable            260     6 (fixed)
  1081                           ;	Chosen strategy is simple_byte
  1082  006C  0830               	movf	??_initosc,w
  1083  006D  3A00               	xorlw	0	; case 0
  1084  006E  1903               	skipnz
  1085  006F  282E               	goto	l111
  1086  0070  3A01               	xorlw	1	; case 1
  1087  0071  1903               	skipnz
  1088  0072  2834               	goto	l113
  1089  0073  3A03               	xorlw	3	; case 2
  1090  0074  1903               	skipnz
  1091  0075  283A               	goto	l114
  1092  0076  3A01               	xorlw	1	; case 3
  1093  0077  1903               	skipnz
  1094  0078  2840               	goto	l115
  1095  0079  3A07               	xorlw	7	; case 4
  1096  007A  1903               	skipnz
  1097  007B  2846               	goto	l116
  1098  007C  3A01               	xorlw	1	; case 5
  1099  007D  1903               	skipnz
  1100  007E  284C               	goto	l117
  1101  007F  3A03               	xorlw	3	; case 6
  1102  0080  1903               	skipnz
  1103  0081  2852               	goto	l118
  1104  0082  3A01               	xorlw	1	; case 7
  1105  0083  1903               	skipnz
  1106  0084  2858               	goto	l119
  1107  0085  285E               	goto	l120
  1108  0086                     l112:
  1109                           
  1110                           ;oscilador.c: 58:     OSCCONbits.SCS = 1;
  1111  0086  140F               	bsf	15,0	;volatile
  1112  0087                     l121:
  1113  0087  0008               	return
  1114  0088                     __end_of_initosc:
  1115                           
  1116                           	psect	text3
  1117  01AB                     __ptext3:	
  1118 ;; *************** function _conversion *****************
  1119 ;; Defined at:
  1120 ;;		line 17 in file "adc.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  channel         2    0[BANK0 ] int 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       2       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       1       0       0       0
  1137 ;;      Totals:         0       3       0       0       0
  1138 ;;Total ram usage:        3 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _conversion
  1150  01AB                     _conversion:
  1151  01AB                     l1232:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1154                           
  1155                           
  1156                           ;adc.c: 18:     INTCONbits.GIE = 1;
  1157  01AB  178B               	bsf	11,7	;volatile
  1158                           
  1159                           ;adc.c: 19:     INTCONbits.PEIE = 1;
  1160  01AC  170B               	bsf	11,6	;volatile
  1161                           
  1162                           ;adc.c: 20:     PIE1bits.ADIE = 1;
  1163  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1164  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1165  01AF  170C               	bsf	12,6	;volatile
  1166                           
  1167                           ;adc.c: 21:     PIR1bits.ADIF = 0;
  1168  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1169  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1170  01B2  130C               	bcf	12,6	;volatile
  1171  01B3                     l1234:
  1172                           
  1173                           ;adc.c: 22:     ADCON0=0b01000000;
  1174  01B3  3040               	movlw	64
  1175  01B4  009F               	movwf	31	;volatile
  1176  01B5                     l1236:
  1177                           
  1178                           ;adc.c: 24:     ADCON1=0b00000000;
  1179  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1180  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1181  01B7  019F               	clrf	31	;volatile
  1182  01B8                     l1238:
  1183                           
  1184                           ;adc.c: 25:     ADCON0bits.CHS=channel;
  1185  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1186  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1187  01BA  0830               	movf	conversion@channel,w
  1188  01BB  00B2               	movwf	??_conversion
  1189  01BC  0DB2               	rlf	??_conversion,f
  1190  01BD  0DB2               	rlf	??_conversion,f
  1191  01BE  081F               	movf	31,w	;volatile
  1192  01BF  0632               	xorwf	??_conversion,w
  1193  01C0  39C3               	andlw	-61
  1194  01C1  0632               	xorwf	??_conversion,w
  1195  01C2  009F               	movwf	31	;volatile
  1196  01C3                     l1240:
  1197                           
  1198                           ;adc.c: 26:     PIR1bits.ADIF = 0;
  1199  01C3  130C               	bcf	12,6	;volatile
  1200  01C4                     l136:
  1201  01C4  0008               	return
  1202  01C5                     __end_of_conversion:
  1203                           
  1204                           	psect	text4
  1205  0088                     __ptext4:	
  1206 ;; *************** function _ISR *****************
  1207 ;; Defined at:
  1208 ;;		line 166 in file "main.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          5       0       0       0       0
  1225 ;;      Totals:         5       0       0       0       0
  1226 ;;Total ram usage:        5 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    1
  1229 ;; This function calls:
  1230 ;;		_op
  1231 ;; This function is called by:
  1232 ;;		Interrupt level 1
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _ISR
  1238  0088                     _ISR:
  1239  0088                     i1l1076:
  1240                           
  1241                           ;main.c: 179:     if(INTCONbits.RBIF == 1){
  1242  0088  1C0B               	btfss	11,0	;volatile
  1243  0089  288B               	goto	u25_21
  1244  008A  288C               	goto	u25_20
  1245  008B                     u25_21:
  1246  008B  2894               	goto	i1l93
  1247  008C                     u25_20:
  1248  008C                     i1l1078:
  1249                           
  1250                           ;main.c: 180:        INTCONbits.RBIF = 0;
  1251  008C  100B               	bcf	11,0	;volatile
  1252                           
  1253                           ;main.c: 181:        (INTCONbits.GIE = 0);
  1254  008D  138B               	bcf	11,7	;volatile
  1255  008E                     i1l1080:
  1256                           
  1257                           ;main.c: 182:        op();
  1258  008E  120A  118A  2173  120A  118A  	fcall	_op
  1259  0093  28DA               	goto	i1l94
  1260  0094                     i1l93:	
  1261                           ;main.c: 184:     }
  1262                           
  1263                           
  1264                           ;main.c: 185:     if (PIR1bits.ADIF == 1) {
  1265  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0096  1F0C               	btfss	12,6	;volatile
  1268  0097  2899               	goto	u26_21
  1269  0098  289A               	goto	u26_20
  1270  0099                     u26_21:
  1271  0099  28B6               	goto	i1l95
  1272  009A                     u26_20:
  1273  009A                     i1l1084:
  1274                           
  1275                           ;main.c: 186:         PIR1bits.ADIF = 0;
  1276  009A  130C               	bcf	12,6	;volatile
  1277  009B                     i1l1086:
  1278                           
  1279                           ;main.c: 187:         pato = ADRESH;
  1280  009B  081E               	movf	30,w	;volatile
  1281  009C  00F7               	movwf	??_ISR
  1282  009D  0877               	movf	??_ISR,w
  1283  009E  00F2               	movwf	_pato
  1284                           
  1285                           ;main.c: 188:         y = pato;
  1286  009F  0872               	movf	_pato,w
  1287  00A0  00F7               	movwf	??_ISR
  1288  00A1  0877               	movf	??_ISR,w
  1289  00A2  00B5               	movwf	_y
  1290  00A3                     i1l1088:
  1291                           
  1292                           ;main.c: 189:         x = pato & 0x0F;
  1293  00A3  0872               	movf	_pato,w
  1294  00A4  390F               	andlw	15
  1295  00A5  00F7               	movwf	??_ISR
  1296  00A6  0877               	movf	??_ISR,w
  1297  00A7  00F3               	movwf	_x
  1298  00A8                     i1l1090:
  1299                           
  1300                           ;main.c: 190:         y = ((pato & 0xF0) >> 4);
  1301  00A8  0872               	movf	_pato,w
  1302  00A9  00F7               	movwf	??_ISR
  1303  00AA  3004               	movlw	4
  1304  00AB                     u27_25:
  1305  00AB  1003               	clrc
  1306  00AC  0CF7               	rrf	??_ISR,f
  1307  00AD  3EFF               	addlw	-1
  1308  00AE  1D03               	skipz
  1309  00AF  28AB               	goto	u27_25
  1310  00B0  0877               	movf	??_ISR,w
  1311  00B1  390F               	andlw	15
  1312  00B2  00F8               	movwf	??_ISR+1
  1313  00B3  0878               	movf	??_ISR+1,w
  1314  00B4  00B5               	movwf	_y
  1315  00B5  28DA               	goto	i1l94
  1316  00B6                     i1l95:	
  1317                           ;main.c: 193:     }
  1318                           
  1319                           
  1320                           ;main.c: 194:     if (INTCONbits.T0IF == 1) {
  1321  00B6  1D0B               	btfss	11,2	;volatile
  1322  00B7  28B9               	goto	u28_21
  1323  00B8  28BA               	goto	u28_20
  1324  00B9                     u28_21:
  1325  00B9  28DA               	goto	i1l94
  1326  00BA                     u28_20:
  1327  00BA                     i1l1094:
  1328                           
  1329                           ;main.c: 195:         if (tog == 0) {
  1330  00BA  0871               	movf	_tog,w
  1331  00BB  1D03               	btfss	3,2
  1332  00BC  28BE               	goto	u29_21
  1333  00BD  28BF               	goto	u29_20
  1334  00BE                     u29_21:
  1335  00BE  28CB               	goto	i1l1106
  1336  00BF                     u29_20:
  1337  00BF                     i1l1096:
  1338                           
  1339                           ;main.c: 196:             PORTEbits.RE0 = 0;
  1340  00BF  1009               	bcf	9,0	;volatile
  1341                           
  1342                           ;main.c: 197:             PORTEbits.RE1 = 1;
  1343  00C0  1489               	bsf	9,1	;volatile
  1344  00C1                     i1l1098:
  1345                           
  1346                           ;main.c: 198:             PORTC = segmentos[x];
  1347  00C1  0873               	movf	_x,w
  1348  00C2  3E20               	addlw	(low (_segmentos| 0))& (0+255)
  1349  00C3  0084               	movwf	4
  1350  00C4  1383               	bcf	3,7	;select IRP bank0
  1351  00C5  0800               	movf	0,w
  1352  00C6  0087               	movwf	7	;volatile
  1353  00C7                     i1l1100:
  1354                           
  1355                           ;main.c: 199:             tog = 1;
  1356  00C7  01F1               	clrf	_tog
  1357  00C8  0AF1               	incf	_tog,f
  1358  00C9                     i1l1102:
  1359                           
  1360                           ;main.c: 200:             INTCONbits.T0IF = 0;
  1361  00C9  110B               	bcf	11,2	;volatile
  1362  00CA  28DA               	goto	i1l94
  1363  00CB                     i1l1106:
  1364                           
  1365                           ;main.c: 203:         if (tog == 1) {
  1366  00CB  0371               	decf	_tog,w
  1367  00CC  1D03               	btfss	3,2
  1368  00CD  28CF               	goto	u30_21
  1369  00CE  28D0               	goto	u30_20
  1370  00CF                     u30_21:
  1371  00CF  28DA               	goto	i1l94
  1372  00D0                     u30_20:
  1373  00D0                     i1l1108:
  1374                           
  1375                           ;main.c: 204:             PORTEbits.RE0 = 1;
  1376  00D0  1409               	bsf	9,0	;volatile
  1377                           
  1378                           ;main.c: 205:             PORTEbits.RE1 = 0;
  1379  00D1  1089               	bcf	9,1	;volatile
  1380  00D2                     i1l1110:
  1381                           
  1382                           ;main.c: 206:             tog = 0;
  1383  00D2  01F1               	clrf	_tog
  1384  00D3                     i1l1112:
  1385                           
  1386                           ;main.c: 207:             PORTC = segmentos[y];
  1387  00D3  0835               	movf	_y,w
  1388  00D4  3E20               	addlw	(low (_segmentos| 0))& (0+255)
  1389  00D5  0084               	movwf	4
  1390  00D6  1383               	bcf	3,7	;select IRP bank0
  1391  00D7  0800               	movf	0,w
  1392  00D8  0087               	movwf	7	;volatile
  1393  00D9                     i1l1114:
  1394                           
  1395                           ;main.c: 208:             INTCONbits.T0IF = 0;
  1396  00D9  110B               	bcf	11,2	;volatile
  1397  00DA                     i1l94:
  1398  00DA  087B               	movf	??_ISR+4,w
  1399  00DB  008A               	movwf	10
  1400  00DC  087A               	movf	??_ISR+3,w
  1401  00DD  0084               	movwf	4
  1402  00DE  0E79               	swapf	??_ISR+2,w
  1403  00DF  0083               	movwf	3
  1404  00E0  0EFE               	swapf	btemp,f
  1405  00E1  0E7E               	swapf	btemp,w
  1406  00E2  0009               	retfie
  1407  00E3                     __end_of_ISR:
  1408                           
  1409                           	psect	intentry
  1410  0004                     __pintentry:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1413                           
  1414  0004                     interrupt_function:
  1415  007E                     saved_w	set	btemp
  1416  0004  00FE               	movwf	btemp
  1417  0005  0E03               	swapf	3,w
  1418  0006  00F9               	movwf	??_ISR+2
  1419  0007  0804               	movf	4,w
  1420  0008  00FA               	movwf	??_ISR+3
  1421  0009  080A               	movf	10,w
  1422  000A  00FB               	movwf	??_ISR+4
  1423  000B  120A  118A  2888   	ljmp	_ISR
  1424                           
  1425                           	psect	text5
  1426  0173                     __ptext5:	
  1427 ;; *************** function _op *****************
  1428 ;; Defined at:
  1429 ;;		line 217 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0
  1445 ;;      Temps:          1       0       0       0       0
  1446 ;;      Totals:         1       0       0       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_ISR
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _op
  1458  0173                     _op:
  1459  0173                     i1l1026:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _op: [wreg+status,2+status,0]
  1462                           
  1463                           
  1464                           ;main.c: 218:     if(PORTBbits.RB0==1){
  1465  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0175  1C06               	btfss	6,0	;volatile
  1468  0176  2978               	goto	u16_21
  1469  0177  2979               	goto	u16_20
  1470  0178                     u16_21:
  1471  0178  297C               	goto	i1l101
  1472  0179                     u16_20:
  1473  0179                     i1l1028:
  1474                           
  1475                           ;main.c: 219:       A1=1;
  1476  0179  01F5               	clrf	_A1
  1477  017A  0AF5               	incf	_A1,f
  1478                           
  1479                           ;main.c: 220:       (INTCONbits.GIE = 0);
  1480  017B  138B               	bcf	11,7	;volatile
  1481  017C                     i1l101:	
  1482                           ;main.c: 221:     }
  1483                           
  1484                           
  1485                           ;main.c: 222:     if(PORTBbits.RB0==0 && A1==1){
  1486  017C  1806               	btfsc	6,0	;volatile
  1487  017D  297F               	goto	u17_21
  1488  017E  2980               	goto	u17_20
  1489  017F                     u17_21:
  1490  017F  2990               	goto	i1l102
  1491  0180                     u17_20:
  1492  0180                     i1l1030:
  1493  0180  0375               	decf	_A1,w
  1494  0181  1D03               	btfss	3,2
  1495  0182  2984               	goto	u18_21
  1496  0183  2985               	goto	u18_20
  1497  0184                     u18_21:
  1498  0184  2990               	goto	i1l102
  1499  0185                     u18_20:
  1500  0185                     i1l1032:
  1501                           
  1502                           ;main.c: 223:       A1=0;
  1503  0185  01F5               	clrf	_A1
  1504  0186                     i1l1034:
  1505                           
  1506                           ;main.c: 224:       perro=perro+1;
  1507  0186  0870               	movf	_perro,w
  1508  0187  3E01               	addlw	1
  1509  0188  00F6               	movwf	??_op
  1510  0189  0876               	movf	??_op,w
  1511  018A  00F0               	movwf	_perro
  1512  018B                     i1l1036:
  1513                           
  1514                           ;main.c: 225:       PORTD=PORTD+1;
  1515  018B  0808               	movf	8,w	;volatile
  1516  018C  3E01               	addlw	1
  1517  018D  0088               	movwf	8	;volatile
  1518  018E                     i1l1038:
  1519                           
  1520                           ;main.c: 226:       (INTCONbits.GIE = 1);
  1521  018E  178B               	bsf	11,7	;volatile
  1522  018F  29AA               	goto	i1l103
  1523  0190                     i1l102:	
  1524                           ;main.c: 228:     }
  1525                           
  1526                           
  1527                           ;main.c: 229:     if(PORTBbits.RB1==1){
  1528  0190  1C86               	btfss	6,1	;volatile
  1529  0191  2993               	goto	u19_21
  1530  0192  2994               	goto	u19_20
  1531  0193                     u19_21:
  1532  0193  2997               	goto	i1l104
  1533  0194                     u19_20:
  1534  0194                     i1l1042:
  1535                           
  1536                           ;main.c: 230:       A2=1;
  1537  0194  01F4               	clrf	_A2
  1538  0195  0AF4               	incf	_A2,f
  1539                           
  1540                           ;main.c: 231:       (INTCONbits.GIE = 0);
  1541  0196  138B               	bcf	11,7	;volatile
  1542  0197                     i1l104:	
  1543                           ;main.c: 232:     }
  1544                           
  1545                           
  1546                           ;main.c: 233:     if(PORTBbits.RB1==0 && A2==1){
  1547  0197  1886               	btfsc	6,1	;volatile
  1548  0198  299A               	goto	u20_21
  1549  0199  299B               	goto	u20_20
  1550  019A                     u20_21:
  1551  019A  29AA               	goto	i1l103
  1552  019B                     u20_20:
  1553  019B                     i1l1044:
  1554  019B  0374               	decf	_A2,w
  1555  019C  1D03               	btfss	3,2
  1556  019D  299F               	goto	u21_21
  1557  019E  29A0               	goto	u21_20
  1558  019F                     u21_21:
  1559  019F  29AA               	goto	i1l103
  1560  01A0                     u21_20:
  1561  01A0                     i1l1046:
  1562                           
  1563                           ;main.c: 234:       A2=0;
  1564  01A0  01F4               	clrf	_A2
  1565  01A1                     i1l1048:
  1566                           
  1567                           ;main.c: 235:       perro=perro-1;
  1568  01A1  0870               	movf	_perro,w
  1569  01A2  3EFF               	addlw	255
  1570  01A3  00F6               	movwf	??_op
  1571  01A4  0876               	movf	??_op,w
  1572  01A5  00F0               	movwf	_perro
  1573  01A6                     i1l1050:
  1574                           
  1575                           ;main.c: 236:       PORTD=PORTD-1;
  1576  01A6  0808               	movf	8,w	;volatile
  1577  01A7  3EFF               	addlw	255
  1578  01A8  0088               	movwf	8	;volatile
  1579  01A9                     i1l1052:
  1580                           
  1581                           ;main.c: 237:       (INTCONbits.GIE = 1);
  1582  01A9  178B               	bsf	11,7	;volatile
  1583  01AA                     i1l103:
  1584  01AA  0008               	return
  1585  01AB                     __end_of_op:
  1586  007E                     btemp	set	126	;btemp
  1587  007E                     wtemp0	set	126
  1588                           
  1589                           	psect	config
  1590                           
  1591                           ;Config register CONFIG1 @ 0x2007
  1592                           ;	Oscillator Selection bits
  1593                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1594                           ;	Watchdog Timer Enable bit
  1595                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1596                           ;	Power-up Timer Enable bit
  1597                           ;	PWRTE = OFF, PWRT disabled
  1598                           ;	RE3/MCLR pin function select bit
  1599                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1600                           ;	Code Protection bit
  1601                           ;	CP = OFF, Program memory code protection is disabled
  1602                           ;	Data Code Protection bit
  1603                           ;	CPD = OFF, Data memory code protection is disabled
  1604                           ;	Brown Out Reset Selection bits
  1605                           ;	BOREN = OFF, BOR disabled
  1606                           ;	Internal External Switchover bit
  1607                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1608                           ;	Fail-Safe Clock Monitor Enabled bit
  1609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1610                           ;	Low Voltage Programming Enable bit
  1611                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1612                           ;	In-Circuit Debugger Mode bit
  1613                           ;	DEBUG = 0x1, unprogrammed default
  1614  2007                     	org	8199
  1615  2007  20D1               	dw	8401
  1616                           
  1617                           ;Config register CONFIG2 @ 0x2008
  1618                           ;	Brown-out Reset Selection bit
  1619                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1620                           ;	Flash Program Memory Self Write Enable bits
  1621                           ;	WRT = OFF, Write protection off
  1622  2008                     	org	8200
  1623  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      5      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_op

Critical Paths under _main in BANK0

    _main->_conversion
    _setup->_initosc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     152
                                              3 BANK0      2     2      0
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      31
                            _initosc
 ---------------------------------------------------------------------------------
 (2) _initosc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     1      2     121
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              1 COMMON     5     5      0
                                 _op
 ---------------------------------------------------------------------------------
 (4) _op                                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _initosc

 _ISR (ROOT)
   _op

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 23:20:48 2021

                      _x 0073                        _y 0035                        pc 0002  
                     _A1 0075                       _A2 0074                       l78 015B  
                     l88 0130                       _op 0173                       fsr 0004  
                    l111 002E                      l120 005E                      l112 0086  
                    l121 0087                      l113 0034                      l114 003A  
                    l115 0040                      l116 0046                      l117 004C  
                    l118 0052                      l119 0058                      l136 01C4  
                    ?_op 0076                      u310 0161                      u311 0160  
                    u320 0167                      u321 0166                      u330 016E  
                    u331 016D                      u347 014A                      _ISR 0088  
                    u357 0157                      _tog 0071                      fsr0 0004  
                    indf 0000                     ??_op 0076                     ?_ISR 0076  
                   l1200 0102                     l1210 0110                     l1202 0103  
                   l1220 0120                     l1212 0113                     l1204 0107  
                   l1230 012F                     l1222 0123                     l1214 0116  
                   l1206 010B                     l1240 01C3                     l1232 01AB  
                   l1152 0064                     l1224 0126                     l1216 011A  
                   l1208 010E                     l1160 00E3                     l1234 01B3  
                   l1226 0129                     l1218 011D                     l1170 00EF  
                   l1162 00E9                     l1250 014E                     l1242 0131  
                   l1236 01B5                     l1148 002D                     l1228 012C  
                   l1180 00F4                     l1172 00F0                     l1164 00EC  
                   l1260 016E                     l1252 0151                     l1244 0136  
                   l1238 01B8                     l1190 00FD                     l1182 00F5  
                   l1174 00F1                     l1166 00ED                     l1254 0161  
                   l1246 0141                     l1192 00FE                     l1184 00F6  
                   l1176 00F2                     l1168 00EE                     l1256 0167  
                   l1248 0144                     l1194 00FF                     l1186 00F9  
                   l1178 00F3                     l1258 0168                     l1292 006C  
                   l1196 0100                     l1188 00FC                     l1198 0101  
                   i1l93 0094                     i1l94 00DA                     i1l95 00B6  
                   _TMR0 0001                     _main 0131                     _pato 0072  
                   btemp 007E                     start 000E                    ??_ISR 0077  
                  ?_main 0076                    _ANSEL 0188                    i1l101 017C  
                  i1l102 0190                    i1l103 01AA                    i1l104 0197  
                  u20_20 019B                    u20_21 019A                    u21_20 01A0  
                  u21_21 019F                    u30_20 00D0                    u30_21 00CF  
                  u16_20 0179                    u16_21 0178                    u17_20 0180  
                  u25_20 008C                    u17_21 017F                    u25_21 008B  
                  u18_20 0185                    u26_20 009A                    u18_21 0184  
                  u26_21 0099                    u19_20 0194                    u19_21 0193  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u27_25 00AB                    _PORTE 0009  
                  u28_20 00BA                    u28_21 00B9                    u29_20 00BF  
                  u29_21 00BE                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_initosc 0088                    _perro 0070                    _setup 00E3  
                  pclath 000A                    status 0003                    wtemp0 007E  
      conversion@channel 0030          __initialization 0011             __end_of_main 0173  
                 ??_main 0033                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0076                   _ANSELH 0189  
                 i1l1100 00C7                   i1l1030 0180                   i1l1110 00D2  
                 i1l1102 00C9                   i1l1032 0185                   i1l1112 00D3  
                 i1l1050 01A6                   i1l1042 0194                   i1l1034 0186  
                 i1l1026 0173                   i1l1114 00D9                   i1l1106 00CB  
                 i1l1052 01A9                   i1l1044 019B                   i1l1036 018B  
                 i1l1028 0179                   i1l1108 00D0                   i1l1046 01A0  
                 i1l1038 018E                   i1l1048 01A1                   i1l1080 008E  
                 i1l1090 00A8                   i1l1084 009A                   i1l1076 0088  
                 i1l1094 00BA                   i1l1086 009B                   i1l1078 008C  
                 i1l1096 00BF                   i1l1088 00A3                   i1l1098 00C1  
              ??_initosc 0030                   saved_w 007E              initosc@IRCF 0032  
__end_of__initialization 0026           __pcstackCOMMON 0076             __pidataBANK0 01D8  
          __end_of_setup 0131               __end_of_op 01AB           _OPTION_REGbits 0081  
                ??_setup 0033               __pbssBANK0 0035               __pmaintext 0131  
             __pintentry 0004               _conversion 01AB                  __ptext1 00E3  
                __ptext2 002A                  __ptext3 01AB                  __ptext4 0088  
                __ptext5 0173             __size_of_ISR 005B                  _initosc 002A  
   end_of_initialization 0026                _PORTBbits 0006                _PORTEbits 0009  
            ?_conversion 0030      start_initialization 0011              __end_of_ISR 00E3  
             init_fetch0 01C5              __pdataBANK0 0020      __size_of_conversion 001A  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0030  
               ?_initosc 0076           __size_of_setup 004E              __size_of_op 0038  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
              _segmentos 0020                 _PIR1bits 000C               _ADCON0bits 001F  
           ??_conversion 0032       __end_of_conversion 01C5         __size_of_initosc 005E  
          __size_of_main 0042               _INTCONbits 000B                 init_ram0 01C9  
               intlevel1 0000               _OSCCONbits 008F  
