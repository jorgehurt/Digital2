

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 00:15:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470                           
   471                           	psect	strings
   472  0800                     __pstrings:
   473  0800                     stringtab:
   474  0800                     __stringtab:
   475                           
   476                           ;	String table - string pointers are 1 byte each
   477  0800  1BFF               	btfsc	btemp+1,7
   478  0801  280A               	ljmp	stringcode
   479  0802  1383               	bcf	3,7
   480  0803  187F               	btfsc	btemp+1,0
   481  0804  1783               	bsf	3,7
   482  0805  0800               	movf	0,w
   483  0806  0A84               	incf	4,f
   484  0807  1903               	skipnz
   485  0808  0AFF               	incf	btemp+1,f
   486  0809  0008               	return
   487  080A                     stringcode:
   488  080A                     stringdir:
   489  080A  3008               	movlw	high stringdir
   490  080B  008A               	movwf	10
   491  080C  0804               	movf	4,w
   492  080D  0A84               	incf	4,f
   493  080E  0782               	addwf	2,f
   494  080F                     __stringbase:
   495  080F  3400               	retlw	0
   496  0810                     __end_of__stringtab:
   497  0810                     _dpowers:
   498  0810  3401               	retlw	1
   499  0811  3400               	retlw	0
   500  0812  340A               	retlw	10
   501  0813  3400               	retlw	0
   502  0814  3464               	retlw	100
   503  0815  3400               	retlw	0
   504  0816  34E8               	retlw	232
   505  0817  3403               	retlw	3
   506  0818  3410               	retlw	16
   507  0819  3427               	retlw	39
   508  081A                     __end_of_dpowers:
   509  001E                     _ADRESH	set	30
   510  001F                     _ADCON0bits	set	31
   511  0018                     _RCSTAbits	set	24
   512  0019                     _TXREG	set	25
   513  001A                     _RCREG	set	26
   514  0018                     _RCSTA	set	24
   515  000C                     _PIR1bits	set	12
   516  000B                     _INTCONbits	set	11
   517  0009                     _PORTE	set	9
   518  0007                     _PORTC	set	7
   519  0006                     _PORTB	set	6
   520  0005                     _PORTA	set	5
   521  0008                     _PORTD	set	8
   522  004A                     _RE2	set	74
   523  0049                     _RE1	set	73
   524  0048                     _RE0	set	72
   525  009F                     _ADCON1bits	set	159
   526  0098                     _TXSTAbits	set	152
   527  0098                     _TXSTA	set	152
   528  0099                     _SPBRG	set	153
   529  009A                     _SPBRGH	set	154
   530  008C                     _PIE1bits	set	140
   531  0089                     _TRISE	set	137
   532  0087                     _TRISC	set	135
   533  0088                     _TRISD	set	136
   534  0086                     _TRISB	set	134
   535  0085                     _TRISA	set	133
   536  008F                     _OSCCONbits	set	143
   537  0187                     _BAUDCTLbits	set	391
   538  0189                     _ANSELH	set	393
   539  0188                     _ANSEL	set	392
   540  081A                     STR_1:
   541  081A  3453               	retlw	83	;'S'
   542  081B  3431               	retlw	49	;'1'
   543  081C  343A               	retlw	58	;':'
   544  081D  3420               	retlw	32	;' '
   545  081E  3420               	retlw	32	;' '
   546  081F  3420               	retlw	32	;' '
   547  0820  3420               	retlw	32	;' '
   548  0821  3453               	retlw	83	;'S'
   549  0822  3432               	retlw	50	;'2'
   550  0823  343A               	retlw	58	;':'
   551  0824  3420               	retlw	32	;' '
   552  0825  3420               	retlw	32	;' '
   553  0826  3420               	retlw	32	;' '
   554  0827  3420               	retlw	32	;' '
   555  0828  3453               	retlw	83	;'S'
   556  0829  3433               	retlw	51	;'3'
   557  082A  343A               	retlw	58	;':'
   558  082B  3400               	retlw	0
   559  082C                     STR_4:
   560  082C  3425               	retlw	37	;'%'
   561  082D  342E               	retlw	46	;'.'
   562  082E  3431               	retlw	49	;'1'
   563  082F  3469               	retlw	105	;'i'
   564  0830  3400               	retlw	0
   565  0831                     STR_5:
   566  0831  3456               	retlw	86	;'V'
   567  0832  3420               	retlw	32	;' '
   568  0833  3400               	retlw	0
   569  0834                     STR_2:
   570  0834  342E               	retlw	46	;'.'
   571  0835  3400               	retlw	0
   572  0831                     
   573                           	psect	cinit
   574  000F                     start_initialization:	
   575                           ; #config settings
   576                           
   577  000F                     __initialization:
   578                           
   579                           ; Clear objects allocated to COMMON
   580  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   581  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   582  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   583  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   584                           
   585                           ; Clear objects allocated to BANK0
   586  0013  1383               	bcf	3,7	;select IRP bank0
   587  0014  3062               	movlw	low __pbssBANK0
   588  0015  0084               	movwf	4
   589  0016  3070               	movlw	low (__pbssBANK0+14)
   590  0017  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   591                           
   592                           ; Clear objects allocated to BANK1
   593  001C  30A0               	movlw	low __pbssBANK1
   594  001D  0084               	movwf	4
   595  001E  30E2               	movlw	low (__pbssBANK1+66)
   596  001F  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   597  0024                     end_of_initialization:	
   598                           ;End of C runtime variable initialization code
   599                           
   600  0024                     __end_of__initialization:
   601  0024  0183               	clrf	3
   602  0025  120A  158A  2AD0   	ljmp	_main	;jump to C main() function
   603                           
   604                           	psect	bssCOMMON
   605  0076                     __pbssCOMMON:
   606  0076                     _Lectura:
   607  0076                     	ds	2
   608  0078                     _Contador:
   609  0078                     	ds	2
   610                           
   611                           	psect	bssBANK0
   612  0062                     __pbssBANK0:
   613  0062                     _ADC2A:
   614  0062                     	ds	2
   615  0064                     _DCADC2:
   616  0064                     	ds	2
   617  0066                     _ADC1C:
   618  0066                     	ds	2
   619  0068                     _ADC1B:
   620  0068                     	ds	2
   621  006A                     _ADC1A:
   622  006A                     	ds	2
   623  006C                     _DCADC1:
   624  006C                     	ds	2
   625  006E                     _ADC2ADRESH:
   626  006E                     	ds	1
   627  006F                     _ADC1ADRESH:
   628  006F                     	ds	1
   629                           
   630                           	psect	bssBANK1
   631  00A0                     __pbssBANK1:
   632  00A0                     _test:
   633  00A0                     	ds	5
   634  00A5                     _ADCLB:
   635  00A5                     	ds	4
   636  00A9                     _ADCLA:
   637  00A9                     	ds	4
   638  00AD                     _plc:
   639  00AD                     	ds	2
   640  00AF                     _PI:
   641  00AF                     	ds	2
   642  00B1                     _ADC2C:
   643  00B1                     	ds	2
   644  00B3                     _ADC2B:
   645  00B3                     	ds	2
   646  00B5                     _ContadorSend:
   647  00B5                     	ds	5
   648  00BA                     _PUNTO2A:
   649  00BA                     	ds	5
   650  00BF                     _ADCchar2C:
   651  00BF                     	ds	5
   652  00C4                     _ADCchar2B:
   653  00C4                     	ds	5
   654  00C9                     _ADCchar2A:
   655  00C9                     	ds	5
   656  00CE                     _PUNTO1A:
   657  00CE                     	ds	5
   658  00D3                     _ADCchar1C:
   659  00D3                     	ds	5
   660  00D8                     _ADCchar1B:
   661  00D8                     	ds	5
   662  00DD                     _ADCchar1A:
   663  00DD                     	ds	5
   664                           
   665                           	psect	clrtext
   666  07F6                     clear_ram0:	
   667                           ;	Called with FSR containing the base address, and
   668                           ;	W with the last address+1
   669                           
   670  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   671  07F7                     clrloop0:
   672  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   673  07F8  0A84               	incf	4,f	;increment pointer
   674  07F9  0604               	xorwf	4,w	;XOR with final address
   675  07FA  1903               	btfsc	3,2	;have we reached the end yet?
   676  07FB  3400               	retlw	0	;all done for this memory range, return
   677  07FC  0604               	xorwf	4,w	;XOR again to restore value
   678  07FD  2FF7               	goto	clrloop0	;do the next byte
   679                           
   680                           	psect	cstackBANK1
   681  00E2                     __pcstackBANK1:
   682  00E2                     ??_ADC:
   683                           
   684                           ; 1 bytes @ 0x0
   685  00E2                     	ds	4
   686                           
   687                           	psect	cstackCOMMON
   688  0070                     __pcstackCOMMON:
   689  0070                     ?_isdigit:
   690  0070                     ?_lcd_ready:	
   691                           ; 1 bit 
   692                           
   693  0070                     ?_lcd_lat:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ADC:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_UART_INIT:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_SerialCom:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Counter:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_lcd_cmd:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_lcd_dwr:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_inicializacion:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_main:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ??_ISR:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?i1_Counter:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ??i1_Counter:	
   730                           ; 1 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734  0070                     	ds	4
   735  0074                     ??_lcd_ready:
   736  0074                     ??_lcd_lat:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     ??_UART_INIT:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     ??_SerialCom:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ??_Counter:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     ?_strcat:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ?_strcpy:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ??_isdigit:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ?___bmul:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??___awdiv:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??___lwdiv:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ?__Umul8_16:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ___bmul@multiplicand:	
   770                           ; 2 bytes @ 0x4
   771                           
   772  0074                     __Umul8_16@multiplicand:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     _isdigit$1003:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     strcat@from:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     strcpy@from:	
   782                           ; 1 bytes @ 0x4
   783                           
   784                           
   785                           ; 1 bytes @ 0x4
   786  0074                     	ds	1
   787  0075                     ??_strcat:
   788  0075                     ??_strcpy:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     ??___bmul:	
   792                           ; 1 bytes @ 0x5
   793                           
   794  0075                     ??___awmod:	
   795                           ; 1 bytes @ 0x5
   796                           
   797  0075                     ??___lwmod:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     isdigit@c:	
   801                           ; 1 bytes @ 0x5
   802                           
   803                           
   804                           ; 1 bytes @ 0x5
   805  0075                     	ds	1
   806  0076                     ??_lcd_cmd:
   807  0076                     ??_lcd_dwr:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     ??_lcd_msg:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     ??_inicializacion:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     ??_main:	
   817                           ; 1 bytes @ 0x6
   818                           
   819                           
   820                           	psect	cstackBANK0
   821  0020                     __pcstackBANK0:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0020                     ??__Umul8_16:
   825  0020                     ?___awdiv:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0020                     ?___lwdiv:	
   829                           ; 2 bytes @ 0x0
   830                           
   831  0020                     ?___xxtofl:	
   832                           ; 2 bytes @ 0x0
   833                           
   834  0020                     lcd_cmd@x:	
   835                           ; 4 bytes @ 0x0
   836                           
   837  0020                     lcd_dwr@x:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0020                     ___bmul@product:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     strcat@to:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     strcpy@cp:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     ___awdiv@divisor:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     ___lwdiv@divisor:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0020                     ___xxtofl@val:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860  0020                     	ds	1
   861  0021                     ?_lcd_msg:
   862  0021                     ___bmul@multiplier:	
   863                           ; 1 bytes @ 0x1
   864                           
   865  0021                     strcat@cp:	
   866                           ; 1 bytes @ 0x1
   867                           
   868  0021                     strcpy@to:	
   869                           ; 1 bytes @ 0x1
   870                           
   871  0021                     lcd_msg@c:	
   872                           ; 1 bytes @ 0x1
   873                           
   874                           
   875                           ; 2 bytes @ 0x1
   876  0021                     	ds	1
   877  0022                     ___awdiv@dividend:
   878  0022                     ___lwdiv@dividend:	
   879                           ; 2 bytes @ 0x2
   880                           
   881  0022                     __Umul8_16@product:	
   882                           ; 2 bytes @ 0x2
   883                           
   884                           
   885                           ; 2 bytes @ 0x2
   886  0022                     	ds	2
   887  0024                     ??___xxtofl:
   888  0024                     ___awdiv@counter:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0024                     ___lwdiv@counter:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0024                     __Umul8_16@word_mpld:	
   895                           ; 1 bytes @ 0x4
   896                           
   897                           
   898                           ; 2 bytes @ 0x4
   899  0024                     	ds	1
   900  0025                     ___awdiv@sign:
   901  0025                     ___lwdiv@quotient:	
   902                           ; 1 bytes @ 0x5
   903                           
   904                           
   905                           ; 2 bytes @ 0x5
   906  0025                     	ds	1
   907  0026                     __Umul8_16@multiplier:
   908  0026                     ___awdiv@quotient:	
   909                           ; 1 bytes @ 0x6
   910                           
   911                           
   912                           ; 2 bytes @ 0x6
   913  0026                     	ds	1
   914  0027                     ?___lwmod:
   915  0027                     ___lwmod@divisor:	
   916                           ; 2 bytes @ 0x7
   917                           
   918                           
   919                           ; 2 bytes @ 0x7
   920  0027                     	ds	1
   921  0028                     ?___awmod:
   922  0028                     ___xxtofl@sign:	
   923                           ; 2 bytes @ 0x8
   924                           
   925  0028                     ___awmod@divisor:	
   926                           ; 1 bytes @ 0x8
   927                           
   928                           
   929                           ; 2 bytes @ 0x8
   930  0028                     	ds	1
   931  0029                     ___xxtofl@exp:
   932  0029                     ___lwmod@dividend:	
   933                           ; 1 bytes @ 0x9
   934                           
   935                           
   936                           ; 2 bytes @ 0x9
   937  0029                     	ds	1
   938  002A                     ___awmod@dividend:
   939  002A                     ___xxtofl@arg:	
   940                           ; 2 bytes @ 0xA
   941                           
   942                           
   943                           ; 4 bytes @ 0xA
   944  002A                     	ds	1
   945  002B                     ___lwmod@counter:
   946                           
   947                           ; 1 bytes @ 0xB
   948  002B                     	ds	1
   949  002C                     ?_utoa:
   950  002C                     ?_sprintf:	
   951                           ; 1 bytes @ 0xC
   952                           
   953  002C                     sprintf@f:	
   954                           ; 2 bytes @ 0xC
   955                           
   956  002C                     ___awmod@counter:	
   957                           ; 1 bytes @ 0xC
   958                           
   959  002C                     utoa@val:	
   960                           ; 1 bytes @ 0xC
   961                           
   962                           
   963                           ; 2 bytes @ 0xC
   964  002C                     	ds	1
   965  002D                     ___awmod@sign:
   966                           
   967                           ; 1 bytes @ 0xD
   968  002D                     	ds	1
   969  002E                     ?___flmul:
   970  002E                     utoa@base:	
   971                           ; 4 bytes @ 0xE
   972                           
   973  002E                     ___flmul@b:	
   974                           ; 2 bytes @ 0xE
   975                           
   976                           
   977                           ; 4 bytes @ 0xE
   978  002E                     	ds	1
   979  002F                     ??_sprintf:
   980                           
   981                           ; 1 bytes @ 0xF
   982  002F                     	ds	1
   983  0030                     ??_utoa:
   984                           
   985                           ; 1 bytes @ 0x10
   986  0030                     	ds	1
   987  0031                     utoa@v:
   988                           
   989                           ; 2 bytes @ 0x11
   990  0031                     	ds	1
   991  0032                     sprintf@ap:
   992  0032                     ___flmul@a:	
   993                           ; 1 bytes @ 0x12
   994                           
   995                           
   996                           ; 4 bytes @ 0x12
   997  0032                     	ds	1
   998  0033                     sprintf@flag:
   999  0033                     utoa@c:	
  1000                           ; 1 bytes @ 0x13
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x13
  1004  0033                     	ds	1
  1005  0034                     sprintf@sp:
  1006  0034                     utoa@buf:	
  1007                           ; 1 bytes @ 0x14
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x14
  1011  0034                     	ds	1
  1012  0035                     ?_itoa:
  1013  0035                     sprintf@val:	
  1014                           ; 1 bytes @ 0x15
  1015                           
  1016  0035                     itoa@val:	
  1017                           ; 2 bytes @ 0x15
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x15
  1021  0035                     	ds	1
  1022  0036                     ??___flmul:
  1023                           
  1024                           ; 1 bytes @ 0x16
  1025  0036                     	ds	1
  1026  0037                     sprintf@prec:
  1027  0037                     itoa@base:	
  1028                           ; 1 bytes @ 0x17
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x17
  1032  0037                     	ds	1
  1033  0038                     sprintf@c:
  1034                           
  1035                           ; 1 bytes @ 0x18
  1036  0038                     	ds	1
  1037  0039                     ??_itoa:
  1038                           
  1039                           ; 1 bytes @ 0x19
  1040  0039                     	ds	2
  1041  003B                     ___flmul@sign:
  1042  003B                     itoa@buf:	
  1043                           ; 1 bytes @ 0x1B
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x1B
  1047  003B                     	ds	1
  1048  003C                     ___flmul@aexp:
  1049                           
  1050                           ; 1 bytes @ 0x1C
  1051  003C                     	ds	1
  1052  003D                     ___flmul@grs:
  1053                           
  1054                           ; 4 bytes @ 0x1D
  1055  003D                     	ds	4
  1056  0041                     ___flmul@bexp:
  1057                           
  1058                           ; 1 bytes @ 0x21
  1059  0041                     	ds	1
  1060  0042                     ___flmul@prod:
  1061                           
  1062                           ; 4 bytes @ 0x22
  1063  0042                     	ds	4
  1064  0046                     ___flmul@temp:
  1065                           
  1066                           ; 2 bytes @ 0x26
  1067  0046                     	ds	2
  1068  0048                     ?___fltol:
  1069  0048                     ?___fldiv:	
  1070                           ; 4 bytes @ 0x28
  1071                           
  1072  0048                     ___fltol@f1:	
  1073                           ; 4 bytes @ 0x28
  1074                           
  1075  0048                     ___fldiv@a:	
  1076                           ; 4 bytes @ 0x28
  1077                           
  1078                           
  1079                           ; 4 bytes @ 0x28
  1080  0048                     	ds	4
  1081  004C                     ??___fltol:
  1082  004C                     ___fldiv@b:	
  1083                           ; 1 bytes @ 0x2C
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x2C
  1087  004C                     	ds	4
  1088  0050                     ??___fldiv:
  1089                           
  1090                           ; 1 bytes @ 0x30
  1091  0050                     	ds	1
  1092  0051                     ___fltol@sign1:
  1093                           
  1094                           ; 1 bytes @ 0x31
  1095  0051                     	ds	1
  1096  0052                     ___fltol@exp1:
  1097                           
  1098                           ; 1 bytes @ 0x32
  1099  0052                     	ds	3
  1100  0055                     ___fldiv@rem:
  1101                           
  1102                           ; 4 bytes @ 0x35
  1103  0055                     	ds	4
  1104  0059                     ___fldiv@sign:
  1105                           
  1106                           ; 1 bytes @ 0x39
  1107  0059                     	ds	1
  1108  005A                     ___fldiv@new_exp:
  1109                           
  1110                           ; 2 bytes @ 0x3A
  1111  005A                     	ds	2
  1112  005C                     ___fldiv@grs:
  1113                           
  1114                           ; 4 bytes @ 0x3C
  1115  005C                     	ds	4
  1116  0060                     ___fldiv@bexp:
  1117                           
  1118                           ; 1 bytes @ 0x40
  1119  0060                     	ds	1
  1120  0061                     ___fldiv@aexp:
  1121                           
  1122                           ; 1 bytes @ 0x41
  1123  0061                     	ds	1
  1124                           
  1125                           	psect	maintext
  1126  0AD0                     __pmaintext:	
  1127 ;;
  1128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1129 ;;
  1130 ;; *************** function _main *****************
  1131 ;; Defined at:
  1132 ;;		line 46 in file "main.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : B00/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels required when called:    6
  1152 ;; This function calls:
  1153 ;;		_ADC
  1154 ;;		_Counter
  1155 ;;		_SerialCom
  1156 ;;		_UART_INIT
  1157 ;;		_inicializacion
  1158 ;; This function is called by:
  1159 ;;		Startup code after reset
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _main
  1165  0AD0                     _main:
  1166  0AD0                     l3422:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1169                           
  1170  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0AD1  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0AD2  080F               	movf	15,w	;volatile
  1173  0AD3  398F               	andlw	-113
  1174  0AD4  3860               	iorlw	96
  1175  0AD5  008F               	movwf	15	;volatile
  1176  0AD6                     l3424:
  1177  0AD6  118F               	bcf	15,3	;volatile
  1178  0AD7                     l3426:
  1179  0AD7  110F               	bcf	15,2	;volatile
  1180  0AD8                     l3428:
  1181  0AD8  108F               	bcf	15,1	;volatile
  1182  0AD9                     l3430:
  1183  0AD9  140F               	bsf	15,0	;volatile
  1184  0ADA                     l3432:
  1185  0ADA  3003               	movlw	3
  1186  0ADB  1683               	bsf	3,5	;RP0=1, select bank3
  1187  0ADC  1703               	bsf	3,6	;RP1=1, select bank3
  1188  0ADD  0088               	movwf	8	;volatile
  1189  0ADE                     l3434:
  1190  0ADE  0189               	clrf	9	;volatile
  1191  0ADF                     l3436:
  1192  0ADF  3003               	movlw	3
  1193  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0AE2  0085               	movwf	5	;volatile
  1196  0AE3                     l3438:
  1197  0AE3  0186               	clrf	6	;volatile
  1198  0AE4                     l3440:
  1199  0AE4  0188               	clrf	8	;volatile
  1200  0AE5                     l3442:
  1201  0AE5  3080               	movlw	128
  1202  0AE6  0087               	movwf	7	;volatile
  1203  0AE7                     l3444:
  1204  0AE7  0189               	clrf	9	;volatile
  1205  0AE8                     l3446:
  1206  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0AEA  0185               	clrf	5	;volatile
  1209  0AEB                     l3448:
  1210  0AEB  0186               	clrf	6	;volatile
  1211  0AEC                     l3450:
  1212  0AEC  0187               	clrf	7	;volatile
  1213  0AED                     l3452:
  1214  0AED  0188               	clrf	8	;volatile
  1215  0AEE                     l3454:
  1216  0AEE  0189               	clrf	9	;volatile
  1217  0AEF                     l3456:
  1218  0AEF  120A  158A  2113  120A  158A  	fcall	_inicializacion
  1219  0AF4                     l3458:
  1220  0AF4  120A  118A  2028  120A  158A  	fcall	_ADC
  1221  0AF9                     l3460:
  1222  0AF9  120A  158A  20DD  120A  158A  	fcall	_UART_INIT
  1223  0AFE                     l3462:
  1224  0AFE  120A  158A  20F6  120A  158A  	fcall	_SerialCom
  1225  0B03                     l3464:
  1226  0B03  120A  158A  217A  120A  158A  	fcall	_Counter
  1227  0B08  2AEF               	goto	l3456
  1228  0B09  120A  118A  280C   	ljmp	start
  1229  0B0C                     __end_of_main:
  1230                           
  1231                           	psect	text1
  1232  0913                     __ptext1:	
  1233 ;; *************** function _inicializacion *****************
  1234 ;; Defined at:
  1235 ;;		line 58 in file "LCD.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    4
  1256 ;; This function calls:
  1257 ;;		_lcd_cmd
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _inicializacion
  1265  0913                     _inicializacion:
  1266  0913                     l3324:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _inicializacion: [wreg+status,2+status,0+pclath+cstack]
  1269                           
  1270                           
  1271                           ;LCD.c: 59:     lcd_cmd(0x38);
  1272  0913  3038               	movlw	56
  1273  0914  120A  158A  209E  120A  158A  	fcall	_lcd_cmd
  1274                           
  1275                           ;LCD.c: 60:     lcd_cmd(0x0C);
  1276  0919  300C               	movlw	12
  1277  091A  120A  158A  209E  120A  158A  	fcall	_lcd_cmd
  1278                           
  1279                           ;LCD.c: 61:     lcd_cmd(0x01);
  1280  091F  3001               	movlw	1
  1281  0920  120A  158A  209E  120A  158A  	fcall	_lcd_cmd
  1282                           
  1283                           ;LCD.c: 62:     lcd_cmd(0x06);
  1284  0925  3006               	movlw	6
  1285  0926  120A  158A  209E  120A  158A  	fcall	_lcd_cmd
  1286                           
  1287                           ;LCD.c: 63:     lcd_cmd(0x80);
  1288  092B  3080               	movlw	128
  1289  092C  120A  158A  209E  120A  158A  	fcall	_lcd_cmd
  1290  0931                     l37:
  1291  0931  0008               	return
  1292  0932                     __end_of_inicializacion:
  1293                           
  1294                           	psect	text2
  1295  08DD                     __ptext2:	
  1296 ;; *************** function _UART_INIT *****************
  1297 ;; Defined at:
  1298 ;;		line 5 in file "eusart.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    2
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _UART_INIT
  1328  08DD                     _UART_INIT:
  1329  08DD                     l1750:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _UART_INIT: [wreg+status,2]
  1332                           
  1333                           
  1334                           ;eusart.c: 7:     INTCONbits.GIE = 1;
  1335  08DD  178B               	bsf	11,7	;volatile
  1336                           
  1337                           ;eusart.c: 8:     INTCONbits.PEIE = 1;
  1338  08DE  170B               	bsf	11,6	;volatile
  1339                           
  1340                           ;eusart.c: 9:     PIE1bits.RCIE = 1;
  1341  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  1342  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  1343  08E1  168C               	bsf	12,5	;volatile
  1344                           
  1345                           ;eusart.c: 10:     PIE1bits.TXIE = 1;
  1346  08E2  160C               	bsf	12,4	;volatile
  1347                           
  1348                           ;eusart.c: 12:     PIR1bits.RCIF = 0;
  1349  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  1350  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  1351  08E5  128C               	bcf	12,5	;volatile
  1352                           
  1353                           ;eusart.c: 13:     PIR1bits.TXIF = 0;
  1354  08E6  120C               	bcf	12,4	;volatile
  1355  08E7                     l1752:
  1356                           
  1357                           ;eusart.c: 14:     SPBRGH = 0;
  1358  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  1359  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  1360  08E9  019A               	clrf	26	;volatile
  1361  08EA                     l1754:
  1362                           
  1363                           ;eusart.c: 15:     SPBRG = 25;
  1364  08EA  3019               	movlw	25
  1365  08EB  0099               	movwf	25	;volatile
  1366  08EC                     l1756:
  1367                           
  1368                           ;eusart.c: 16:     TXSTA = 0b00100100;
  1369  08EC  3024               	movlw	36
  1370  08ED  0098               	movwf	24	;volatile
  1371  08EE                     l1758:
  1372                           
  1373                           ;eusart.c: 17:     RCSTA = 0b10010000;
  1374  08EE  3090               	movlw	144
  1375  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1376  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  1377  08F1  0098               	movwf	24	;volatile
  1378  08F2                     l1760:
  1379                           
  1380                           ;eusart.c: 18:     BAUDCTLbits.BRG16 = 0;
  1381  08F2  1683               	bsf	3,5	;RP0=1, select bank3
  1382  08F3  1703               	bsf	3,6	;RP1=1, select bank3
  1383  08F4  1187               	bcf	7,3	;volatile
  1384  08F5                     l106:
  1385  08F5  0008               	return
  1386  08F6                     __end_of_UART_INIT:
  1387                           
  1388                           	psect	text3
  1389  097A                     __ptext3:	
  1390 ;; *************** function _Counter *****************
  1391 ;; Defined at:
  1392 ;;		line 74 in file "adc.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    2
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _Counter
  1422  097A                     _Counter:
  1423  097A                     l1762:	
  1424                           ;incstack = 0
  1425                           ; Regs used in _Counter: [wreg+status,2+status,0]
  1426                           
  1427                           
  1428                           ;adc.c: 75:     if (Lectura == '+') {
  1429  097A  302B               	movlw	43
  1430  097B  0676               	xorwf	_Lectura,w
  1431  097C  0477               	iorwf	_Lectura+1,w
  1432  097D  1D03               	btfss	3,2
  1433  097E  2980               	goto	u1541
  1434  097F  2981               	goto	u1540
  1435  0980                     u1541:
  1436  0980  298A               	goto	l1768
  1437  0981                     u1540:
  1438  0981                     l1764:
  1439                           
  1440                           ;adc.c: 76:         Contador = Contador + 1;
  1441  0981  0878               	movf	_Contador,w
  1442  0982  3E01               	addlw	1
  1443  0983  00F8               	movwf	_Contador
  1444  0984  0879               	movf	_Contador+1,w
  1445  0985  1803               	skipnc
  1446  0986  3E01               	addlw	1
  1447  0987  3E00               	addlw	0
  1448  0988  00F9               	movwf	_Contador+1
  1449  0989  299E               	goto	l215
  1450  098A                     l1768:
  1451                           
  1452                           ;adc.c: 80:     if (Lectura == '-') {
  1453  098A  302D               	movlw	45
  1454  098B  0676               	xorwf	_Lectura,w
  1455  098C  0477               	iorwf	_Lectura+1,w
  1456  098D  1D03               	btfss	3,2
  1457  098E  2990               	goto	u1551
  1458  098F  2991               	goto	u1550
  1459  0990                     u1551:
  1460  0990  299A               	goto	l1774
  1461  0991                     u1550:
  1462  0991                     l1770:
  1463                           
  1464                           ;adc.c: 81:         Contador = Contador - 1;
  1465  0991  0878               	movf	_Contador,w
  1466  0992  3EFF               	addlw	255
  1467  0993  00F8               	movwf	_Contador
  1468  0994  0879               	movf	_Contador+1,w
  1469  0995  1803               	skipnc
  1470  0996  3E01               	addlw	1
  1471  0997  3EFF               	addlw	255
  1472  0998  00F9               	movwf	_Contador+1
  1473  0999  299E               	goto	l215
  1474  099A                     l1774:
  1475                           
  1476                           ;adc.c: 84:     Lectura = '0';
  1477  099A  3030               	movlw	48
  1478  099B  00F6               	movwf	_Lectura
  1479  099C  3000               	movlw	0
  1480  099D  00F7               	movwf	_Lectura+1
  1481  099E                     l215:
  1482  099E  0008               	return
  1483  099F                     __end_of_Counter:
  1484                           
  1485                           	psect	text4
  1486  0028                     __ptext4:	
  1487 ;; *************** function _ADC *****************
  1488 ;; Defined at:
  1489 ;;		line 100 in file "adc.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0
  1505 ;;      Temps:          0       0       4       0       0
  1506 ;;      Totals:         0       0       4       0       0
  1507 ;;Total ram usage:        4 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    5
  1510 ;; This function calls:
  1511 ;;		_SerialCom
  1512 ;;		___awdiv
  1513 ;;		___awmod
  1514 ;;		___fldiv
  1515 ;;		___flmul
  1516 ;;		___fltol
  1517 ;;		___xxtofl
  1518 ;;		_itoa
  1519 ;;		_lcd_cmd
  1520 ;;		_lcd_msg
  1521 ;;		_sprintf
  1522 ;;		_strcat
  1523 ;;		_strcpy
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _ADC
  1531  0028                     _ADC:
  1532  0028                     l3326:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1535                           
  1536                           
  1537                           ;adc.c: 101:     SerialCom();
  1538  0028  120A  158A  20F6  120A  118A  	fcall	_SerialCom
  1539  002D                     l3328:
  1540                           
  1541                           ;adc.c: 104:         ADCON0bits.ADCS = 01;
  1542  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1543  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1544  002F  081F               	movf	31,w	;volatile
  1545  0030  393F               	andlw	-193
  1546  0031  3840               	iorlw	64
  1547  0032  009F               	movwf	31	;volatile
  1548  0033                     l3330:
  1549                           
  1550                           ;adc.c: 105:         ADCON0bits.ADON = 1;
  1551  0033  141F               	bsf	31,0	;volatile
  1552  0034                     l3332:
  1553                           
  1554                           ;adc.c: 106:         ADCON1bits.ADFM = 0;
  1555  0034  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0035  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0036  139F               	bcf	31,7	;volatile
  1558  0037                     l3334:
  1559                           
  1560                           ;adc.c: 107:         ADCON1bits.VCFG0 = 0;
  1561  0037  121F               	bcf	31,4	;volatile
  1562  0038                     l3336:
  1563                           
  1564                           ;adc.c: 108:         ADCON1bits.VCFG1 = 0;
  1565  0038  129F               	bcf	31,5	;volatile
  1566  0039                     l3338:
  1567                           
  1568                           ;adc.c: 110:         lcd_msg("S1:    S2:    S3:");
  1569  0039  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1570  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1571  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1572  003C  00A1               	movwf	lcd_msg@c
  1573  003D  3080               	movlw	128
  1574  003E  00A2               	movwf	lcd_msg@c+1
  1575  003F  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  1576  0044                     l3340:
  1577                           
  1578                           ;adc.c: 114:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1579  0044  300D               	movlw	13
  1580  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0047  00E3               	movwf	(??_ADC^(0+128)+1)
  1583  0048  30FB               	movlw	251
  1584  0049  00E2               	movwf	??_ADC^(0+128)
  1585  004A                     u4217:
  1586  004A  0BE2               	decfsz	??_ADC^(0+128),f
  1587  004B  284A               	goto	u4217
  1588  004C  0BE3               	decfsz	(??_ADC^(0+128)+1),f
  1589  004D  284A               	goto	u4217
  1590  004E                     l3342:
  1591                           
  1592                           ;adc.c: 115:             ADCON0bits.CHS = 0000;
  1593  004E  30C3               	movlw	-61
  1594  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0051  059F               	andwf	31,f	;volatile
  1597  0052                     l3344:
  1598                           
  1599                           ;adc.c: 116:             ADCON0bits.ADON = 1;
  1600  0052  141F               	bsf	31,0	;volatile
  1601  0053                     l3346:
  1602                           
  1603                           ;adc.c: 117:             ADCON0bits.GO = 1;
  1604  0053  149F               	bsf	31,1	;volatile
  1605  0054                     l227:	
  1606                           ;adc.c: 118:             while (ADCON0bits.GO);
  1607                           
  1608  0054  189F               	btfsc	31,1	;volatile
  1609  0055  2857               	goto	u4191
  1610  0056  2858               	goto	u4190
  1611  0057                     u4191:
  1612  0057  2854               	goto	l227
  1613  0058                     u4190:
  1614  0058                     l3348:
  1615                           
  1616                           ;adc.c: 120:             ADC1ADRESH = ADRESH;
  1617  0058  081E               	movf	30,w	;volatile
  1618  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1619  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1620  005B  00E2               	movwf	??_ADC^(0+128)
  1621  005C  0862               	movf	??_ADC^(0+128),w
  1622  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1623  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1624  005F  00EF               	movwf	_ADC1ADRESH
  1625  0060                     l3350:
  1626                           
  1627                           ;adc.c: 122:             ADCLA = (ADC1ADRESH * 5.0) / 255.0;
  1628  0060  3043               	movlw	67
  1629  0061  00CB               	movwf	___fldiv@a+3
  1630  0062  307F               	movlw	127
  1631  0063  00CA               	movwf	___fldiv@a+2
  1632  0064  3000               	movlw	0
  1633  0065  00C9               	movwf	___fldiv@a+1
  1634  0066  3000               	movlw	0
  1635  0067  00C8               	movwf	___fldiv@a
  1636  0068  3040               	movlw	64
  1637  0069  00B1               	movwf	___flmul@b+3
  1638  006A  30A0               	movlw	160
  1639  006B  00B0               	movwf	___flmul@b+2
  1640  006C  3000               	movlw	0
  1641  006D  00AF               	movwf	___flmul@b+1
  1642  006E  3000               	movlw	0
  1643  006F  00AE               	movwf	___flmul@b
  1644  0070  086F               	movf	_ADC1ADRESH,w
  1645  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0073  00E2               	movwf	??_ADC^(0+128)
  1648  0074  01E3               	clrf	(??_ADC^(0+128)+1)
  1649  0075  01E4               	clrf	(??_ADC^(0+128)+2)
  1650  0076  01E5               	clrf	(??_ADC^(0+128)+3)
  1651  0077  0865               	movf	(??_ADC+3)^(0+128),w
  1652  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1654  007A  00A3               	movwf	___xxtofl@val+3
  1655  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1656  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1657  007D  0864               	movf	(??_ADC+2)^(0+128),w
  1658  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1659  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0080  00A2               	movwf	___xxtofl@val+2
  1661  0081  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0082  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0083  0863               	movf	(??_ADC+1)^(0+128),w
  1664  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0086  00A1               	movwf	___xxtofl@val+1
  1667  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0089  0862               	movf	??_ADC^(0+128),w
  1670  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1671  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1672  008C  00A0               	movwf	___xxtofl@val
  1673  008D  3001               	movlw	1
  1674  008E  120A  118A  26F4  120A  118A  	fcall	___xxtofl
  1675  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0095  0823               	movf	?___xxtofl+3,w
  1678  0096  00B5               	movwf	___flmul@a+3
  1679  0097  0822               	movf	?___xxtofl+2,w
  1680  0098  00B4               	movwf	___flmul@a+2
  1681  0099  0821               	movf	?___xxtofl+1,w
  1682  009A  00B3               	movwf	___flmul@a+1
  1683  009B  0820               	movf	?___xxtofl,w
  1684  009C  00B2               	movwf	___flmul@a
  1685  009D  120A  118A  2393  120A  118A  	fcall	___flmul
  1686  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1687  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1688  00A4  0831               	movf	?___flmul+3,w
  1689  00A5  00CF               	movwf	___fldiv@b+3
  1690  00A6  0830               	movf	?___flmul+2,w
  1691  00A7  00CE               	movwf	___fldiv@b+2
  1692  00A8  082F               	movf	?___flmul+1,w
  1693  00A9  00CD               	movwf	___fldiv@b+1
  1694  00AA  082E               	movf	?___flmul,w
  1695  00AB  00CC               	movwf	___fldiv@b
  1696  00AC  120A  158A  2623  120A  118A  	fcall	___fldiv
  1697  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1698  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1699  00B3  084B               	movf	?___fldiv+3,w
  1700  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1701  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1702  00B6  00AC               	movwf	(_ADCLA+3)^(0+128)
  1703  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1704  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1705  00B9  084A               	movf	?___fldiv+2,w
  1706  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1707  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1708  00BC  00AB               	movwf	(_ADCLA+2)^(0+128)
  1709  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1710  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1711  00BF  0849               	movf	?___fldiv+1,w
  1712  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1713  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1714  00C2  00AA               	movwf	(_ADCLA+1)^(0+128)
  1715  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1716  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1717  00C5  0848               	movf	?___fldiv,w
  1718  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1719  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1720  00C8  00A9               	movwf	_ADCLA^(0+128)
  1721  00C9                     l3352:
  1722                           
  1723                           ;adc.c: 123:             DCADC1 = (ADCLA)*100;
  1724  00C9  082C               	movf	(_ADCLA+3)^(0+128),w
  1725  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1726  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1727  00CC  00B5               	movwf	___flmul@a+3
  1728  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1729  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1730  00CF  082B               	movf	(_ADCLA+2)^(0+128),w
  1731  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1732  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1733  00D2  00B4               	movwf	___flmul@a+2
  1734  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1735  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1736  00D5  082A               	movf	(_ADCLA+1)^(0+128),w
  1737  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1738  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1739  00D8  00B3               	movwf	___flmul@a+1
  1740  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1741  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1742  00DB  0829               	movf	_ADCLA^(0+128),w
  1743  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1744  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1745  00DE  00B2               	movwf	___flmul@a
  1746  00DF  3042               	movlw	66
  1747  00E0  00B1               	movwf	___flmul@b+3
  1748  00E1  30C8               	movlw	200
  1749  00E2  00B0               	movwf	___flmul@b+2
  1750  00E3  3000               	movlw	0
  1751  00E4  00AF               	movwf	___flmul@b+1
  1752  00E5  3000               	movlw	0
  1753  00E6  00AE               	movwf	___flmul@b
  1754  00E7  120A  118A  2393  120A  118A  	fcall	___flmul
  1755  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1756  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1757  00EE  0831               	movf	?___flmul+3,w
  1758  00EF  00CB               	movwf	___fltol@f1+3
  1759  00F0  0830               	movf	?___flmul+2,w
  1760  00F1  00CA               	movwf	___fltol@f1+2
  1761  00F2  082F               	movf	?___flmul+1,w
  1762  00F3  00C9               	movwf	___fltol@f1+1
  1763  00F4  082E               	movf	?___flmul,w
  1764  00F5  00C8               	movwf	___fltol@f1
  1765  00F6  120A  158A  2442  120A  118A  	fcall	___fltol
  1766  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1767  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1768  00FD  0849               	movf	?___fltol+1,w
  1769  00FE  00ED               	movwf	_DCADC1+1
  1770  00FF  0848               	movf	?___fltol,w
  1771  0100  00EC               	movwf	_DCADC1
  1772  0101                     l3354:
  1773                           
  1774                           ;adc.c: 125:             ADC1A = DCADC1 % 10;
  1775  0101  300A               	movlw	10
  1776  0102  00A8               	movwf	___awmod@divisor
  1777  0103  3000               	movlw	0
  1778  0104  00A9               	movwf	___awmod@divisor+1
  1779  0105  086D               	movf	_DCADC1+1,w
  1780  0106  00AB               	movwf	___awmod@dividend+1
  1781  0107  086C               	movf	_DCADC1,w
  1782  0108  00AA               	movwf	___awmod@dividend
  1783  0109  120A  158A  230C  120A  118A  	fcall	___awmod
  1784  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1785  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0110  0829               	movf	?___awmod+1,w
  1787  0111  00EB               	movwf	_ADC1A+1
  1788  0112  0828               	movf	?___awmod,w
  1789  0113  00EA               	movwf	_ADC1A
  1790  0114                     l3356:
  1791                           
  1792                           ;adc.c: 126:             itoa(ADCchar1A, ADC1A, 10);
  1793  0114  086B               	movf	_ADC1A+1,w
  1794  0115  00B6               	movwf	itoa@val+1
  1795  0116  086A               	movf	_ADC1A,w
  1796  0117  00B5               	movwf	itoa@val
  1797  0118  300A               	movlw	10
  1798  0119  00B7               	movwf	itoa@base
  1799  011A  3000               	movlw	0
  1800  011B  00B8               	movwf	itoa@base+1
  1801  011C  30DD               	movlw	(low (_ADCchar1A| 0))& (0+255)
  1802  011D  120A  158A  219F  120A  118A  	fcall	_itoa
  1803  0122                     l3358:
  1804                           
  1805                           ;adc.c: 127:             ADC1B = (DCADC1 / 10) % 10;
  1806  0122  300A               	movlw	10
  1807  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0125  00A8               	movwf	___awmod@divisor
  1810  0126  3000               	movlw	0
  1811  0127  00A9               	movwf	___awmod@divisor+1
  1812  0128  300A               	movlw	10
  1813  0129  00A0               	movwf	___awdiv@divisor
  1814  012A  3000               	movlw	0
  1815  012B  00A1               	movwf	___awdiv@divisor+1
  1816  012C  086D               	movf	_DCADC1+1,w
  1817  012D  00A3               	movwf	___awdiv@dividend+1
  1818  012E  086C               	movf	_DCADC1,w
  1819  012F  00A2               	movwf	___awdiv@dividend
  1820  0130  120A  158A  2367  120A  118A  	fcall	___awdiv
  1821  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0137  0821               	movf	?___awdiv+1,w
  1824  0138  00AB               	movwf	___awmod@dividend+1
  1825  0139  0820               	movf	?___awdiv,w
  1826  013A  00AA               	movwf	___awmod@dividend
  1827  013B  120A  158A  230C  120A  118A  	fcall	___awmod
  1828  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0142  0829               	movf	?___awmod+1,w
  1831  0143  00E9               	movwf	_ADC1B+1
  1832  0144  0828               	movf	?___awmod,w
  1833  0145  00E8               	movwf	_ADC1B
  1834  0146                     l3360:
  1835                           
  1836                           ;adc.c: 128:             itoa(ADCchar1B, ADC1B, 10);
  1837  0146  0869               	movf	_ADC1B+1,w
  1838  0147  00B6               	movwf	itoa@val+1
  1839  0148  0868               	movf	_ADC1B,w
  1840  0149  00B5               	movwf	itoa@val
  1841  014A  300A               	movlw	10
  1842  014B  00B7               	movwf	itoa@base
  1843  014C  3000               	movlw	0
  1844  014D  00B8               	movwf	itoa@base+1
  1845  014E  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  1846  014F  120A  158A  219F  120A  118A  	fcall	_itoa
  1847  0154                     l3362:
  1848                           
  1849                           ;adc.c: 129:             ADC1C = (DCADC1 / 100) % 10;
  1850  0154  300A               	movlw	10
  1851  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0157  00A8               	movwf	___awmod@divisor
  1854  0158  3000               	movlw	0
  1855  0159  00A9               	movwf	___awmod@divisor+1
  1856  015A  3064               	movlw	100
  1857  015B  00A0               	movwf	___awdiv@divisor
  1858  015C  3000               	movlw	0
  1859  015D  00A1               	movwf	___awdiv@divisor+1
  1860  015E  086D               	movf	_DCADC1+1,w
  1861  015F  00A3               	movwf	___awdiv@dividend+1
  1862  0160  086C               	movf	_DCADC1,w
  1863  0161  00A2               	movwf	___awdiv@dividend
  1864  0162  120A  158A  2367  120A  118A  	fcall	___awdiv
  1865  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0169  0821               	movf	?___awdiv+1,w
  1868  016A  00AB               	movwf	___awmod@dividend+1
  1869  016B  0820               	movf	?___awdiv,w
  1870  016C  00AA               	movwf	___awmod@dividend
  1871  016D  120A  158A  230C  120A  118A  	fcall	___awmod
  1872  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0174  0829               	movf	?___awmod+1,w
  1875  0175  00E7               	movwf	_ADC1C+1
  1876  0176  0828               	movf	?___awmod,w
  1877  0177  00E6               	movwf	_ADC1C
  1878  0178                     l3364:
  1879                           
  1880                           ;adc.c: 130:             itoa(ADCchar1C, ADC1C, 10);
  1881  0178  0867               	movf	_ADC1C+1,w
  1882  0179  00B6               	movwf	itoa@val+1
  1883  017A  0866               	movf	_ADC1C,w
  1884  017B  00B5               	movwf	itoa@val
  1885  017C  300A               	movlw	10
  1886  017D  00B7               	movwf	itoa@base
  1887  017E  3000               	movlw	0
  1888  017F  00B8               	movwf	itoa@base+1
  1889  0180  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  1890  0181  120A  158A  219F  120A  118A  	fcall	_itoa
  1891  0186                     l3366:
  1892                           
  1893                           ;adc.c: 132:             strcat(ADCchar1B, ADCchar1A);
  1894  0186  30DD               	movlw	(low (_ADCchar1A| 0))& (0+255)
  1895  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0189  00E2               	movwf	??_ADC^(0+128)
  1898  018A  0862               	movf	??_ADC^(0+128),w
  1899  018B  00F4               	movwf	strcat@from
  1900  018C  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  1901  018D  120A  158A  2269  120A  118A  	fcall	_strcat
  1902  0192                     l3368:
  1903                           
  1904                           ;adc.c: 133:             strcpy(PUNTO1A, ".");
  1905  0192  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1906  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0194  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0195  00E2               	movwf	??_ADC^(0+128)
  1909  0196  0862               	movf	??_ADC^(0+128),w
  1910  0197  00F4               	movwf	strcpy@from
  1911  0198  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  1912  0199  120A  158A  2132  120A  118A  	fcall	_strcpy
  1913  019E                     l3370:
  1914                           
  1915                           ;adc.c: 134:             strcat(PUNTO1A, ADCchar1B);
  1916  019E  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  1917  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1918  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1919  01A1  00E2               	movwf	??_ADC^(0+128)
  1920  01A2  0862               	movf	??_ADC^(0+128),w
  1921  01A3  00F4               	movwf	strcat@from
  1922  01A4  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  1923  01A5  120A  158A  2269  120A  118A  	fcall	_strcat
  1924  01AA                     l3372:
  1925                           
  1926                           ;adc.c: 135:             strcat(ADCchar1C, PUNTO1A);
  1927  01AA  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  1928  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1929  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1930  01AD  00E2               	movwf	??_ADC^(0+128)
  1931  01AE  0862               	movf	??_ADC^(0+128),w
  1932  01AF  00F4               	movwf	strcat@from
  1933  01B0  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  1934  01B1  120A  158A  2269  120A  118A  	fcall	_strcat
  1935  01B6                     l3374:
  1936                           
  1937                           ;adc.c: 137:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1938  01B6  300D               	movlw	13
  1939  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1940  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1941  01B9  00E3               	movwf	(??_ADC^(0+128)+1)
  1942  01BA  30FB               	movlw	251
  1943  01BB  00E2               	movwf	??_ADC^(0+128)
  1944  01BC                     u4227:
  1945  01BC  0BE2               	decfsz	??_ADC^(0+128),f
  1946  01BD  29BC               	goto	u4227
  1947  01BE  0BE3               	decfsz	(??_ADC^(0+128)+1),f
  1948  01BF  29BC               	goto	u4227
  1949  01C0                     l3376:
  1950                           
  1951                           ;adc.c: 138:             ADCON0bits.CHS = 0001;
  1952  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1953  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1954  01C2  081F               	movf	31,w	;volatile
  1955  01C3  39C3               	andlw	-61
  1956  01C4  3804               	iorlw	4
  1957  01C5  009F               	movwf	31	;volatile
  1958  01C6                     l3378:
  1959                           
  1960                           ;adc.c: 139:             ADCON0bits.ADON = 1;
  1961  01C6  141F               	bsf	31,0	;volatile
  1962  01C7                     l3380:
  1963                           
  1964                           ;adc.c: 140:             ADCON0bits.GO = 1;
  1965  01C7  149F               	bsf	31,1	;volatile
  1966  01C8                     l230:	
  1967                           ;adc.c: 141:             while (ADCON0bits.GO);
  1968                           
  1969  01C8  189F               	btfsc	31,1	;volatile
  1970  01C9  29CB               	goto	u4201
  1971  01CA  29CC               	goto	u4200
  1972  01CB                     u4201:
  1973  01CB  29C8               	goto	l230
  1974  01CC                     u4200:
  1975  01CC                     l3382:
  1976                           
  1977                           ;adc.c: 142:             ADC2ADRESH = ADRESH;
  1978  01CC  081E               	movf	30,w	;volatile
  1979  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1980  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1981  01CF  00E2               	movwf	??_ADC^(0+128)
  1982  01D0  0862               	movf	??_ADC^(0+128),w
  1983  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1984  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1985  01D3  00EE               	movwf	_ADC2ADRESH
  1986  01D4                     l3384:
  1987                           
  1988                           ;adc.c: 143:             ADCLB = ADC2ADRESH * 5.0 / 255.0;
  1989  01D4  3043               	movlw	67
  1990  01D5  00CB               	movwf	___fldiv@a+3
  1991  01D6  307F               	movlw	127
  1992  01D7  00CA               	movwf	___fldiv@a+2
  1993  01D8  3000               	movlw	0
  1994  01D9  00C9               	movwf	___fldiv@a+1
  1995  01DA  3000               	movlw	0
  1996  01DB  00C8               	movwf	___fldiv@a
  1997  01DC  3040               	movlw	64
  1998  01DD  00B1               	movwf	___flmul@b+3
  1999  01DE  30A0               	movlw	160
  2000  01DF  00B0               	movwf	___flmul@b+2
  2001  01E0  3000               	movlw	0
  2002  01E1  00AF               	movwf	___flmul@b+1
  2003  01E2  3000               	movlw	0
  2004  01E3  00AE               	movwf	___flmul@b
  2005  01E4  086E               	movf	_ADC2ADRESH,w
  2006  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2007  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2008  01E7  00E2               	movwf	??_ADC^(0+128)
  2009  01E8  01E3               	clrf	(??_ADC^(0+128)+1)
  2010  01E9  01E4               	clrf	(??_ADC^(0+128)+2)
  2011  01EA  01E5               	clrf	(??_ADC^(0+128)+3)
  2012  01EB  0865               	movf	(??_ADC+3)^(0+128),w
  2013  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2014  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2015  01EE  00A3               	movwf	___xxtofl@val+3
  2016  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2017  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2018  01F1  0864               	movf	(??_ADC+2)^(0+128),w
  2019  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2020  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2021  01F4  00A2               	movwf	___xxtofl@val+2
  2022  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2023  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  2024  01F7  0863               	movf	(??_ADC+1)^(0+128),w
  2025  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2026  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2027  01FA  00A1               	movwf	___xxtofl@val+1
  2028  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2029  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2030  01FD  0862               	movf	??_ADC^(0+128),w
  2031  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2032  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0200  00A0               	movwf	___xxtofl@val
  2034  0201  3001               	movlw	1
  2035  0202  120A  118A  26F4  120A  118A  	fcall	___xxtofl
  2036  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0209  0823               	movf	?___xxtofl+3,w
  2039  020A  00B5               	movwf	___flmul@a+3
  2040  020B  0822               	movf	?___xxtofl+2,w
  2041  020C  00B4               	movwf	___flmul@a+2
  2042  020D  0821               	movf	?___xxtofl+1,w
  2043  020E  00B3               	movwf	___flmul@a+1
  2044  020F  0820               	movf	?___xxtofl,w
  2045  0210  00B2               	movwf	___flmul@a
  2046  0211  120A  118A  2393  120A  118A  	fcall	___flmul
  2047  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0218  0831               	movf	?___flmul+3,w
  2050  0219  00CF               	movwf	___fldiv@b+3
  2051  021A  0830               	movf	?___flmul+2,w
  2052  021B  00CE               	movwf	___fldiv@b+2
  2053  021C  082F               	movf	?___flmul+1,w
  2054  021D  00CD               	movwf	___fldiv@b+1
  2055  021E  082E               	movf	?___flmul,w
  2056  021F  00CC               	movwf	___fldiv@b
  2057  0220  120A  158A  2623  120A  118A  	fcall	___fldiv
  2058  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0227  084B               	movf	?___fldiv+3,w
  2061  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2063  022A  00A8               	movwf	(_ADCLB+3)^(0+128)
  2064  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2065  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2066  022D  084A               	movf	?___fldiv+2,w
  2067  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2068  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0230  00A7               	movwf	(_ADCLB+2)^(0+128)
  2070  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0233  0849               	movf	?___fldiv+1,w
  2073  0234  1683               	bsf	3,5	;RP0=1, select bank1
  2074  0235  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0236  00A6               	movwf	(_ADCLB+1)^(0+128)
  2076  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0239  0848               	movf	?___fldiv,w
  2079  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2080  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2081  023C  00A5               	movwf	_ADCLB^(0+128)
  2082  023D                     l3386:
  2083                           
  2084                           ;adc.c: 144:             DCADC2 = (ADCLB)*100;
  2085  023D  0828               	movf	(_ADCLB+3)^(0+128),w
  2086  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2087  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0240  00B5               	movwf	___flmul@a+3
  2089  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0243  0827               	movf	(_ADCLB+2)^(0+128),w
  2092  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0246  00B4               	movwf	___flmul@a+2
  2095  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2097  0249  0826               	movf	(_ADCLB+1)^(0+128),w
  2098  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2099  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2100  024C  00B3               	movwf	___flmul@a+1
  2101  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2102  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2103  024F  0825               	movf	_ADCLB^(0+128),w
  2104  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0252  00B2               	movwf	___flmul@a
  2107  0253  3042               	movlw	66
  2108  0254  00B1               	movwf	___flmul@b+3
  2109  0255  30C8               	movlw	200
  2110  0256  00B0               	movwf	___flmul@b+2
  2111  0257  3000               	movlw	0
  2112  0258  00AF               	movwf	___flmul@b+1
  2113  0259  3000               	movlw	0
  2114  025A  00AE               	movwf	___flmul@b
  2115  025B  120A  118A  2393  120A  118A  	fcall	___flmul
  2116  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0262  0831               	movf	?___flmul+3,w
  2119  0263  00CB               	movwf	___fltol@f1+3
  2120  0264  0830               	movf	?___flmul+2,w
  2121  0265  00CA               	movwf	___fltol@f1+2
  2122  0266  082F               	movf	?___flmul+1,w
  2123  0267  00C9               	movwf	___fltol@f1+1
  2124  0268  082E               	movf	?___flmul,w
  2125  0269  00C8               	movwf	___fltol@f1
  2126  026A  120A  158A  2442  120A  118A  	fcall	___fltol
  2127  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0271  0849               	movf	?___fltol+1,w
  2130  0272  00E5               	movwf	_DCADC2+1
  2131  0273  0848               	movf	?___fltol,w
  2132  0274  00E4               	movwf	_DCADC2
  2133  0275                     l3388:
  2134                           
  2135                           ;adc.c: 145:             ADC2A = DCADC2 % 10;
  2136  0275  300A               	movlw	10
  2137  0276  00A8               	movwf	___awmod@divisor
  2138  0277  3000               	movlw	0
  2139  0278  00A9               	movwf	___awmod@divisor+1
  2140  0279  0865               	movf	_DCADC2+1,w
  2141  027A  00AB               	movwf	___awmod@dividend+1
  2142  027B  0864               	movf	_DCADC2,w
  2143  027C  00AA               	movwf	___awmod@dividend
  2144  027D  120A  158A  230C  120A  118A  	fcall	___awmod
  2145  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0284  0829               	movf	?___awmod+1,w
  2148  0285  00E3               	movwf	_ADC2A+1
  2149  0286  0828               	movf	?___awmod,w
  2150  0287  00E2               	movwf	_ADC2A
  2151  0288                     l3390:
  2152                           
  2153                           ;adc.c: 146:             itoa(ADCchar2A, ADC2A, 10);
  2154  0288  0863               	movf	_ADC2A+1,w
  2155  0289  00B6               	movwf	itoa@val+1
  2156  028A  0862               	movf	_ADC2A,w
  2157  028B  00B5               	movwf	itoa@val
  2158  028C  300A               	movlw	10
  2159  028D  00B7               	movwf	itoa@base
  2160  028E  3000               	movlw	0
  2161  028F  00B8               	movwf	itoa@base+1
  2162  0290  30C9               	movlw	(low (_ADCchar2A| 0))& (0+255)
  2163  0291  120A  158A  219F  120A  118A  	fcall	_itoa
  2164  0296                     l3392:
  2165                           
  2166                           ;adc.c: 147:             ADC2B = (DCADC2 / 10) % 10;
  2167  0296  300A               	movlw	10
  2168  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0299  00A8               	movwf	___awmod@divisor
  2171  029A  3000               	movlw	0
  2172  029B  00A9               	movwf	___awmod@divisor+1
  2173  029C  300A               	movlw	10
  2174  029D  00A0               	movwf	___awdiv@divisor
  2175  029E  3000               	movlw	0
  2176  029F  00A1               	movwf	___awdiv@divisor+1
  2177  02A0  0865               	movf	_DCADC2+1,w
  2178  02A1  00A3               	movwf	___awdiv@dividend+1
  2179  02A2  0864               	movf	_DCADC2,w
  2180  02A3  00A2               	movwf	___awdiv@dividend
  2181  02A4  120A  158A  2367  120A  118A  	fcall	___awdiv
  2182  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2183  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2184  02AB  0821               	movf	?___awdiv+1,w
  2185  02AC  00AB               	movwf	___awmod@dividend+1
  2186  02AD  0820               	movf	?___awdiv,w
  2187  02AE  00AA               	movwf	___awmod@dividend
  2188  02AF  120A  158A  230C  120A  118A  	fcall	___awmod
  2189  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2190  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2191  02B6  0829               	movf	?___awmod+1,w
  2192  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2193  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2194  02B9  00B4               	movwf	(_ADC2B+1)^(0+128)
  2195  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2196  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2197  02BC  0828               	movf	?___awmod,w
  2198  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2199  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2200  02BF  00B3               	movwf	_ADC2B^(0+128)
  2201  02C0                     l3394:
  2202                           
  2203                           ;adc.c: 148:             itoa(ADCchar2B, ADC2B, 10);
  2204  02C0  0834               	movf	(_ADC2B+1)^(0+128),w
  2205  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2206  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2207  02C3  00B6               	movwf	itoa@val+1
  2208  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2209  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2210  02C6  0833               	movf	_ADC2B^(0+128),w
  2211  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2212  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2213  02C9  00B5               	movwf	itoa@val
  2214  02CA  300A               	movlw	10
  2215  02CB  00B7               	movwf	itoa@base
  2216  02CC  3000               	movlw	0
  2217  02CD  00B8               	movwf	itoa@base+1
  2218  02CE  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2219  02CF  120A  158A  219F  120A  118A  	fcall	_itoa
  2220  02D4                     l3396:
  2221                           
  2222                           ;adc.c: 149:             ADC2C = (DCADC2 / 100) % 10;
  2223  02D4  300A               	movlw	10
  2224  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2225  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2226  02D7  00A8               	movwf	___awmod@divisor
  2227  02D8  3000               	movlw	0
  2228  02D9  00A9               	movwf	___awmod@divisor+1
  2229  02DA  3064               	movlw	100
  2230  02DB  00A0               	movwf	___awdiv@divisor
  2231  02DC  3000               	movlw	0
  2232  02DD  00A1               	movwf	___awdiv@divisor+1
  2233  02DE  0865               	movf	_DCADC2+1,w
  2234  02DF  00A3               	movwf	___awdiv@dividend+1
  2235  02E0  0864               	movf	_DCADC2,w
  2236  02E1  00A2               	movwf	___awdiv@dividend
  2237  02E2  120A  158A  2367  120A  118A  	fcall	___awdiv
  2238  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2239  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2240  02E9  0821               	movf	?___awdiv+1,w
  2241  02EA  00AB               	movwf	___awmod@dividend+1
  2242  02EB  0820               	movf	?___awdiv,w
  2243  02EC  00AA               	movwf	___awmod@dividend
  2244  02ED  120A  158A  230C  120A  118A  	fcall	___awmod
  2245  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2246  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2247  02F4  0829               	movf	?___awmod+1,w
  2248  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2249  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2250  02F7  00B2               	movwf	(_ADC2C+1)^(0+128)
  2251  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2252  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2253  02FA  0828               	movf	?___awmod,w
  2254  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2255  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2256  02FD  00B1               	movwf	_ADC2C^(0+128)
  2257  02FE                     l3398:
  2258                           
  2259                           ;adc.c: 150:             itoa(ADCchar2C, ADC2C, 10);
  2260  02FE  0832               	movf	(_ADC2C+1)^(0+128),w
  2261  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0301  00B6               	movwf	itoa@val+1
  2264  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0304  0831               	movf	_ADC2C^(0+128),w
  2267  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0307  00B5               	movwf	itoa@val
  2270  0308  300A               	movlw	10
  2271  0309  00B7               	movwf	itoa@base
  2272  030A  3000               	movlw	0
  2273  030B  00B8               	movwf	itoa@base+1
  2274  030C  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2275  030D  120A  158A  219F  120A  118A  	fcall	_itoa
  2276  0312                     l3400:
  2277                           
  2278                           ;adc.c: 151:             strcat(ADCchar2B, ADCchar2A);
  2279  0312  30C9               	movlw	(low (_ADCchar2A| 0))& (0+255)
  2280  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0315  00E2               	movwf	??_ADC^(0+128)
  2283  0316  0862               	movf	??_ADC^(0+128),w
  2284  0317  00F4               	movwf	strcat@from
  2285  0318  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2286  0319  120A  158A  2269  120A  118A  	fcall	_strcat
  2287  031E                     l3402:
  2288                           
  2289                           ;adc.c: 152:             strcpy(PUNTO2A, ".");
  2290  031E  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2291  031F  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0320  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0321  00E2               	movwf	??_ADC^(0+128)
  2294  0322  0862               	movf	??_ADC^(0+128),w
  2295  0323  00F4               	movwf	strcpy@from
  2296  0324  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2297  0325  120A  158A  2132  120A  118A  	fcall	_strcpy
  2298  032A                     l3404:
  2299                           
  2300                           ;adc.c: 153:             strcat(PUNTO2A, ADCchar2B);
  2301  032A  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2302  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2303  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2304  032D  00E2               	movwf	??_ADC^(0+128)
  2305  032E  0862               	movf	??_ADC^(0+128),w
  2306  032F  00F4               	movwf	strcat@from
  2307  0330  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2308  0331  120A  158A  2269  120A  118A  	fcall	_strcat
  2309  0336                     l3406:
  2310                           
  2311                           ;adc.c: 154:             strcat(ADCchar2C, PUNTO2A);
  2312  0336  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2313  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2315  0339  00E2               	movwf	??_ADC^(0+128)
  2316  033A  0862               	movf	??_ADC^(0+128),w
  2317  033B  00F4               	movwf	strcat@from
  2318  033C  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2319  033D  120A  158A  2269  120A  118A  	fcall	_strcat
  2320  0342                     l3408:
  2321                           
  2322                           ;adc.c: 155:             sprintf(ContadorSend, "%.1i", Contador);
  2323  0342  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2324  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0345  00E2               	movwf	??_ADC^(0+128)
  2327  0346  0862               	movf	??_ADC^(0+128),w
  2328  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0349  00AC               	movwf	sprintf@f
  2331  034A  0879               	movf	_Contador+1,w
  2332  034B  00AE               	movwf	?_sprintf+2
  2333  034C  0878               	movf	_Contador,w
  2334  034D  00AD               	movwf	?_sprintf+1
  2335  034E  30B5               	movlw	(low (_ContadorSend| 0))& (0+255)
  2336  034F  120A  158A  24BE  120A  118A  	fcall	_sprintf
  2337  0354                     l3410:
  2338                           
  2339                           ;adc.c: 156:             lcd_cmd(0xC0);
  2340  0354  30C0               	movlw	192
  2341  0355  120A  158A  209E  120A  118A  	fcall	_lcd_cmd
  2342  035A                     l3412:
  2343                           
  2344                           ;adc.c: 158:             lcd_msg(ADCchar1C);
  2345  035A  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  2346  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2347  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2348  035D  00A1               	movwf	lcd_msg@c
  2349  035E  3000               	movlw	0
  2350  035F  00A2               	movwf	lcd_msg@c+1
  2351  0360  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  2352  0365                     l3414:
  2353                           
  2354                           ;adc.c: 160:             lcd_msg("V ");
  2355  0365  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2356  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0368  00A1               	movwf	lcd_msg@c
  2359  0369  3080               	movlw	128
  2360  036A  00A2               	movwf	lcd_msg@c+1
  2361  036B  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  2362  0370                     l3416:
  2363                           
  2364                           ;adc.c: 162:             lcd_msg(ADCchar2C);
  2365  0370  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2366  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0373  00A1               	movwf	lcd_msg@c
  2369  0374  3000               	movlw	0
  2370  0375  00A2               	movwf	lcd_msg@c+1
  2371  0376  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  2372  037B                     l3418:
  2373                           
  2374                           ;adc.c: 163:             lcd_msg("V ");
  2375  037B  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2376  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2377  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2378  037E  00A1               	movwf	lcd_msg@c
  2379  037F  3080               	movlw	128
  2380  0380  00A2               	movwf	lcd_msg@c+1
  2381  0381  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  2382  0386                     l3420:
  2383                           
  2384                           ;adc.c: 164:             lcd_msg(ContadorSend);
  2385  0386  30B5               	movlw	(low (_ContadorSend| 0))& (0+255)
  2386  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0389  00A1               	movwf	lcd_msg@c
  2389  038A  3000               	movlw	0
  2390  038B  00A2               	movwf	lcd_msg@c+1
  2391  038C  120A  158A  21C5  120A  118A  	fcall	_lcd_msg
  2392  0391  2844               	goto	l3340
  2393  0392  0008               	return
  2394  0393                     __end_of_ADC:
  2395                           
  2396                           	psect	text5
  2397  0932                     __ptext5:	
  2398 ;; *************** function _strcpy *****************
  2399 ;; Defined at:
  2400 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  to              1    wreg     PTR unsigned char 
  2403 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2404 ;;  from            1    4[COMMON] PTR const unsigned char 
  2405 ;;		 -> STR_3(2), STR_2(2), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  to              1    1[BANK0 ] PTR unsigned char 
  2408 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2409 ;;  cp              1    0[BANK0 ] PTR unsigned char 
  2410 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      PTR unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         1       0       0       0       0
  2421 ;;      Locals:         0       2       0       0       0
  2422 ;;      Temps:          1       0       0       0       0
  2423 ;;      Totals:         2       2       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_ADC
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _strcpy
  2436  0932                     _strcpy:
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2440                           ;strcpy@to stored from wreg
  2441  0932  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0933  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0934  00A1               	movwf	strcpy@to
  2444  0935                     l2964:
  2445  0935  0821               	movf	strcpy@to,w
  2446  0936  00F5               	movwf	??_strcpy
  2447  0937  0875               	movf	??_strcpy,w
  2448  0938  00A0               	movwf	strcpy@cp
  2449  0939  2942               	goto	l2968
  2450  093A                     l2966:
  2451  093A  3001               	movlw	1
  2452  093B  00F5               	movwf	??_strcpy
  2453  093C  0875               	movf	??_strcpy,w
  2454  093D  07A0               	addwf	strcpy@cp,f
  2455  093E  3001               	movlw	1
  2456  093F  00F5               	movwf	??_strcpy
  2457  0940  0875               	movf	??_strcpy,w
  2458  0941  07F4               	addwf	strcpy@from,f
  2459  0942                     l2968:
  2460  0942  0874               	movf	strcpy@from,w
  2461  0943  0084               	movwf	4
  2462  0944  120A  158A  200A  120A  158A  	fcall	stringdir
  2463  0949  00F5               	movwf	??_strcpy
  2464  094A  0820               	movf	strcpy@cp,w
  2465  094B  0084               	movwf	4
  2466  094C  0875               	movf	??_strcpy,w
  2467  094D  1383               	bcf	3,7	;select IRP bank0
  2468  094E  0080               	movwf	0
  2469  094F  0800               	movf	0,w
  2470  0950  1D03               	btfss	3,2
  2471  0951  2953               	goto	u3341
  2472  0952  2954               	goto	u3340
  2473  0953                     u3341:
  2474  0953  293A               	goto	l2966
  2475  0954                     u3340:
  2476  0954                     l844:
  2477  0954  0008               	return
  2478  0955                     __end_of_strcpy:
  2479                           
  2480                           	psect	text6
  2481  0A69                     __ptext6:	
  2482 ;; *************** function _strcat *****************
  2483 ;; Defined at:
  2484 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  to              1    wreg     PTR unsigned char 
  2487 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2488 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2489 ;;  from            1    4[COMMON] PTR const unsigned char 
  2490 ;;		 -> PUNTO2A(5), ADCchar2B(5), ADCchar2A(5), PUNTO1A(5), 
  2491 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  to              1    0[BANK0 ] PTR unsigned char 
  2494 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2495 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2496 ;;  cp              1    1[BANK0 ] PTR unsigned char 
  2497 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2498 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      PTR unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         1       0       0       0       0
  2509 ;;      Locals:         0       2       0       0       0
  2510 ;;      Temps:          1       0       0       0       0
  2511 ;;      Totals:         2       2       0       0       0
  2512 ;;Total ram usage:        4 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    2
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_ADC
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _strcat
  2524  0A69                     _strcat:
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2528                           ;strcat@to stored from wreg
  2529  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0A6B  00A0               	movwf	strcat@to
  2532  0A6C                     l2954:
  2533  0A6C  0820               	movf	strcat@to,w
  2534  0A6D  00F5               	movwf	??_strcat
  2535  0A6E  0875               	movf	??_strcat,w
  2536  0A6F  00A1               	movwf	strcat@cp
  2537  0A70  2A75               	goto	l2958
  2538  0A71                     l2956:
  2539  0A71  3001               	movlw	1
  2540  0A72  00F5               	movwf	??_strcat
  2541  0A73  0875               	movf	??_strcat,w
  2542  0A74  07A1               	addwf	strcat@cp,f
  2543  0A75                     l2958:
  2544  0A75  0821               	movf	strcat@cp,w
  2545  0A76  0084               	movwf	4
  2546  0A77  1383               	bcf	3,7	;select IRP bank0
  2547  0A78  0800               	movf	0,w
  2548  0A79  1D03               	btfss	3,2
  2549  0A7A  2A7C               	goto	u3321
  2550  0A7B  2A7D               	goto	u3320
  2551  0A7C                     u3321:
  2552  0A7C  2A71               	goto	l2956
  2553  0A7D                     u3320:
  2554  0A7D  2A86               	goto	l2962
  2555  0A7E                     l2960:
  2556  0A7E  3001               	movlw	1
  2557  0A7F  00F5               	movwf	??_strcat
  2558  0A80  0875               	movf	??_strcat,w
  2559  0A81  07A1               	addwf	strcat@cp,f
  2560  0A82  3001               	movlw	1
  2561  0A83  00F5               	movwf	??_strcat
  2562  0A84  0875               	movf	??_strcat,w
  2563  0A85  07F4               	addwf	strcat@from,f
  2564  0A86                     l2962:
  2565  0A86  0874               	movf	strcat@from,w
  2566  0A87  0084               	movwf	4
  2567  0A88  0800               	movf	0,w
  2568  0A89  00F5               	movwf	??_strcat
  2569  0A8A  0821               	movf	strcat@cp,w
  2570  0A8B  0084               	movwf	4
  2571  0A8C  0875               	movf	??_strcat,w
  2572  0A8D  0080               	movwf	0
  2573  0A8E  0800               	movf	0,w
  2574  0A8F  1D03               	btfss	3,2
  2575  0A90  2A92               	goto	u3331
  2576  0A91  2A93               	goto	u3330
  2577  0A92                     u3331:
  2578  0A92  2A7E               	goto	l2960
  2579  0A93                     u3330:
  2580  0A93                     l838:
  2581  0A93  0008               	return
  2582  0A94                     __end_of_strcat:
  2583                           
  2584                           	psect	text7
  2585  0CBE                     __ptext7:	
  2586 ;; *************** function _sprintf *****************
  2587 ;; Defined at:
  2588 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  sp              1    wreg     PTR unsigned char 
  2591 ;;		 -> ContadorSend(5), 
  2592 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2593 ;;		 -> STR_4(5), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  2596 ;;		 -> ContadorSend(5), 
  2597 ;;  tmpval          4    0        struct .
  2598 ;;  val             2   21[BANK0 ] unsigned int 
  2599 ;;  cp              2    0        PTR const unsigned char 
  2600 ;;  len             2    0        unsigned int 
  2601 ;;  c               1   24[BANK0 ] unsigned char 
  2602 ;;  prec            1   23[BANK0 ] char 
  2603 ;;  flag            1   19[BANK0 ] unsigned char 
  2604 ;;  ap              1   18[BANK0 ] PTR void [1]
  2605 ;;		 -> ?_sprintf(2), 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  2   12[BANK0 ] int 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       3       0       0       0
  2616 ;;      Locals:         0       7       0       0       0
  2617 ;;      Temps:          0       3       0       0       0
  2618 ;;      Totals:         0      13       0       0       0
  2619 ;;Total ram usage:       13 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    3
  2622 ;; This function calls:
  2623 ;;		___bmul
  2624 ;;		___lwdiv
  2625 ;;		___lwmod
  2626 ;;		_isdigit
  2627 ;; This function is called by:
  2628 ;;		_ADC
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _sprintf
  2634  0CBE                     _sprintf:
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2638                           ;sprintf@sp stored from wreg
  2639  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0CC0  00B4               	movwf	sprintf@sp
  2642  0CC1                     l2970:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2645  0CC1  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2646  0CC2  00AF               	movwf	??_sprintf
  2647  0CC3  082F               	movf	??_sprintf,w
  2648  0CC4  00B2               	movwf	sprintf@ap
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2651  0CC5  2E0C               	goto	l3048
  2652  0CC6                     l2972:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2655  0CC6  3025               	movlw	37
  2656  0CC7  0638               	xorwf	sprintf@c,w
  2657  0CC8  1903               	btfsc	3,2
  2658  0CC9  2CCB               	goto	u3351
  2659  0CCA  2CCC               	goto	u3350
  2660  0CCB                     u3351:
  2661  0CCB  2CD8               	goto	l2978
  2662  0CCC                     u3350:
  2663  0CCC                     l2974:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2666  0CCC  0838               	movf	sprintf@c,w
  2667  0CCD  00AF               	movwf	??_sprintf
  2668  0CCE  0834               	movf	sprintf@sp,w
  2669  0CCF  0084               	movwf	4
  2670  0CD0  082F               	movf	??_sprintf,w
  2671  0CD1  1383               	bcf	3,7	;select IRP bank0
  2672  0CD2  0080               	movwf	0
  2673  0CD3                     l2976:
  2674  0CD3  3001               	movlw	1
  2675  0CD4  00AF               	movwf	??_sprintf
  2676  0CD5  082F               	movf	??_sprintf,w
  2677  0CD6  07B4               	addwf	sprintf@sp,f
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2680  0CD7  2E0C               	goto	l3048
  2681  0CD8                     l2978:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2684  0CD8  01B3               	clrf	sprintf@flag
  2685  0CD9                     l2980:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2688  0CD9  082C               	movf	sprintf@f,w
  2689  0CDA  0084               	movwf	4
  2690  0CDB  120A  158A  200A  120A  158A  	fcall	stringdir
  2691  0CE0  3A2E               	xorlw	46
  2692  0CE1  1D03               	skipz
  2693  0CE2  2CE4               	goto	u3361
  2694  0CE3  2CE5               	goto	u3360
  2695  0CE4                     u3361:
  2696  0CE4  2D1C               	goto	l2994
  2697  0CE5                     u3360:
  2698  0CE5                     l2982:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2701  0CE5  3001               	movlw	1
  2702  0CE6  00AF               	movwf	??_sprintf
  2703  0CE7  082F               	movf	??_sprintf,w
  2704  0CE8  07AC               	addwf	sprintf@f,f
  2705  0CE9                     l2984:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2708  0CE9  01B7               	clrf	sprintf@prec
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2711  0CEA  2D0B               	goto	l2992
  2712  0CEB                     l2986:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2715  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0CED  0837               	movf	sprintf@prec,w
  2718  0CEE  00AF               	movwf	??_sprintf
  2719  0CEF  082F               	movf	??_sprintf,w
  2720  0CF0  00F4               	movwf	___bmul@multiplicand
  2721  0CF1  300A               	movlw	10
  2722  0CF2  120A  158A  20C6  120A  158A  	fcall	___bmul
  2723  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0CF9  00B0               	movwf	??_sprintf+1
  2726  0CFA  0830               	movf	??_sprintf+1,w
  2727  0CFB  00B7               	movwf	sprintf@prec
  2728  0CFC                     l2988:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2731  0CFC  082C               	movf	sprintf@f,w
  2732  0CFD  0084               	movwf	4
  2733  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  2734  0D03  3ED0               	addlw	-48
  2735  0D04  00AF               	movwf	??_sprintf
  2736  0D05  082F               	movf	??_sprintf,w
  2737  0D06  07B7               	addwf	sprintf@prec,f
  2738  0D07                     l2990:
  2739  0D07  3001               	movlw	1
  2740  0D08  00AF               	movwf	??_sprintf
  2741  0D09  082F               	movf	??_sprintf,w
  2742  0D0A  07AC               	addwf	sprintf@f,f
  2743  0D0B                     l2992:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2746  0D0B  082C               	movf	sprintf@f,w
  2747  0D0C  0084               	movwf	4
  2748  0D0D  120A  158A  200A  120A  158A  	fcall	stringdir
  2749  0D12  120A  158A  208C  120A  158A  	fcall	_isdigit
  2750  0D17  1803               	btfsc	3,0
  2751  0D18  2D1A               	goto	u3371
  2752  0D19  2D1B               	goto	u3370
  2753  0D1A                     u3371:
  2754  0D1A  2CEB               	goto	l2986
  2755  0D1B                     u3370:
  2756  0D1B  2D1D               	goto	l2998
  2757  0D1C                     l2994:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2760  0D1C  01B7               	clrf	sprintf@prec
  2761  0D1D                     l2998:
  2762  0D1D  3001               	movlw	1
  2763  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0D20  07AC               	addwf	sprintf@f,f
  2766  0D21  30FF               	movlw	-1
  2767  0D22  072C               	addwf	sprintf@f,w
  2768  0D23  0084               	movwf	4
  2769  0D24  120A  158A  200A  120A  158A  	fcall	stringdir
  2770  0D29  00B8               	movwf	sprintf@c
  2771  0D2A  00AF               	movwf	??_sprintf
  2772  0D2B  01B0               	clrf	??_sprintf+1
  2773                           
  2774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2775                           ; Switch size 1, requested type "simple"
  2776                           ; Number of cases is 1, Range of values is 0 to 0
  2777                           ; switch strategies available:
  2778                           ; Name         Instructions Cycles
  2779                           ; simple_byte            4     3 (average)
  2780                           ; direct_byte           11     8 (fixed)
  2781                           ; jumptable            260     6 (fixed)
  2782                           ;	Chosen strategy is simple_byte
  2783  0D2C  0830               	movf	??_sprintf+1,w
  2784  0D2D  3A00               	xorlw	0	; case 0
  2785  0D2E  1903               	skipnz
  2786  0D2F  2D31               	goto	l3496
  2787  0D30  2E0C               	goto	l3048
  2788  0D31                     l3496:
  2789                           
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 3, Range of values is 0 to 105
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte           10     6 (average)
  2795                           ; jumptable            260     6 (fixed)
  2796                           ;	Chosen strategy is simple_byte
  2797  0D31  082F               	movf	??_sprintf,w
  2798  0D32  3A00               	xorlw	0	; case 0
  2799  0D33  1903               	skipnz
  2800  0D34  2E1E               	goto	l3050
  2801  0D35  3A64               	xorlw	100	; case 100
  2802  0D36  1903               	skipnz
  2803  0D37  2D3C               	goto	l3000
  2804  0D38  3A0D               	xorlw	13	; case 105
  2805  0D39  1903               	skipnz
  2806  0D3A  2D3C               	goto	l3000
  2807  0D3B  2E0C               	goto	l3048
  2808  0D3C                     l3000:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2811  0D3C  0832               	movf	sprintf@ap,w
  2812  0D3D  0084               	movwf	4
  2813  0D3E  1383               	bcf	3,7	;select IRP bank0
  2814  0D3F  0800               	movf	0,w
  2815  0D40  00B5               	movwf	sprintf@val
  2816  0D41  0A84               	incf	4,f
  2817  0D42  0800               	movf	0,w
  2818  0D43  00B6               	movwf	sprintf@val+1
  2819  0D44                     l3002:
  2820  0D44  3002               	movlw	2
  2821  0D45  00AF               	movwf	??_sprintf
  2822  0D46  082F               	movf	??_sprintf,w
  2823  0D47  07B2               	addwf	sprintf@ap,f
  2824  0D48                     l3004:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2827  0D48  1FB6               	btfss	sprintf@val+1,7
  2828  0D49  2D4B               	goto	u3381
  2829  0D4A  2D4C               	goto	u3380
  2830  0D4B                     u3381:
  2831  0D4B  2D55               	goto	l3010
  2832  0D4C                     u3380:
  2833  0D4C                     l3006:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2836  0D4C  3003               	movlw	3
  2837  0D4D  00AF               	movwf	??_sprintf
  2838  0D4E  082F               	movf	??_sprintf,w
  2839  0D4F  04B3               	iorwf	sprintf@flag,f
  2840  0D50                     l3008:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2843  0D50  09B5               	comf	sprintf@val,f
  2844  0D51  09B6               	comf	sprintf@val+1,f
  2845  0D52  0AB5               	incf	sprintf@val,f
  2846  0D53  1903               	skipnz
  2847  0D54  0AB6               	incf	sprintf@val+1,f
  2848  0D55                     l3010:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2851  0D55  0837               	movf	sprintf@prec,w
  2852  0D56  1D03               	btfss	3,2
  2853  0D57  2D59               	goto	u3391
  2854  0D58  2D5A               	goto	u3390
  2855  0D59                     u3391:
  2856  0D59  2D64               	goto	l3016
  2857  0D5A                     u3390:
  2858  0D5A                     l3012:
  2859  0D5A  0835               	movf	sprintf@val,w
  2860  0D5B  0436               	iorwf	sprintf@val+1,w
  2861  0D5C  1D03               	btfss	3,2
  2862  0D5D  2D5F               	goto	u3401
  2863  0D5E  2D60               	goto	u3400
  2864  0D5F                     u3401:
  2865  0D5F  2D64               	goto	l3016
  2866  0D60                     u3400:
  2867  0D60                     l3014:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2870  0D60  3001               	movlw	1
  2871  0D61  00AF               	movwf	??_sprintf
  2872  0D62  082F               	movf	??_sprintf,w
  2873  0D63  07B7               	addwf	sprintf@prec,f
  2874  0D64                     l3016:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2877  0D64  01B8               	clrf	sprintf@c
  2878  0D65  0AB8               	incf	sprintf@c,f
  2879  0D66                     l3020:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2882  0D66  0838               	movf	sprintf@c,w
  2883  0D67  00AF               	movwf	??_sprintf
  2884  0D68  072F               	addwf	??_sprintf,w
  2885  0D69  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2886  0D6A  0084               	movwf	4
  2887  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  2888  0D70  00B0               	movwf	??_sprintf+1
  2889  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  2890  0D76  00B1               	movwf	??_sprintf+2
  2891  0D77  0831               	movf	??_sprintf+2,w
  2892  0D78  0236               	subwf	sprintf@val+1,w
  2893  0D79  1D03               	skipz
  2894  0D7A  2D7D               	goto	u3415
  2895  0D7B  0830               	movf	??_sprintf+1,w
  2896  0D7C  0235               	subwf	sprintf@val,w
  2897  0D7D                     u3415:
  2898  0D7D  1803               	skipnc
  2899  0D7E  2D80               	goto	u3411
  2900  0D7F  2D81               	goto	u3410
  2901  0D80                     u3411:
  2902  0D80  2D82               	goto	l3024
  2903  0D81                     u3410:
  2904  0D81  2D8C               	goto	l3026
  2905  0D82                     l3024:
  2906  0D82  3001               	movlw	1
  2907  0D83  00AF               	movwf	??_sprintf
  2908  0D84  082F               	movf	??_sprintf,w
  2909  0D85  07B8               	addwf	sprintf@c,f
  2910  0D86  3005               	movlw	5
  2911  0D87  0638               	xorwf	sprintf@c,w
  2912  0D88  1D03               	btfss	3,2
  2913  0D89  2D8B               	goto	u3421
  2914  0D8A  2D8C               	goto	u3420
  2915  0D8B                     u3421:
  2916  0D8B  2D66               	goto	l3020
  2917  0D8C                     u3420:
  2918  0D8C                     l3026:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2921  0D8C  0837               	movf	sprintf@prec,w
  2922  0D8D  00AF               	movwf	??_sprintf
  2923  0D8E  01B0               	clrf	??_sprintf+1
  2924  0D8F  1BAF               	btfsc	??_sprintf,7
  2925  0D90  03B0               	decf	??_sprintf+1,f
  2926  0D91  0830               	movf	??_sprintf+1,w
  2927  0D92  3A80               	xorlw	128
  2928  0D93  3C80               	sublw	128
  2929  0D94  1D03               	skipz
  2930  0D95  2D98               	goto	u3435
  2931  0D96  082F               	movf	??_sprintf,w
  2932  0D97  0238               	subwf	sprintf@c,w
  2933  0D98                     u3435:
  2934  0D98  1803               	skipnc
  2935  0D99  2D9B               	goto	u3431
  2936  0D9A  2D9C               	goto	u3430
  2937  0D9B                     u3431:
  2938  0D9B  2D9D               	goto	l3030
  2939  0D9C                     u3430:
  2940  0D9C                     l3028:
  2941  0D9C  2DB7               	goto	l3034
  2942  0D9D                     l3030:
  2943  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0D9F  0837               	movf	sprintf@prec,w
  2946  0DA0  00AF               	movwf	??_sprintf
  2947  0DA1  01B0               	clrf	??_sprintf+1
  2948  0DA2  1BAF               	btfsc	??_sprintf,7
  2949  0DA3  03B0               	decf	??_sprintf+1,f
  2950  0DA4  0830               	movf	??_sprintf+1,w
  2951  0DA5  3A80               	xorlw	128
  2952  0DA6  00B1               	movwf	??_sprintf+2
  2953  0DA7  3080               	movlw	128
  2954  0DA8  0231               	subwf	??_sprintf+2,w
  2955  0DA9  1D03               	skipz
  2956  0DAA  2DAD               	goto	u3445
  2957  0DAB  0838               	movf	sprintf@c,w
  2958  0DAC  022F               	subwf	??_sprintf,w
  2959  0DAD                     u3445:
  2960  0DAD  1803               	skipnc
  2961  0DAE  2DB0               	goto	u3441
  2962  0DAF  2DB1               	goto	u3440
  2963  0DB0                     u3441:
  2964  0DB0  2DB7               	goto	l3034
  2965  0DB1                     u3440:
  2966  0DB1                     l3032:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2969  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0DB3  0838               	movf	sprintf@c,w
  2972  0DB4  00AF               	movwf	??_sprintf
  2973  0DB5  082F               	movf	??_sprintf,w
  2974  0DB6  00B7               	movwf	sprintf@prec
  2975  0DB7                     l3034:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2978  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0DB9  0833               	movf	sprintf@flag,w
  2981  0DBA  3903               	andlw	3
  2982  0DBB  1903               	btfsc	3,2
  2983  0DBC  2DBE               	goto	u3451
  2984  0DBD  2DBF               	goto	u3450
  2985  0DBE                     u3451:
  2986  0DBE  2E03               	goto	l3046
  2987  0DBF                     u3450:
  2988  0DBF                     l3036:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2991  0DBF  302D               	movlw	45
  2992  0DC0  00AF               	movwf	??_sprintf
  2993  0DC1  0834               	movf	sprintf@sp,w
  2994  0DC2  0084               	movwf	4
  2995  0DC3  082F               	movf	??_sprintf,w
  2996  0DC4  1383               	bcf	3,7	;select IRP bank0
  2997  0DC5  0080               	movwf	0
  2998  0DC6                     l3038:
  2999  0DC6  3001               	movlw	1
  3000  0DC7  00AF               	movwf	??_sprintf
  3001  0DC8  082F               	movf	??_sprintf,w
  3002  0DC9  07B4               	addwf	sprintf@sp,f
  3003  0DCA  2E03               	goto	l3046
  3004  0DCB                     l3040:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3007  0DCB  300A               	movlw	10
  3008  0DCC  00A7               	movwf	___lwmod@divisor
  3009  0DCD  3000               	movlw	0
  3010  0DCE  00A8               	movwf	___lwmod@divisor+1
  3011  0DCF  0837               	movf	sprintf@prec,w
  3012  0DD0  00AF               	movwf	??_sprintf
  3013  0DD1  072F               	addwf	??_sprintf,w
  3014  0DD2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3015  0DD3  0084               	movwf	4
  3016  0DD4  120A  158A  200A  120A  158A  	fcall	stringdir
  3017  0DD9  00A0               	movwf	___lwdiv@divisor
  3018  0DDA  120A  158A  200A  120A  158A  	fcall	stringdir
  3019  0DDF  00A1               	movwf	___lwdiv@divisor+1
  3020  0DE0  0836               	movf	sprintf@val+1,w
  3021  0DE1  00A3               	movwf	___lwdiv@dividend+1
  3022  0DE2  0835               	movf	sprintf@val,w
  3023  0DE3  00A2               	movwf	___lwdiv@dividend
  3024  0DE4  120A  118A  27B0  120A  158A  	fcall	___lwdiv
  3025  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0DEB  0821               	movf	?___lwdiv+1,w
  3028  0DEC  00AA               	movwf	___lwmod@dividend+1
  3029  0DED  0820               	movf	?___lwdiv,w
  3030  0DEE  00A9               	movwf	___lwmod@dividend
  3031  0DEF  120A  158A  2294  120A  158A  	fcall	___lwmod
  3032  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0DF6  0827               	movf	?___lwmod,w
  3035  0DF7  3E30               	addlw	48
  3036  0DF8  00B0               	movwf	??_sprintf+1
  3037  0DF9  0830               	movf	??_sprintf+1,w
  3038  0DFA  00B8               	movwf	sprintf@c
  3039  0DFB                     l3042:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3042  0DFB  0838               	movf	sprintf@c,w
  3043  0DFC  00AF               	movwf	??_sprintf
  3044  0DFD  0834               	movf	sprintf@sp,w
  3045  0DFE  0084               	movwf	4
  3046  0DFF  082F               	movf	??_sprintf,w
  3047  0E00  1383               	bcf	3,7	;select IRP bank0
  3048  0E01  0080               	movwf	0
  3049  0E02  2DC6               	goto	l3038
  3050  0E03                     l3046:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3053  0E03  30FF               	movlw	255
  3054  0E04  00AF               	movwf	??_sprintf
  3055  0E05  082F               	movf	??_sprintf,w
  3056  0E06  07B7               	addwf	sprintf@prec,f
  3057  0E07  0A37               	incf	sprintf@prec,w
  3058  0E08  1D03               	btfss	3,2
  3059  0E09  2E0B               	goto	u3461
  3060  0E0A  2E0C               	goto	u3460
  3061  0E0B                     u3461:
  3062  0E0B  2DCB               	goto	l3040
  3063  0E0C                     u3460:
  3064  0E0C                     l3048:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3067  0E0C  3001               	movlw	1
  3068  0E0D  07AC               	addwf	sprintf@f,f
  3069  0E0E  30FF               	movlw	-1
  3070  0E0F  072C               	addwf	sprintf@f,w
  3071  0E10  0084               	movwf	4
  3072  0E11  120A  158A  200A  120A  158A  	fcall	stringdir
  3073  0E16  00AF               	movwf	??_sprintf
  3074  0E17  082F               	movf	??_sprintf,w
  3075  0E18  00B8               	movwf	sprintf@c
  3076  0E19  0838               	movf	sprintf@c,w
  3077  0E1A  1D03               	btfss	3,2
  3078  0E1B  2E1D               	goto	u3471
  3079  0E1C  2E1E               	goto	u3470
  3080  0E1D                     u3471:
  3081  0E1D  2CC6               	goto	l2972
  3082  0E1E                     u3470:
  3083  0E1E                     l3050:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3086  0E1E  0834               	movf	sprintf@sp,w
  3087  0E1F  0084               	movwf	4
  3088  0E20  1383               	bcf	3,7	;select IRP bank0
  3089  0E21  0180               	clrf	0
  3090  0E22                     l358:
  3091  0E22  0008               	return
  3092  0E23                     __end_of_sprintf:
  3093                           
  3094                           	psect	text8
  3095  088C                     __ptext8:	
  3096 ;; *************** function _isdigit *****************
  3097 ;; Defined at:
  3098 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  c               1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  c               1    5[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;		None               void
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         2       0       0       0       0
  3116 ;;Total ram usage:        2 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    2
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_sprintf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _isdigit
  3128  088C                     _isdigit:
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3132                           ;isdigit@c stored from wreg
  3133  088C  00F5               	movwf	isdigit@c
  3134  088D                     l1962:
  3135  088D  01F4               	clrf	_isdigit$1003
  3136  088E                     l1964:
  3137  088E  303A               	movlw	58
  3138  088F  0275               	subwf	isdigit@c,w
  3139  0890  1803               	skipnc
  3140  0891  2893               	goto	u1751
  3141  0892  2894               	goto	u1750
  3142  0893                     u1751:
  3143  0893  289C               	goto	l1970
  3144  0894                     u1750:
  3145  0894                     l1966:
  3146  0894  3030               	movlw	48
  3147  0895  0275               	subwf	isdigit@c,w
  3148  0896  1C03               	skipc
  3149  0897  2899               	goto	u1761
  3150  0898  289A               	goto	u1760
  3151  0899                     u1761:
  3152  0899  289C               	goto	l1970
  3153  089A                     u1760:
  3154  089A                     l1968:
  3155  089A  01F4               	clrf	_isdigit$1003
  3156  089B  0AF4               	incf	_isdigit$1003,f
  3157  089C                     l1970:
  3158  089C  0C74               	rrf	_isdigit$1003,w
  3159  089D                     l815:
  3160  089D  0008               	return
  3161  089E                     __end_of_isdigit:
  3162                           
  3163                           	psect	text9
  3164  08C6                     __ptext9:	
  3165 ;; *************** function ___bmul *****************
  3166 ;; Defined at:
  3167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  multiplier      1    wreg     unsigned char 
  3170 ;;  multiplicand    1    4[COMMON] unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3173 ;;  product         1    0[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         1       0       0       0       0
  3184 ;;      Locals:         0       2       0       0       0
  3185 ;;      Temps:          1       0       0       0       0
  3186 ;;      Totals:         2       2       0       0       0
  3187 ;;Total ram usage:        4 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_sprintf
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function ___bmul
  3199  08C6                     ___bmul:
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3203                           ;___bmul@multiplier stored from wreg
  3204  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  3205  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  3206  08C8  00A1               	movwf	___bmul@multiplier
  3207  08C9                     l2864:
  3208  08C9  01A0               	clrf	___bmul@product
  3209  08CA                     l2866:
  3210  08CA  1C21               	btfss	___bmul@multiplier,0
  3211  08CB  28CD               	goto	u3221
  3212  08CC  28CE               	goto	u3220
  3213  08CD                     u3221:
  3214  08CD  28D2               	goto	l2870
  3215  08CE                     u3220:
  3216  08CE                     l2868:
  3217  08CE  0874               	movf	___bmul@multiplicand,w
  3218  08CF  00F5               	movwf	??___bmul
  3219  08D0  0875               	movf	??___bmul,w
  3220  08D1  07A0               	addwf	___bmul@product,f
  3221  08D2                     l2870:
  3222  08D2  1003               	clrc
  3223  08D3  0DF4               	rlf	___bmul@multiplicand,f
  3224  08D4                     l2872:
  3225  08D4  1003               	clrc
  3226  08D5  0CA1               	rrf	___bmul@multiplier,f
  3227  08D6  0821               	movf	___bmul@multiplier,w
  3228  08D7  1D03               	btfss	3,2
  3229  08D8  28DA               	goto	u3231
  3230  08D9  28DB               	goto	u3230
  3231  08DA                     u3231:
  3232  08DA  28CA               	goto	l2866
  3233  08DB                     u3230:
  3234  08DB                     l2874:
  3235  08DB  0820               	movf	___bmul@product,w
  3236  08DC                     l388:
  3237  08DC  0008               	return
  3238  08DD                     __end_of___bmul:
  3239                           
  3240                           	psect	text10
  3241  09C5                     __ptext10:	
  3242 ;; *************** function _lcd_msg *****************
  3243 ;; Defined at:
  3244 ;;		line 53 in file "LCD.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  c               2    1[BANK0 ] PTR unsigned char 
  3247 ;;		 -> STR_6(3), STR_5(3), ContadorSend(5), ADCchar2C(5), 
  3248 ;;		 -> ADCchar1C(5), STR_1(18), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       2       0       0       0
  3261 ;;      Locals:         0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0
  3263 ;;      Totals:         0       2       0       0       0
  3264 ;;Total ram usage:        2 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    4
  3267 ;; This function calls:
  3268 ;;		_lcd_dwr
  3269 ;; This function is called by:
  3270 ;;		_ADC
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function _lcd_msg
  3276  09C5                     _lcd_msg:
  3277  09C5                     l2932:	
  3278                           ;incstack = 0
  3279                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3280                           
  3281                           
  3282                           ;LCD.c: 54:     while(*c != 0)
  3283  09C5  29DC               	goto	l2938
  3284  09C6                     l2934:
  3285                           
  3286                           ;LCD.c: 55:         lcd_dwr(*c++);
  3287  09C6  0822               	movf	lcd_msg@c+1,w
  3288  09C7  00FF               	movwf	btemp+1
  3289  09C8  0821               	movf	lcd_msg@c,w
  3290  09C9  0084               	movwf	4
  3291  09CA  120A  158A  2000  120A  158A  	fcall	stringtab
  3292  09CF  120A  158A  20B2  120A  158A  	fcall	_lcd_dwr
  3293  09D4                     l2936:
  3294  09D4  3001               	movlw	1
  3295  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  3296  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  3297  09D7  07A1               	addwf	lcd_msg@c,f
  3298  09D8  1803               	skipnc
  3299  09D9  0AA2               	incf	lcd_msg@c+1,f
  3300  09DA  3000               	movlw	0
  3301  09DB  07A2               	addwf	lcd_msg@c+1,f
  3302  09DC                     l2938:
  3303                           
  3304                           ;LCD.c: 54:     while(*c != 0)
  3305  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  3306  09DD  1303               	bcf	3,6	;RP1=0, select bank0
  3307  09DE  0822               	movf	lcd_msg@c+1,w
  3308  09DF  00FF               	movwf	btemp+1
  3309  09E0  0821               	movf	lcd_msg@c,w
  3310  09E1  0084               	movwf	4
  3311  09E2  120A  158A  2000  120A  158A  	fcall	stringtab
  3312  09E7  3A00               	xorlw	0
  3313  09E8  1D03               	skipz
  3314  09E9  29EB               	goto	u3301
  3315  09EA  29EC               	goto	u3300
  3316  09EB                     u3301:
  3317  09EB  29C6               	goto	l2934
  3318  09EC                     u3300:
  3319  09EC                     l34:
  3320  09EC  0008               	return
  3321  09ED                     __end_of_lcd_msg:
  3322                           
  3323                           	psect	text11
  3324  08B2                     __ptext11:	
  3325 ;; *************** function _lcd_dwr *****************
  3326 ;; Defined at:
  3327 ;;		line 45 in file "LCD.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  x               1    wreg     unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  x               1    0[BANK0 ] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         0       1       0       0       0
  3343 ;;      Temps:          0       0       0       0       0
  3344 ;;      Totals:         0       1       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    3
  3348 ;; This function calls:
  3349 ;;		_lcd_lat
  3350 ;;		_lcd_ready
  3351 ;; This function is called by:
  3352 ;;		_lcd_msg
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _lcd_dwr
  3358  08B2                     _lcd_dwr:
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  3362                           ;lcd_dwr@x stored from wreg
  3363  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  3364  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  3365  08B4  00A0               	movwf	lcd_dwr@x
  3366  08B5                     l2854:
  3367                           
  3368                           ;LCD.c: 46:     lcd_ready();
  3369  08B5  120A  158A  2216  120A  158A  	fcall	_lcd_ready
  3370  08BA                     l2856:
  3371                           
  3372                           ;LCD.c: 47:     PORTD = x;
  3373  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  3374  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  3375  08BC  0820               	movf	lcd_dwr@x,w
  3376  08BD  0088               	movwf	8	;volatile
  3377  08BE                     l2858:
  3378                           
  3379                           ;LCD.c: 48:     RE0 = 1;
  3380  08BE  1409               	bsf	9,0	;volatile
  3381  08BF                     l2860:
  3382                           
  3383                           ;LCD.c: 49:     RE1 = 0;
  3384  08BF  1089               	bcf	9,1	;volatile
  3385  08C0                     l2862:
  3386                           
  3387                           ;LCD.c: 50:     lcd_lat();
  3388  08C0  120A  158A  207D  120A  158A  	fcall	_lcd_lat
  3389  08C5                     l28:
  3390  08C5  0008               	return
  3391  08C6                     __end_of_lcd_dwr:
  3392                           
  3393                           	psect	text12
  3394  089E                     __ptext12:	
  3395 ;; *************** function _lcd_cmd *****************
  3396 ;; Defined at:
  3397 ;;		line 15 in file "LCD.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  x               1    wreg     unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  x               1    0[BANK0 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         0       1       0       0       0
  3413 ;;      Temps:          0       0       0       0       0
  3414 ;;      Totals:         0       1       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    3
  3418 ;; This function calls:
  3419 ;;		_lcd_lat
  3420 ;;		_lcd_ready
  3421 ;; This function is called by:
  3422 ;;		_inicializacion
  3423 ;;		_ADC
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _lcd_cmd
  3429  089E                     _lcd_cmd:
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3433                           ;lcd_cmd@x stored from wreg
  3434  089E  1283               	bcf	3,5	;RP0=0, select bank0
  3435  089F  1303               	bcf	3,6	;RP1=0, select bank0
  3436  08A0  00A0               	movwf	lcd_cmd@x
  3437  08A1                     l2922:
  3438                           
  3439                           ;LCD.c: 16:     lcd_ready();
  3440  08A1  120A  158A  2216  120A  158A  	fcall	_lcd_ready
  3441  08A6                     l2924:
  3442                           
  3443                           ;LCD.c: 17:     PORTD = x;
  3444  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  3445  08A7  1303               	bcf	3,6	;RP1=0, select bank0
  3446  08A8  0820               	movf	lcd_cmd@x,w
  3447  08A9  0088               	movwf	8	;volatile
  3448  08AA                     l2926:
  3449                           
  3450                           ;LCD.c: 18:     RE0 = 0;
  3451  08AA  1009               	bcf	9,0	;volatile
  3452  08AB                     l2928:
  3453                           
  3454                           ;LCD.c: 19:     RE1 = 0;
  3455  08AB  1089               	bcf	9,1	;volatile
  3456  08AC                     l2930:
  3457                           
  3458                           ;LCD.c: 20:     lcd_lat();
  3459  08AC  120A  158A  207D  120A  158A  	fcall	_lcd_lat
  3460  08B1                     l17:
  3461  08B1  0008               	return
  3462  08B2                     __end_of_lcd_cmd:
  3463                           
  3464                           	psect	text13
  3465  0A16                     __ptext13:	
  3466 ;; *************** function _lcd_ready *****************
  3467 ;; Defined at:
  3468 ;;		line 28 in file "LCD.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          2       0       0       0       0
  3485 ;;      Totals:         2       0       0       0       0
  3486 ;;Total ram usage:        2 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_lcd_cmd
  3493 ;;		_lcd_dwr
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _lcd_ready
  3499  0A16                     _lcd_ready:
  3500  0A16                     l2802:	
  3501                           ;incstack = 0
  3502                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  3503                           
  3504                           
  3505                           ;LCD.c: 29:     PORTD = 0xFF;
  3506  0A16  30FF               	movlw	255
  3507  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0A19  0088               	movwf	8	;volatile
  3510  0A1A                     l2804:
  3511                           
  3512                           ;LCD.c: 30:     PORTD &= 0x80;
  3513  0A1A  3080               	movlw	128
  3514  0A1B  00F4               	movwf	??_lcd_ready
  3515  0A1C  0874               	movf	??_lcd_ready,w
  3516  0A1D  0588               	andwf	8,f	;volatile
  3517  0A1E                     l2806:
  3518                           
  3519                           ;LCD.c: 31:     RE0 = 0;
  3520  0A1E  1009               	bcf	9,0	;volatile
  3521  0A1F                     l2808:
  3522                           
  3523                           ;LCD.c: 32:     RE1 = 1;
  3524  0A1F  1489               	bsf	9,1	;volatile
  3525  0A20                     l2810:
  3526                           
  3527                           ;LCD.c: 33:     RE2 = 0;
  3528  0A20  1109               	bcf	9,2	;volatile
  3529  0A21                     l2812:
  3530                           
  3531                           ;LCD.c: 34:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3532  0A21  3027               	movlw	39
  3533  0A22  00F5               	movwf	??_lcd_ready+1
  3534  0A23  30F5               	movlw	245
  3535  0A24  00F4               	movwf	??_lcd_ready
  3536  0A25                     u4237:
  3537  0A25  0BF4               	decfsz	??_lcd_ready,f
  3538  0A26  2A25               	goto	u4237
  3539  0A27  0BF5               	decfsz	??_lcd_ready+1,f
  3540  0A28  2A25               	goto	u4237
  3541  0A29                     l2814:
  3542                           
  3543                           ;LCD.c: 35:     RE2 = 1;
  3544  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0A2B  1509               	bsf	9,2	;volatile
  3547                           
  3548                           ;LCD.c: 36:     if (PORTD == 0x80){
  3549  0A2C  3080               	movlw	128
  3550  0A2D  0608               	xorwf	8,w	;volatile
  3551  0A2E  1D03               	btfss	3,2
  3552  0A2F  2A31               	goto	u3141
  3553  0A30  2A32               	goto	u3140
  3554  0A31                     u3141:
  3555  0A31  2A3E               	goto	l25
  3556  0A32                     u3140:
  3557  0A32                     l2816:
  3558                           
  3559                           ;LCD.c: 37:     RE2 = 0;
  3560  0A32  1109               	bcf	9,2	;volatile
  3561  0A33                     l2818:
  3562                           
  3563                           ;LCD.c: 38:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3564  0A33  3027               	movlw	39
  3565  0A34  00F5               	movwf	??_lcd_ready+1
  3566  0A35  30F5               	movlw	245
  3567  0A36  00F4               	movwf	??_lcd_ready
  3568  0A37                     u4247:
  3569  0A37  0BF4               	decfsz	??_lcd_ready,f
  3570  0A38  2A37               	goto	u4247
  3571  0A39  0BF5               	decfsz	??_lcd_ready+1,f
  3572  0A3A  2A37               	goto	u4247
  3573  0A3B                     l2820:
  3574                           
  3575                           ;LCD.c: 39:     RE2 = 1;
  3576  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0A3D  1509               	bsf	9,2	;volatile
  3579  0A3E                     l25:	
  3580                           ;LCD.c: 40:     }
  3581                           
  3582  0A3E  0008               	return
  3583  0A3F                     __end_of_lcd_ready:
  3584                           
  3585                           	psect	text14
  3586  087D                     __ptext14:	
  3587 ;; *************** function _lcd_lat *****************
  3588 ;; Defined at:
  3589 ;;		line 23 in file "LCD.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          2       0       0       0       0
  3606 ;;      Totals:         2       0       0       0       0
  3607 ;;Total ram usage:        2 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    2
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_lcd_cmd
  3614 ;;		_lcd_dwr
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function _lcd_lat
  3620  087D                     _lcd_lat:
  3621  087D                     l2822:	
  3622                           ;incstack = 0
  3623                           ; Regs used in _lcd_lat: [wreg]
  3624                           
  3625                           
  3626                           ;LCD.c: 24:     RE2 = 1;
  3627  087D  1283               	bcf	3,5	;RP0=0, select bank0
  3628  087E  1303               	bcf	3,6	;RP1=0, select bank0
  3629  087F  1509               	bsf	9,2	;volatile
  3630  0880                     l2824:
  3631                           
  3632                           ;LCD.c: 25:    _delay((unsigned long)((30)*(4000000/4000.0)));
  3633  0880  3027               	movlw	39
  3634  0881  00F5               	movwf	??_lcd_lat+1
  3635  0882  30F5               	movlw	245
  3636  0883  00F4               	movwf	??_lcd_lat
  3637  0884                     u4257:
  3638  0884  0BF4               	decfsz	??_lcd_lat,f
  3639  0885  2884               	goto	u4257
  3640  0886  0BF5               	decfsz	??_lcd_lat+1,f
  3641  0887  2884               	goto	u4257
  3642  0888                     l2826:
  3643                           
  3644                           ;LCD.c: 26:    RE2 = 0;
  3645  0888  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0889  1303               	bcf	3,6	;RP1=0, select bank0
  3647  088A  1109               	bcf	9,2	;volatile
  3648  088B                     l20:
  3649  088B  0008               	return
  3650  088C                     __end_of_lcd_lat:
  3651                           
  3652                           	psect	text15
  3653  099F                     __ptext15:	
  3654 ;; *************** function _itoa *****************
  3655 ;; Defined at:
  3656 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  buf             1    wreg     PTR unsigned char 
  3659 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  3660 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  3661 ;;  val             2   21[BANK0 ] int 
  3662 ;;  base            2   23[BANK0 ] int 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  3665 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  3666 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  3667 ;;  cp              1    0        PTR unsigned char 
  3668 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  3669 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      PTR unsigned char 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       4       0       0       0
  3680 ;;      Locals:         0       2       0       0       0
  3681 ;;      Temps:          0       1       0       0       0
  3682 ;;      Totals:         0       7       0       0       0
  3683 ;;Total ram usage:        7 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		_utoa
  3688 ;; This function is called by:
  3689 ;;		_ADC
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _itoa
  3695  099F                     _itoa:
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3699                           ;itoa@buf stored from wreg
  3700  099F  1283               	bcf	3,5	;RP0=0, select bank0
  3701  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  3702  09A1  00BB               	movwf	itoa@buf
  3703  09A2                     l2940:
  3704  09A2                     l2942:
  3705  09A2  1FB6               	btfss	itoa@val+1,7
  3706  09A3  29A5               	goto	u3311
  3707  09A4  29A6               	goto	u3310
  3708  09A5                     u3311:
  3709  09A5  29B6               	goto	l2950
  3710  09A6                     u3310:
  3711  09A6                     l2944:
  3712  09A6  302D               	movlw	45
  3713  09A7  00B9               	movwf	??_itoa
  3714  09A8  083B               	movf	itoa@buf,w
  3715  09A9  0084               	movwf	4
  3716  09AA  0839               	movf	??_itoa,w
  3717  09AB  1383               	bcf	3,7	;select IRP bank0
  3718  09AC  0080               	movwf	0
  3719  09AD                     l2946:
  3720  09AD  3001               	movlw	1
  3721  09AE  00B9               	movwf	??_itoa
  3722  09AF  0839               	movf	??_itoa,w
  3723  09B0  07BB               	addwf	itoa@buf,f
  3724  09B1                     l2948:
  3725  09B1  09B5               	comf	itoa@val,f
  3726  09B2  09B6               	comf	itoa@val+1,f
  3727  09B3  0AB5               	incf	itoa@val,f
  3728  09B4  1903               	skipnz
  3729  09B5  0AB6               	incf	itoa@val+1,f
  3730  09B6                     l2950:
  3731  09B6  0836               	movf	itoa@val+1,w
  3732  09B7  00AD               	movwf	utoa@val+1
  3733  09B8  0835               	movf	itoa@val,w
  3734  09B9  00AC               	movwf	utoa@val
  3735  09BA  0838               	movf	itoa@base+1,w
  3736  09BB  00AF               	movwf	utoa@base+1
  3737  09BC  0837               	movf	itoa@base,w
  3738  09BD  00AE               	movwf	utoa@base
  3739  09BE  083B               	movf	itoa@buf,w
  3740  09BF  120A  158A  23D0  120A  158A  	fcall	_utoa
  3741  09C4                     l821:
  3742  09C4  0008               	return
  3743  09C5                     __end_of_itoa:
  3744                           
  3745                           	psect	text16
  3746  0BD0                     __ptext16:	
  3747 ;; *************** function _utoa *****************
  3748 ;; Defined at:
  3749 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  buf             1    wreg     PTR unsigned char 
  3752 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  3753 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  3754 ;;  val             2   12[BANK0 ] unsigned int 
  3755 ;;  base            2   14[BANK0 ] int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  3758 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  3759 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  3760 ;;  v               2   17[BANK0 ] unsigned int 
  3761 ;;  c               1   19[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      PTR unsigned char 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       4       0       0       0
  3772 ;;      Locals:         0       4       0       0       0
  3773 ;;      Temps:          0       1       0       0       0
  3774 ;;      Totals:         0       9       0       0       0
  3775 ;;Total ram usage:        9 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    3
  3778 ;; This function calls:
  3779 ;;		___lwdiv
  3780 ;;		___lwmod
  3781 ;; This function is called by:
  3782 ;;		_itoa
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _utoa
  3788  0BD0                     _utoa:
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3792                           ;utoa@buf stored from wreg
  3793  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0BD2  00B4               	movwf	utoa@buf
  3796  0BD3                     l2892:
  3797  0BD3  082D               	movf	utoa@val+1,w
  3798  0BD4  00B2               	movwf	utoa@v+1
  3799  0BD5  082C               	movf	utoa@val,w
  3800  0BD6  00B1               	movwf	utoa@v
  3801  0BD7                     l2894:
  3802  0BD7  082F               	movf	utoa@base+1,w
  3803  0BD8  00A1               	movwf	___lwdiv@divisor+1
  3804  0BD9  082E               	movf	utoa@base,w
  3805  0BDA  00A0               	movwf	___lwdiv@divisor
  3806  0BDB  0832               	movf	utoa@v+1,w
  3807  0BDC  00A3               	movwf	___lwdiv@dividend+1
  3808  0BDD  0831               	movf	utoa@v,w
  3809  0BDE  00A2               	movwf	___lwdiv@dividend
  3810  0BDF  120A  118A  27B0  120A  158A  	fcall	___lwdiv
  3811  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0BE6  0821               	movf	?___lwdiv+1,w
  3814  0BE7  00B2               	movwf	utoa@v+1
  3815  0BE8  0820               	movf	?___lwdiv,w
  3816  0BE9  00B1               	movwf	utoa@v
  3817  0BEA                     l2896:
  3818  0BEA  3001               	movlw	1
  3819  0BEB  00B0               	movwf	??_utoa
  3820  0BEC  0830               	movf	??_utoa,w
  3821  0BED  07B4               	addwf	utoa@buf,f
  3822  0BEE                     l2898:
  3823  0BEE  0831               	movf	utoa@v,w
  3824  0BEF  0432               	iorwf	utoa@v+1,w
  3825  0BF0  1D03               	btfss	3,2
  3826  0BF1  2BF3               	goto	u3271
  3827  0BF2  2BF4               	goto	u3270
  3828  0BF3                     u3271:
  3829  0BF3  2BD7               	goto	l2894
  3830  0BF4                     u3270:
  3831  0BF4                     l2900:
  3832  0BF4  0834               	movf	utoa@buf,w
  3833  0BF5  0084               	movwf	4
  3834  0BF6  1383               	bcf	3,7	;select IRP bank0
  3835  0BF7  0180               	clrf	0
  3836  0BF8                     l2902:
  3837  0BF8  3001               	movlw	1
  3838  0BF9  02B4               	subwf	utoa@buf,f
  3839  0BFA                     l2904:
  3840  0BFA  082F               	movf	utoa@base+1,w
  3841  0BFB  00A8               	movwf	___lwmod@divisor+1
  3842  0BFC  082E               	movf	utoa@base,w
  3843  0BFD  00A7               	movwf	___lwmod@divisor
  3844  0BFE  082D               	movf	utoa@val+1,w
  3845  0BFF  00AA               	movwf	___lwmod@dividend+1
  3846  0C00  082C               	movf	utoa@val,w
  3847  0C01  00A9               	movwf	___lwmod@dividend
  3848  0C02  120A  158A  2294  120A  158A  	fcall	___lwmod
  3849  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0C09  0827               	movf	?___lwmod,w
  3852  0C0A  00B0               	movwf	??_utoa
  3853  0C0B  0830               	movf	??_utoa,w
  3854  0C0C  00B3               	movwf	utoa@c
  3855  0C0D                     l2906:
  3856  0C0D  082F               	movf	utoa@base+1,w
  3857  0C0E  00A1               	movwf	___lwdiv@divisor+1
  3858  0C0F  082E               	movf	utoa@base,w
  3859  0C10  00A0               	movwf	___lwdiv@divisor
  3860  0C11  082D               	movf	utoa@val+1,w
  3861  0C12  00A3               	movwf	___lwdiv@dividend+1
  3862  0C13  082C               	movf	utoa@val,w
  3863  0C14  00A2               	movwf	___lwdiv@dividend
  3864  0C15  120A  118A  27B0  120A  158A  	fcall	___lwdiv
  3865  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0C1C  0821               	movf	?___lwdiv+1,w
  3868  0C1D  00AD               	movwf	utoa@val+1
  3869  0C1E  0820               	movf	?___lwdiv,w
  3870  0C1F  00AC               	movwf	utoa@val
  3871  0C20                     l2908:
  3872  0C20  300A               	movlw	10
  3873  0C21  0233               	subwf	utoa@c,w
  3874  0C22  1C03               	skipc
  3875  0C23  2C25               	goto	u3281
  3876  0C24  2C26               	goto	u3280
  3877  0C25                     u3281:
  3878  0C25  2C2A               	goto	l827
  3879  0C26                     u3280:
  3880  0C26                     l2910:
  3881  0C26  3007               	movlw	7
  3882  0C27  00B0               	movwf	??_utoa
  3883  0C28  0830               	movf	??_utoa,w
  3884  0C29  07B3               	addwf	utoa@c,f
  3885  0C2A                     l827:
  3886  0C2A  3030               	movlw	48
  3887  0C2B  00B0               	movwf	??_utoa
  3888  0C2C  0830               	movf	??_utoa,w
  3889  0C2D  07B3               	addwf	utoa@c,f
  3890  0C2E                     l2912:
  3891  0C2E  0833               	movf	utoa@c,w
  3892  0C2F  00B0               	movwf	??_utoa
  3893  0C30  0834               	movf	utoa@buf,w
  3894  0C31  0084               	movwf	4
  3895  0C32  0830               	movf	??_utoa,w
  3896  0C33  1383               	bcf	3,7	;select IRP bank0
  3897  0C34  0080               	movwf	0
  3898  0C35                     l2914:
  3899  0C35  3001               	movlw	1
  3900  0C36  02B4               	subwf	utoa@buf,f
  3901  0C37                     l2916:
  3902  0C37  082C               	movf	utoa@val,w
  3903  0C38  042D               	iorwf	utoa@val+1,w
  3904  0C39  1D03               	btfss	3,2
  3905  0C3A  2C3C               	goto	u3291
  3906  0C3B  2C3D               	goto	u3290
  3907  0C3C                     u3291:
  3908  0C3C  2BFA               	goto	l2904
  3909  0C3D                     u3290:
  3910  0C3D                     l2918:
  3911                           
  3912                           ;	Return value of _utoa is never used
  3913  0C3D  3001               	movlw	1
  3914  0C3E  00B0               	movwf	??_utoa
  3915  0C3F  0830               	movf	??_utoa,w
  3916  0C40  07B4               	addwf	utoa@buf,f
  3917  0C41                     l829:
  3918  0C41  0008               	return
  3919  0C42                     __end_of_utoa:
  3920                           
  3921                           	psect	text17
  3922  0A94                     __ptext17:	
  3923 ;; *************** function ___lwmod *****************
  3924 ;; Defined at:
  3925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  divisor         2    7[BANK0 ] unsigned int 
  3928 ;;  dividend        2    9[BANK0 ] unsigned int 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  counter         1   11[BANK0 ] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    7[BANK0 ] unsigned int 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       4       0       0       0
  3941 ;;      Locals:         0       1       0       0       0
  3942 ;;      Temps:          1       0       0       0       0
  3943 ;;      Totals:         1       5       0       0       0
  3944 ;;Total ram usage:        6 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    2
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_sprintf
  3951 ;;		_utoa
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function ___lwmod
  3957  0A94                     ___lwmod:
  3958  0A94                     l1930:	
  3959                           ;incstack = 0
  3960                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3961                           
  3962  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0A96  0827               	movf	___lwmod@divisor,w
  3965  0A97  0428               	iorwf	___lwmod@divisor+1,w
  3966  0A98  1903               	btfsc	3,2
  3967  0A99  2A9B               	goto	u1691
  3968  0A9A  2A9C               	goto	u1690
  3969  0A9B                     u1691:
  3970  0A9B  2ACB               	goto	l1948
  3971  0A9C                     u1690:
  3972  0A9C                     l1932:
  3973  0A9C  01AB               	clrf	___lwmod@counter
  3974  0A9D  0AAB               	incf	___lwmod@counter,f
  3975  0A9E  2AAA               	goto	l1938
  3976  0A9F                     l1934:
  3977  0A9F  3001               	movlw	1
  3978  0AA0                     u1705:
  3979  0AA0  1003               	clrc
  3980  0AA1  0DA7               	rlf	___lwmod@divisor,f
  3981  0AA2  0DA8               	rlf	___lwmod@divisor+1,f
  3982  0AA3  3EFF               	addlw	-1
  3983  0AA4  1D03               	skipz
  3984  0AA5  2AA0               	goto	u1705
  3985  0AA6                     l1936:
  3986  0AA6  3001               	movlw	1
  3987  0AA7  00F5               	movwf	??___lwmod
  3988  0AA8  0875               	movf	??___lwmod,w
  3989  0AA9  07AB               	addwf	___lwmod@counter,f
  3990  0AAA                     l1938:
  3991  0AAA  1FA8               	btfss	___lwmod@divisor+1,7
  3992  0AAB  2AAD               	goto	u1711
  3993  0AAC  2AAE               	goto	u1710
  3994  0AAD                     u1711:
  3995  0AAD  2A9F               	goto	l1934
  3996  0AAE                     u1710:
  3997  0AAE                     l1940:
  3998  0AAE  0828               	movf	___lwmod@divisor+1,w
  3999  0AAF  022A               	subwf	___lwmod@dividend+1,w
  4000  0AB0  1D03               	skipz
  4001  0AB1  2AB4               	goto	u1725
  4002  0AB2  0827               	movf	___lwmod@divisor,w
  4003  0AB3  0229               	subwf	___lwmod@dividend,w
  4004  0AB4                     u1725:
  4005  0AB4  1C03               	skipc
  4006  0AB5  2AB7               	goto	u1721
  4007  0AB6  2AB8               	goto	u1720
  4008  0AB7                     u1721:
  4009  0AB7  2ABE               	goto	l1944
  4010  0AB8                     u1720:
  4011  0AB8                     l1942:
  4012  0AB8  0827               	movf	___lwmod@divisor,w
  4013  0AB9  02A9               	subwf	___lwmod@dividend,f
  4014  0ABA  0828               	movf	___lwmod@divisor+1,w
  4015  0ABB  1C03               	skipc
  4016  0ABC  03AA               	decf	___lwmod@dividend+1,f
  4017  0ABD  02AA               	subwf	___lwmod@dividend+1,f
  4018  0ABE                     l1944:
  4019  0ABE  3001               	movlw	1
  4020  0ABF                     u1735:
  4021  0ABF  1003               	clrc
  4022  0AC0  0CA8               	rrf	___lwmod@divisor+1,f
  4023  0AC1  0CA7               	rrf	___lwmod@divisor,f
  4024  0AC2  3EFF               	addlw	-1
  4025  0AC3  1D03               	skipz
  4026  0AC4  2ABF               	goto	u1735
  4027  0AC5                     l1946:
  4028  0AC5  3001               	movlw	1
  4029  0AC6  02AB               	subwf	___lwmod@counter,f
  4030  0AC7  1D03               	btfss	3,2
  4031  0AC8  2ACA               	goto	u1741
  4032  0AC9  2ACB               	goto	u1740
  4033  0ACA                     u1741:
  4034  0ACA  2AAE               	goto	l1940
  4035  0ACB                     u1740:
  4036  0ACB                     l1948:
  4037  0ACB  082A               	movf	___lwmod@dividend+1,w
  4038  0ACC  00A8               	movwf	?___lwmod+1
  4039  0ACD  0829               	movf	___lwmod@dividend,w
  4040  0ACE  00A7               	movwf	?___lwmod
  4041  0ACF                     l644:
  4042  0ACF  0008               	return
  4043  0AD0                     __end_of___lwmod:
  4044                           
  4045                           	psect	text18
  4046  07B0                     __ptext18:	
  4047 ;; *************** function ___lwdiv *****************
  4048 ;; Defined at:
  4049 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  divisor         2    0[BANK0 ] unsigned int 
  4052 ;;  dividend        2    2[BANK0 ] unsigned int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  quotient        2    5[BANK0 ] unsigned int 
  4055 ;;  counter         1    4[BANK0 ] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  2    0[BANK0 ] unsigned int 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       4       0       0       0
  4066 ;;      Locals:         0       3       0       0       0
  4067 ;;      Temps:          1       0       0       0       0
  4068 ;;      Totals:         1       7       0       0       0
  4069 ;;Total ram usage:        8 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    2
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_sprintf
  4076 ;;		_utoa
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function ___lwdiv
  4082  07B0                     ___lwdiv:
  4083  07B0                     l2828:	
  4084                           ;incstack = 0
  4085                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4086                           
  4087  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4088  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4089  07B2  01A5               	clrf	___lwdiv@quotient
  4090  07B3  01A6               	clrf	___lwdiv@quotient+1
  4091  07B4                     l2830:
  4092  07B4  0820               	movf	___lwdiv@divisor,w
  4093  07B5  0421               	iorwf	___lwdiv@divisor+1,w
  4094  07B6  1903               	btfsc	3,2
  4095  07B7  2FB9               	goto	u3151
  4096  07B8  2FBA               	goto	u3150
  4097  07B9                     u3151:
  4098  07B9  2FF1               	goto	l2850
  4099  07BA                     u3150:
  4100  07BA                     l2832:
  4101  07BA  01A4               	clrf	___lwdiv@counter
  4102  07BB  0AA4               	incf	___lwdiv@counter,f
  4103  07BC  2FC8               	goto	l2838
  4104  07BD                     l2834:
  4105  07BD  3001               	movlw	1
  4106  07BE                     u3165:
  4107  07BE  1003               	clrc
  4108  07BF  0DA0               	rlf	___lwdiv@divisor,f
  4109  07C0  0DA1               	rlf	___lwdiv@divisor+1,f
  4110  07C1  3EFF               	addlw	-1
  4111  07C2  1D03               	skipz
  4112  07C3  2FBE               	goto	u3165
  4113  07C4                     l2836:
  4114  07C4  3001               	movlw	1
  4115  07C5  00F4               	movwf	??___lwdiv
  4116  07C6  0874               	movf	??___lwdiv,w
  4117  07C7  07A4               	addwf	___lwdiv@counter,f
  4118  07C8                     l2838:
  4119  07C8  1FA1               	btfss	___lwdiv@divisor+1,7
  4120  07C9  2FCB               	goto	u3171
  4121  07CA  2FCC               	goto	u3170
  4122  07CB                     u3171:
  4123  07CB  2FBD               	goto	l2834
  4124  07CC                     u3170:
  4125  07CC                     l2840:
  4126  07CC  3001               	movlw	1
  4127  07CD                     u3185:
  4128  07CD  1003               	clrc
  4129  07CE  0DA5               	rlf	___lwdiv@quotient,f
  4130  07CF  0DA6               	rlf	___lwdiv@quotient+1,f
  4131  07D0  3EFF               	addlw	-1
  4132  07D1  1D03               	skipz
  4133  07D2  2FCD               	goto	u3185
  4134  07D3  0821               	movf	___lwdiv@divisor+1,w
  4135  07D4  0223               	subwf	___lwdiv@dividend+1,w
  4136  07D5  1D03               	skipz
  4137  07D6  2FD9               	goto	u3195
  4138  07D7  0820               	movf	___lwdiv@divisor,w
  4139  07D8  0222               	subwf	___lwdiv@dividend,w
  4140  07D9                     u3195:
  4141  07D9  1C03               	skipc
  4142  07DA  2FDC               	goto	u3191
  4143  07DB  2FDD               	goto	u3190
  4144  07DC                     u3191:
  4145  07DC  2FE4               	goto	l2846
  4146  07DD                     u3190:
  4147  07DD                     l2842:
  4148  07DD  0820               	movf	___lwdiv@divisor,w
  4149  07DE  02A2               	subwf	___lwdiv@dividend,f
  4150  07DF  0821               	movf	___lwdiv@divisor+1,w
  4151  07E0  1C03               	skipc
  4152  07E1  03A3               	decf	___lwdiv@dividend+1,f
  4153  07E2  02A3               	subwf	___lwdiv@dividend+1,f
  4154  07E3                     l2844:
  4155  07E3  1425               	bsf	___lwdiv@quotient,0
  4156  07E4                     l2846:
  4157  07E4  3001               	movlw	1
  4158  07E5                     u3205:
  4159  07E5  1003               	clrc
  4160  07E6  0CA1               	rrf	___lwdiv@divisor+1,f
  4161  07E7  0CA0               	rrf	___lwdiv@divisor,f
  4162  07E8  3EFF               	addlw	-1
  4163  07E9  1D03               	skipz
  4164  07EA  2FE5               	goto	u3205
  4165  07EB                     l2848:
  4166  07EB  3001               	movlw	1
  4167  07EC  02A4               	subwf	___lwdiv@counter,f
  4168  07ED  1D03               	btfss	3,2
  4169  07EE  2FF0               	goto	u3211
  4170  07EF  2FF1               	goto	u3210
  4171  07F0                     u3211:
  4172  07F0  2FCC               	goto	l2840
  4173  07F1                     u3210:
  4174  07F1                     l2850:
  4175  07F1  0826               	movf	___lwdiv@quotient+1,w
  4176  07F2  00A1               	movwf	?___lwdiv+1
  4177  07F3  0825               	movf	___lwdiv@quotient,w
  4178  07F4  00A0               	movwf	?___lwdiv
  4179  07F5                     l634:
  4180  07F5  0008               	return
  4181  07F6                     __end_of___lwdiv:
  4182                           
  4183                           	psect	text19
  4184  06F4                     __ptext19:	
  4185 ;; *************** function ___xxtofl *****************
  4186 ;; Defined at:
  4187 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  sign            1    wreg     unsigned char 
  4190 ;;  val             4    0[BANK0 ] long 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  sign            1    8[BANK0 ] unsigned char 
  4193 ;;  arg             4   10[BANK0 ] unsigned long 
  4194 ;;  exp             1    9[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4    0[BANK0 ] unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         0       4       0       0       0
  4205 ;;      Locals:         0       6       0       0       0
  4206 ;;      Temps:          0       4       0       0       0
  4207 ;;      Totals:         0      14       0       0       0
  4208 ;;Total ram usage:       14 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    2
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_ADC
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function ___xxtofl
  4220  06F4                     ___xxtofl:
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4224                           ;___xxtofl@sign stored from wreg
  4225  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  4226  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  4227  06F6  00A8               	movwf	___xxtofl@sign
  4228  06F7                     l3280:
  4229  06F7  0828               	movf	___xxtofl@sign,w
  4230  06F8  1903               	btfsc	3,2
  4231  06F9  2EFB               	goto	u4051
  4232  06FA  2EFC               	goto	u4050
  4233  06FB                     u4051:
  4234  06FB  2F10               	goto	l3286
  4235  06FC                     u4050:
  4236  06FC                     l3282:
  4237  06FC  1FA3               	btfss	___xxtofl@val+3,7
  4238  06FD  2EFF               	goto	u4061
  4239  06FE  2F00               	goto	u4060
  4240  06FF                     u4061:
  4241  06FF  2F10               	goto	l3286
  4242  0700                     u4060:
  4243  0700                     l3284:
  4244  0700  0920               	comf	___xxtofl@val,w
  4245  0701  00AA               	movwf	___xxtofl@arg
  4246  0702  0921               	comf	___xxtofl@val+1,w
  4247  0703  00AB               	movwf	___xxtofl@arg+1
  4248  0704  0922               	comf	___xxtofl@val+2,w
  4249  0705  00AC               	movwf	___xxtofl@arg+2
  4250  0706  0923               	comf	___xxtofl@val+3,w
  4251  0707  00AD               	movwf	___xxtofl@arg+3
  4252  0708  0AAA               	incf	___xxtofl@arg,f
  4253  0709  1903               	skipnz
  4254  070A  0AAB               	incf	___xxtofl@arg+1,f
  4255  070B  1903               	skipnz
  4256  070C  0AAC               	incf	___xxtofl@arg+2,f
  4257  070D  1903               	skipnz
  4258  070E  0AAD               	incf	___xxtofl@arg+3,f
  4259  070F  2F18               	goto	l795
  4260  0710                     l3286:
  4261  0710  0823               	movf	___xxtofl@val+3,w
  4262  0711  00AD               	movwf	___xxtofl@arg+3
  4263  0712  0822               	movf	___xxtofl@val+2,w
  4264  0713  00AC               	movwf	___xxtofl@arg+2
  4265  0714  0821               	movf	___xxtofl@val+1,w
  4266  0715  00AB               	movwf	___xxtofl@arg+1
  4267  0716  0820               	movf	___xxtofl@val,w
  4268  0717  00AA               	movwf	___xxtofl@arg
  4269  0718                     l795:
  4270  0718  0823               	movf	___xxtofl@val+3,w
  4271  0719  0422               	iorwf	___xxtofl@val+2,w
  4272  071A  0421               	iorwf	___xxtofl@val+1,w
  4273  071B  0420               	iorwf	___xxtofl@val,w
  4274  071C  1D03               	skipz
  4275  071D  2F1F               	goto	u4071
  4276  071E  2F20               	goto	u4070
  4277  071F                     u4071:
  4278  071F  2F29               	goto	l3292
  4279  0720                     u4070:
  4280  0720                     l3288:
  4281  0720  3000               	movlw	0
  4282  0721  00A3               	movwf	?___xxtofl+3
  4283  0722  3000               	movlw	0
  4284  0723  00A2               	movwf	?___xxtofl+2
  4285  0724  3000               	movlw	0
  4286  0725  00A1               	movwf	?___xxtofl+1
  4287  0726  3000               	movlw	0
  4288  0727  00A0               	movwf	?___xxtofl
  4289  0728  2FAF               	goto	l797
  4290  0729                     l3292:
  4291  0729  3096               	movlw	150
  4292  072A  00A4               	movwf	??___xxtofl
  4293  072B  0824               	movf	??___xxtofl,w
  4294  072C  00A9               	movwf	___xxtofl@exp
  4295  072D  2F3B               	goto	l3296
  4296  072E                     l3294:
  4297  072E  3001               	movlw	1
  4298  072F  00A4               	movwf	??___xxtofl
  4299  0730  0824               	movf	??___xxtofl,w
  4300  0731  07A9               	addwf	___xxtofl@exp,f
  4301  0732  3001               	movlw	1
  4302  0733                     u4085:
  4303  0733  1003               	clrc
  4304  0734  0CAD               	rrf	___xxtofl@arg+3,f
  4305  0735  0CAC               	rrf	___xxtofl@arg+2,f
  4306  0736  0CAB               	rrf	___xxtofl@arg+1,f
  4307  0737  0CAA               	rrf	___xxtofl@arg,f
  4308  0738  3EFF               	addlw	-1
  4309  0739  1D03               	skipz
  4310  073A  2F33               	goto	u4085
  4311  073B                     l3296:
  4312  073B  30FE               	movlw	254
  4313  073C  052D               	andwf	___xxtofl@arg+3,w
  4314  073D  1D03               	btfss	3,2
  4315  073E  2F40               	goto	u4091
  4316  073F  2F41               	goto	u4090
  4317  0740                     u4091:
  4318  0740  2F2E               	goto	l3294
  4319  0741                     u4090:
  4320  0741  2F5D               	goto	l801
  4321  0742                     l3298:
  4322  0742  3001               	movlw	1
  4323  0743  00A4               	movwf	??___xxtofl
  4324  0744  0824               	movf	??___xxtofl,w
  4325  0745  07A9               	addwf	___xxtofl@exp,f
  4326  0746                     l3300:
  4327  0746  3001               	movlw	1
  4328  0747  07AA               	addwf	___xxtofl@arg,f
  4329  0748  3000               	movlw	0
  4330  0749  1803               	skipnc
  4331  074A  3001               	movlw	1
  4332  074B  07AB               	addwf	___xxtofl@arg+1,f
  4333  074C  3000               	movlw	0
  4334  074D  1803               	skipnc
  4335  074E  3001               	movlw	1
  4336  074F  07AC               	addwf	___xxtofl@arg+2,f
  4337  0750  3000               	movlw	0
  4338  0751  1803               	skipnc
  4339  0752  3001               	movlw	1
  4340  0753  07AD               	addwf	___xxtofl@arg+3,f
  4341  0754                     l3302:
  4342  0754  3001               	movlw	1
  4343  0755                     u4105:
  4344  0755  1003               	clrc
  4345  0756  0CAD               	rrf	___xxtofl@arg+3,f
  4346  0757  0CAC               	rrf	___xxtofl@arg+2,f
  4347  0758  0CAB               	rrf	___xxtofl@arg+1,f
  4348  0759  0CAA               	rrf	___xxtofl@arg,f
  4349  075A  3EFF               	addlw	-1
  4350  075B  1D03               	skipz
  4351  075C  2F55               	goto	u4105
  4352  075D                     l801:
  4353  075D  30FF               	movlw	255
  4354  075E  052D               	andwf	___xxtofl@arg+3,w
  4355  075F  1D03               	btfss	3,2
  4356  0760  2F62               	goto	u4111
  4357  0761  2F63               	goto	u4110
  4358  0762                     u4111:
  4359  0762  2F42               	goto	l3298
  4360  0763                     u4110:
  4361  0763  2F6F               	goto	l3306
  4362  0764                     l3304:
  4363  0764  3001               	movlw	1
  4364  0765  02A9               	subwf	___xxtofl@exp,f
  4365  0766  3001               	movlw	1
  4366  0767  00A4               	movwf	??___xxtofl
  4367  0768                     u4125:
  4368  0768  1003               	clrc
  4369  0769  0DAA               	rlf	___xxtofl@arg,f
  4370  076A  0DAB               	rlf	___xxtofl@arg+1,f
  4371  076B  0DAC               	rlf	___xxtofl@arg+2,f
  4372  076C  0DAD               	rlf	___xxtofl@arg+3,f
  4373  076D  0BA4               	decfsz	??___xxtofl,f
  4374  076E  2F68               	goto	u4125
  4375  076F                     l3306:
  4376  076F  1BAC               	btfsc	___xxtofl@arg+2,7
  4377  0770  2F72               	goto	u4131
  4378  0771  2F73               	goto	u4130
  4379  0772                     u4131:
  4380  0772  2F79               	goto	l808
  4381  0773                     u4130:
  4382  0773                     l3308:
  4383  0773  3002               	movlw	2
  4384  0774  0229               	subwf	___xxtofl@exp,w
  4385  0775  1803               	skipnc
  4386  0776  2F78               	goto	u4141
  4387  0777  2F79               	goto	u4140
  4388  0778                     u4141:
  4389  0778  2F64               	goto	l3304
  4390  0779                     u4140:
  4391  0779                     l808:
  4392  0779  1829               	btfsc	___xxtofl@exp,0
  4393  077A  2F7C               	goto	u4151
  4394  077B  2F7D               	goto	u4150
  4395  077C                     u4151:
  4396  077C  2F85               	goto	l809
  4397  077D                     u4150:
  4398  077D                     l3310:
  4399  077D  30FF               	movlw	255
  4400  077E  05AA               	andwf	___xxtofl@arg,f
  4401  077F  30FF               	movlw	255
  4402  0780  05AB               	andwf	___xxtofl@arg+1,f
  4403  0781  307F               	movlw	127
  4404  0782  05AC               	andwf	___xxtofl@arg+2,f
  4405  0783  30FF               	movlw	255
  4406  0784  05AD               	andwf	___xxtofl@arg+3,f
  4407  0785                     l809:
  4408  0785  1003               	clrc
  4409  0786  0CA9               	rrf	___xxtofl@exp,f
  4410  0787                     l3312:
  4411  0787  0829               	movf	___xxtofl@exp,w
  4412  0788  00A4               	movwf	??___xxtofl
  4413  0789  01A5               	clrf	??___xxtofl+1
  4414  078A  01A6               	clrf	??___xxtofl+2
  4415  078B  01A7               	clrf	??___xxtofl+3
  4416  078C  3018               	movlw	24
  4417  078D                     u4165:
  4418  078D  1003               	clrc
  4419  078E  0DA4               	rlf	??___xxtofl,f
  4420  078F  0DA5               	rlf	??___xxtofl+1,f
  4421  0790  0DA6               	rlf	??___xxtofl+2,f
  4422  0791  0DA7               	rlf	??___xxtofl+3,f
  4423  0792                     u4160:
  4424  0792  3EFF               	addlw	-1
  4425  0793  1D03               	skipz
  4426  0794  2F8D               	goto	u4165
  4427  0795  0824               	movf	??___xxtofl,w
  4428  0796  04AA               	iorwf	___xxtofl@arg,f
  4429  0797  0825               	movf	??___xxtofl+1,w
  4430  0798  04AB               	iorwf	___xxtofl@arg+1,f
  4431  0799  0826               	movf	??___xxtofl+2,w
  4432  079A  04AC               	iorwf	___xxtofl@arg+2,f
  4433  079B  0827               	movf	??___xxtofl+3,w
  4434  079C  04AD               	iorwf	___xxtofl@arg+3,f
  4435  079D                     l3314:
  4436  079D  0828               	movf	___xxtofl@sign,w
  4437  079E  1903               	btfsc	3,2
  4438  079F  2FA1               	goto	u4171
  4439  07A0  2FA2               	goto	u4170
  4440  07A1                     u4171:
  4441  07A1  2FA7               	goto	l3320
  4442  07A2                     u4170:
  4443  07A2                     l3316:
  4444  07A2  1FA3               	btfss	___xxtofl@val+3,7
  4445  07A3  2FA5               	goto	u4181
  4446  07A4  2FA6               	goto	u4180
  4447  07A5                     u4181:
  4448  07A5  2FA7               	goto	l3320
  4449  07A6                     u4180:
  4450  07A6                     l3318:
  4451  07A6  17AD               	bsf	___xxtofl@arg+3,7
  4452  07A7                     l3320:
  4453  07A7  082D               	movf	___xxtofl@arg+3,w
  4454  07A8  00A3               	movwf	?___xxtofl+3
  4455  07A9  082C               	movf	___xxtofl@arg+2,w
  4456  07AA  00A2               	movwf	?___xxtofl+2
  4457  07AB  082B               	movf	___xxtofl@arg+1,w
  4458  07AC  00A1               	movwf	?___xxtofl+1
  4459  07AD  082A               	movf	___xxtofl@arg,w
  4460  07AE  00A0               	movwf	?___xxtofl
  4461  07AF                     l797:
  4462  07AF  0008               	return
  4463  07B0                     __end_of___xxtofl:
  4464                           
  4465                           	psect	text20
  4466  0C42                     __ptext20:	
  4467 ;; *************** function ___fltol *****************
  4468 ;; Defined at:
  4469 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  f1              4   40[BANK0 ] unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  exp1            1   50[BANK0 ] unsigned char 
  4474 ;;  sign1           1   49[BANK0 ] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  4   40[BANK0 ] long 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         0       4       0       0       0
  4485 ;;      Locals:         0       2       0       0       0
  4486 ;;      Temps:          0       5       0       0       0
  4487 ;;      Totals:         0      11       0       0       0
  4488 ;;Total ram usage:       11 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    2
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_ADC
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function ___fltol
  4500  0C42                     ___fltol:
  4501  0C42                     l3104:	
  4502                           ;incstack = 0
  4503                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4504                           
  4505  0C42  1003               	clrc
  4506  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0C45  0D4A               	rlf	___fltol@f1+2,w
  4509  0C46  0D4B               	rlf	___fltol@f1+3,w
  4510  0C47  00CC               	movwf	??___fltol
  4511  0C48  084C               	movf	??___fltol,w
  4512  0C49  00D2               	movwf	___fltol@exp1
  4513  0C4A  0852               	movf	___fltol@exp1,w
  4514  0C4B  1D03               	btfss	3,2
  4515  0C4C  2C4E               	goto	u3581
  4516  0C4D  2C4F               	goto	u3580
  4517  0C4E                     u3581:
  4518  0C4E  2C58               	goto	l3110
  4519  0C4F                     u3580:
  4520  0C4F                     l3106:
  4521  0C4F  3000               	movlw	0
  4522  0C50  00CB               	movwf	?___fltol+3
  4523  0C51  3000               	movlw	0
  4524  0C52  00CA               	movwf	?___fltol+2
  4525  0C53  3000               	movlw	0
  4526  0C54  00C9               	movwf	?___fltol+1
  4527  0C55  3000               	movlw	0
  4528  0C56  00C8               	movwf	?___fltol
  4529  0C57  2CBD               	goto	l548
  4530  0C58                     l3110:
  4531  0C58  0848               	movf	___fltol@f1,w
  4532  0C59  00CC               	movwf	??___fltol
  4533  0C5A  0849               	movf	___fltol@f1+1,w
  4534  0C5B  00CD               	movwf	??___fltol+1
  4535  0C5C  084A               	movf	___fltol@f1+2,w
  4536  0C5D  00CE               	movwf	??___fltol+2
  4537  0C5E  084B               	movf	___fltol@f1+3,w
  4538  0C5F  00CF               	movwf	??___fltol+3
  4539  0C60  301F               	movlw	31
  4540  0C61                     u3595:
  4541  0C61  1003               	clrc
  4542  0C62  0CCF               	rrf	??___fltol+3,f
  4543  0C63  0CCE               	rrf	??___fltol+2,f
  4544  0C64  0CCD               	rrf	??___fltol+1,f
  4545  0C65  0CCC               	rrf	??___fltol,f
  4546  0C66                     u3590:
  4547  0C66  3EFF               	addlw	-1
  4548  0C67  1D03               	skipz
  4549  0C68  2C61               	goto	u3595
  4550  0C69  084C               	movf	??___fltol,w
  4551  0C6A  00D0               	movwf	??___fltol+4
  4552  0C6B  0850               	movf	??___fltol+4,w
  4553  0C6C  00D1               	movwf	___fltol@sign1
  4554  0C6D                     l3112:
  4555  0C6D  17CA               	bsf	___fltol@f1+2,7
  4556  0C6E                     l3114:
  4557  0C6E  30FF               	movlw	255
  4558  0C6F  05C8               	andwf	___fltol@f1,f
  4559  0C70  30FF               	movlw	255
  4560  0C71  05C9               	andwf	___fltol@f1+1,f
  4561  0C72  30FF               	movlw	255
  4562  0C73  05CA               	andwf	___fltol@f1+2,f
  4563  0C74  3000               	movlw	0
  4564  0C75  05CB               	andwf	___fltol@f1+3,f
  4565  0C76                     l3116:
  4566  0C76  3096               	movlw	150
  4567  0C77  02D2               	subwf	___fltol@exp1,f
  4568  0C78                     l3118:
  4569  0C78  1FD2               	btfss	___fltol@exp1,7
  4570  0C79  2C7B               	goto	u3601
  4571  0C7A  2C7C               	goto	u3600
  4572  0C7B                     u3601:
  4573  0C7B  2C96               	goto	l3128
  4574  0C7C                     u3600:
  4575  0C7C                     l3120:
  4576  0C7C  0852               	movf	___fltol@exp1,w
  4577  0C7D  3A80               	xorlw	128
  4578  0C7E  3E97               	addlw	151
  4579  0C7F  1803               	skipnc
  4580  0C80  2C82               	goto	u3611
  4581  0C81  2C83               	goto	u3610
  4582  0C82                     u3611:
  4583  0C82  2C84               	goto	l3126
  4584  0C83                     u3610:
  4585  0C83  2C4F               	goto	l3106
  4586  0C84                     l3126:
  4587  0C84  3001               	movlw	1
  4588  0C85                     u3625:
  4589  0C85  1003               	clrc
  4590  0C86  0CCB               	rrf	___fltol@f1+3,f
  4591  0C87  0CCA               	rrf	___fltol@f1+2,f
  4592  0C88  0CC9               	rrf	___fltol@f1+1,f
  4593  0C89  0CC8               	rrf	___fltol@f1,f
  4594  0C8A  3EFF               	addlw	-1
  4595  0C8B  1D03               	skipz
  4596  0C8C  2C85               	goto	u3625
  4597  0C8D  3001               	movlw	1
  4598  0C8E  00CC               	movwf	??___fltol
  4599  0C8F  084C               	movf	??___fltol,w
  4600  0C90  07D2               	addwf	___fltol@exp1,f
  4601  0C91  1D03               	btfss	3,2
  4602  0C92  2C94               	goto	u3631
  4603  0C93  2C95               	goto	u3630
  4604  0C94                     u3631:
  4605  0C94  2C84               	goto	l3126
  4606  0C95                     u3630:
  4607  0C95  2CAD               	goto	l3136
  4608  0C96                     l3128:
  4609  0C96  3020               	movlw	32
  4610  0C97  0252               	subwf	___fltol@exp1,w
  4611  0C98  1C03               	skipc
  4612  0C99  2C9B               	goto	u3641
  4613  0C9A  2C9C               	goto	u3640
  4614  0C9B                     u3641:
  4615  0C9B  2CA8               	goto	l555
  4616  0C9C                     u3640:
  4617  0C9C  2C4F               	goto	l3106
  4618  0C9D                     l3134:
  4619  0C9D  3001               	movlw	1
  4620  0C9E  00CC               	movwf	??___fltol
  4621  0C9F                     u3655:
  4622  0C9F  1003               	clrc
  4623  0CA0  0DC8               	rlf	___fltol@f1,f
  4624  0CA1  0DC9               	rlf	___fltol@f1+1,f
  4625  0CA2  0DCA               	rlf	___fltol@f1+2,f
  4626  0CA3  0DCB               	rlf	___fltol@f1+3,f
  4627  0CA4  0BCC               	decfsz	??___fltol,f
  4628  0CA5  2C9F               	goto	u3655
  4629  0CA6  3001               	movlw	1
  4630  0CA7  02D2               	subwf	___fltol@exp1,f
  4631  0CA8                     l555:
  4632  0CA8  0852               	movf	___fltol@exp1,w
  4633  0CA9  1D03               	btfss	3,2
  4634  0CAA  2CAC               	goto	u3661
  4635  0CAB  2CAD               	goto	u3660
  4636  0CAC                     u3661:
  4637  0CAC  2C9D               	goto	l3134
  4638  0CAD                     u3660:
  4639  0CAD                     l3136:
  4640  0CAD  0851               	movf	___fltol@sign1,w
  4641  0CAE  1903               	btfsc	3,2
  4642  0CAF  2CB1               	goto	u3671
  4643  0CB0  2CB2               	goto	u3670
  4644  0CB1                     u3671:
  4645  0CB1  2CBD               	goto	l558
  4646  0CB2                     u3670:
  4647  0CB2                     l3138:
  4648  0CB2  09C8               	comf	___fltol@f1,f
  4649  0CB3  09C9               	comf	___fltol@f1+1,f
  4650  0CB4  09CA               	comf	___fltol@f1+2,f
  4651  0CB5  09CB               	comf	___fltol@f1+3,f
  4652  0CB6  0AC8               	incf	___fltol@f1,f
  4653  0CB7  1903               	skipnz
  4654  0CB8  0AC9               	incf	___fltol@f1+1,f
  4655  0CB9  1903               	skipnz
  4656  0CBA  0ACA               	incf	___fltol@f1+2,f
  4657  0CBB  1903               	skipnz
  4658  0CBC  0ACB               	incf	___fltol@f1+3,f
  4659  0CBD                     l558:
  4660  0CBD                     l548:
  4661  0CBD  0008               	return
  4662  0CBE                     __end_of___fltol:
  4663                           
  4664                           	psect	text21
  4665  0393                     __ptext21:	
  4666 ;; *************** function ___flmul *****************
  4667 ;; Defined at:
  4668 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  b               4   14[BANK0 ] long 
  4671 ;;  a               4   18[BANK0 ] long 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  prod            4   34[BANK0 ] struct .
  4674 ;;  grs             4   29[BANK0 ] unsigned long 
  4675 ;;  temp            2   38[BANK0 ] struct .
  4676 ;;  bexp            1   33[BANK0 ] unsigned char 
  4677 ;;  aexp            1   28[BANK0 ] unsigned char 
  4678 ;;  sign            1   27[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  4   14[BANK0 ] unsigned char 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       8       0       0       0
  4689 ;;      Locals:         0      13       0       0       0
  4690 ;;      Temps:          0       5       0       0       0
  4691 ;;      Totals:         0      26       0       0       0
  4692 ;;Total ram usage:       26 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    3
  4695 ;; This function calls:
  4696 ;;		__Umul8_16
  4697 ;; This function is called by:
  4698 ;;		_ADC
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function ___flmul
  4704  0393                     ___flmul:
  4705  0393                     l3140:	
  4706                           ;incstack = 0
  4707                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4708                           
  4709  0393  1283               	bcf	3,5	;RP0=0, select bank0
  4710  0394  1303               	bcf	3,6	;RP1=0, select bank0
  4711  0395  0831               	movf	___flmul@b+3,w
  4712  0396  3980               	andlw	128
  4713  0397  00B6               	movwf	??___flmul
  4714  0398  0836               	movf	??___flmul,w
  4715  0399  00BB               	movwf	___flmul@sign
  4716  039A                     l3142:
  4717  039A  0831               	movf	___flmul@b+3,w
  4718  039B  00B6               	movwf	??___flmul
  4719  039C  0736               	addwf	??___flmul,w
  4720  039D  00B7               	movwf	??___flmul+1
  4721  039E  0837               	movf	??___flmul+1,w
  4722  039F  00C1               	movwf	___flmul@bexp
  4723  03A0                     l3144:
  4724  03A0  1FB0               	btfss	___flmul@b+2,7
  4725  03A1  2BA3               	goto	u3681
  4726  03A2  2BA4               	goto	u3680
  4727  03A3                     u3681:
  4728  03A3  2BA5               	goto	l3148
  4729  03A4                     u3680:
  4730  03A4                     l3146:
  4731  03A4  1441               	bsf	___flmul@bexp,0
  4732  03A5                     l3148:
  4733  03A5  0841               	movf	___flmul@bexp,w
  4734  03A6  1903               	btfsc	3,2
  4735  03A7  2BA9               	goto	u3691
  4736  03A8  2BAA               	goto	u3690
  4737  03A9                     u3691:
  4738  03A9  2BB9               	goto	l3156
  4739  03AA                     u3690:
  4740  03AA                     l3150:
  4741  03AA  0A41               	incf	___flmul@bexp,w
  4742  03AB  1D03               	btfss	3,2
  4743  03AC  2BAE               	goto	u3701
  4744  03AD  2BAF               	goto	u3700
  4745  03AE                     u3701:
  4746  03AE  2BB7               	goto	l3154
  4747  03AF                     u3700:
  4748  03AF                     l3152:
  4749  03AF  3000               	movlw	0
  4750  03B0  00B1               	movwf	___flmul@b+3
  4751  03B1  3000               	movlw	0
  4752  03B2  00B0               	movwf	___flmul@b+2
  4753  03B3  3000               	movlw	0
  4754  03B4  00AF               	movwf	___flmul@b+1
  4755  03B5  3000               	movlw	0
  4756  03B6  00AE               	movwf	___flmul@b
  4757  03B7                     l3154:
  4758  03B7  17B0               	bsf	___flmul@b+2,7
  4759  03B8  2BC1               	goto	l3158
  4760  03B9                     l3156:
  4761  03B9  3000               	movlw	0
  4762  03BA  00B1               	movwf	___flmul@b+3
  4763  03BB  3000               	movlw	0
  4764  03BC  00B0               	movwf	___flmul@b+2
  4765  03BD  3000               	movlw	0
  4766  03BE  00AF               	movwf	___flmul@b+1
  4767  03BF  3000               	movlw	0
  4768  03C0  00AE               	movwf	___flmul@b
  4769  03C1                     l3158:
  4770  03C1  0835               	movf	___flmul@a+3,w
  4771  03C2  3980               	andlw	128
  4772  03C3  00B6               	movwf	??___flmul
  4773  03C4  0836               	movf	??___flmul,w
  4774  03C5  06BB               	xorwf	___flmul@sign,f
  4775  03C6                     l3160:
  4776  03C6  0835               	movf	___flmul@a+3,w
  4777  03C7  00B6               	movwf	??___flmul
  4778  03C8  0736               	addwf	??___flmul,w
  4779  03C9  00B7               	movwf	??___flmul+1
  4780  03CA  0837               	movf	??___flmul+1,w
  4781  03CB  00BC               	movwf	___flmul@aexp
  4782  03CC                     l3162:
  4783  03CC  1FB4               	btfss	___flmul@a+2,7
  4784  03CD  2BCF               	goto	u3711
  4785  03CE  2BD0               	goto	u3710
  4786  03CF                     u3711:
  4787  03CF  2BD1               	goto	l3166
  4788  03D0                     u3710:
  4789  03D0                     l3164:
  4790  03D0  143C               	bsf	___flmul@aexp,0
  4791  03D1                     l3166:
  4792  03D1  083C               	movf	___flmul@aexp,w
  4793  03D2  1903               	btfsc	3,2
  4794  03D3  2BD5               	goto	u3721
  4795  03D4  2BD6               	goto	u3720
  4796  03D5                     u3721:
  4797  03D5  2BE5               	goto	l3174
  4798  03D6                     u3720:
  4799  03D6                     l3168:
  4800  03D6  0A3C               	incf	___flmul@aexp,w
  4801  03D7  1D03               	btfss	3,2
  4802  03D8  2BDA               	goto	u3731
  4803  03D9  2BDB               	goto	u3730
  4804  03DA                     u3731:
  4805  03DA  2BE3               	goto	l3172
  4806  03DB                     u3730:
  4807  03DB                     l3170:
  4808  03DB  3000               	movlw	0
  4809  03DC  00B5               	movwf	___flmul@a+3
  4810  03DD  3000               	movlw	0
  4811  03DE  00B4               	movwf	___flmul@a+2
  4812  03DF  3000               	movlw	0
  4813  03E0  00B3               	movwf	___flmul@a+1
  4814  03E1  3000               	movlw	0
  4815  03E2  00B2               	movwf	___flmul@a
  4816  03E3                     l3172:
  4817  03E3  17B4               	bsf	___flmul@a+2,7
  4818  03E4  2BED               	goto	l3176
  4819  03E5                     l3174:
  4820  03E5  3000               	movlw	0
  4821  03E6  00B5               	movwf	___flmul@a+3
  4822  03E7  3000               	movlw	0
  4823  03E8  00B4               	movwf	___flmul@a+2
  4824  03E9  3000               	movlw	0
  4825  03EA  00B3               	movwf	___flmul@a+1
  4826  03EB  3000               	movlw	0
  4827  03EC  00B2               	movwf	___flmul@a
  4828  03ED                     l3176:
  4829  03ED  083C               	movf	___flmul@aexp,w
  4830  03EE  1903               	btfsc	3,2
  4831  03EF  2BF1               	goto	u3741
  4832  03F0  2BF2               	goto	u3740
  4833  03F1                     u3741:
  4834  03F1  2BF7               	goto	l3180
  4835  03F2                     u3740:
  4836  03F2                     l3178:
  4837  03F2  0841               	movf	___flmul@bexp,w
  4838  03F3  1D03               	btfss	3,2
  4839  03F4  2BF6               	goto	u3751
  4840  03F5  2BF7               	goto	u3750
  4841  03F6                     u3751:
  4842  03F6  2C00               	goto	l3184
  4843  03F7                     u3750:
  4844  03F7                     l3180:
  4845  03F7  3000               	movlw	0
  4846  03F8  00B1               	movwf	?___flmul+3
  4847  03F9  3000               	movlw	0
  4848  03FA  00B0               	movwf	?___flmul+2
  4849  03FB  3000               	movlw	0
  4850  03FC  00AF               	movwf	?___flmul+1
  4851  03FD  3000               	movlw	0
  4852  03FE  00AE               	movwf	?___flmul
  4853  03FF  2EF3               	goto	l751
  4854  0400                     l3184:
  4855  0400  082E               	movf	___flmul@b,w
  4856  0401  00B6               	movwf	??___flmul
  4857  0402  0836               	movf	??___flmul,w
  4858  0403  00F4               	movwf	__Umul8_16@multiplicand
  4859  0404  0834               	movf	___flmul@a+2,w
  4860  0405  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  4861  040A  0875               	movf	?__Umul8_16+1,w
  4862  040B  1283               	bcf	3,5	;RP0=0, select bank0
  4863  040C  1303               	bcf	3,6	;RP1=0, select bank0
  4864  040D  00C7               	movwf	___flmul@temp+1
  4865  040E  0874               	movf	?__Umul8_16,w
  4866  040F  00C6               	movwf	___flmul@temp
  4867  0410                     l3186:
  4868  0410  0846               	movf	___flmul@temp,w
  4869  0411  00B6               	movwf	??___flmul
  4870  0412  01B7               	clrf	??___flmul+1
  4871  0413  01B8               	clrf	??___flmul+2
  4872  0414  01B9               	clrf	??___flmul+3
  4873  0415  0839               	movf	??___flmul+3,w
  4874  0416  00C0               	movwf	___flmul@grs+3
  4875  0417  0838               	movf	??___flmul+2,w
  4876  0418  00BF               	movwf	___flmul@grs+2
  4877  0419  0837               	movf	??___flmul+1,w
  4878  041A  00BE               	movwf	___flmul@grs+1
  4879  041B  0836               	movf	??___flmul,w
  4880  041C  00BD               	movwf	___flmul@grs
  4881  041D                     l3188:
  4882  041D  0847               	movf	___flmul@temp+1,w
  4883  041E  00B6               	movwf	??___flmul
  4884  041F  01B7               	clrf	??___flmul+1
  4885  0420  01B8               	clrf	??___flmul+2
  4886  0421  01B9               	clrf	??___flmul+3
  4887  0422  0839               	movf	??___flmul+3,w
  4888  0423  00C5               	movwf	___flmul@prod+3
  4889  0424  0838               	movf	??___flmul+2,w
  4890  0425  00C4               	movwf	___flmul@prod+2
  4891  0426  0837               	movf	??___flmul+1,w
  4892  0427  00C3               	movwf	___flmul@prod+1
  4893  0428  0836               	movf	??___flmul,w
  4894  0429  00C2               	movwf	___flmul@prod
  4895  042A  082F               	movf	___flmul@b+1,w
  4896  042B  00B6               	movwf	??___flmul
  4897  042C  0836               	movf	??___flmul,w
  4898  042D  00F4               	movwf	__Umul8_16@multiplicand
  4899  042E  0833               	movf	___flmul@a+1,w
  4900  042F  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  4901  0434  0875               	movf	?__Umul8_16+1,w
  4902  0435  1283               	bcf	3,5	;RP0=0, select bank0
  4903  0436  1303               	bcf	3,6	;RP1=0, select bank0
  4904  0437  00C7               	movwf	___flmul@temp+1
  4905  0438  0874               	movf	?__Umul8_16,w
  4906  0439  00C6               	movwf	___flmul@temp
  4907  043A                     l3190:
  4908  043A  0846               	movf	___flmul@temp,w
  4909  043B  00B6               	movwf	??___flmul
  4910  043C  01B7               	clrf	??___flmul+1
  4911  043D  01B8               	clrf	??___flmul+2
  4912  043E  01B9               	clrf	??___flmul+3
  4913  043F  0836               	movf	??___flmul,w
  4914  0440  07BD               	addwf	___flmul@grs,f
  4915  0441  0837               	movf	??___flmul+1,w
  4916  0442  1103               	clrz
  4917  0443  1803               	skipnc
  4918  0444  3E01               	addlw	1
  4919  0445  1903               	skipnz
  4920  0446  2C48               	goto	u3761
  4921  0447  07BE               	addwf	___flmul@grs+1,f
  4922  0448                     u3761:
  4923  0448  0838               	movf	??___flmul+2,w
  4924  0449  1103               	clrz
  4925  044A  1803               	skipnc
  4926  044B  3E01               	addlw	1
  4927  044C  1903               	skipnz
  4928  044D  2C4F               	goto	u3762
  4929  044E  07BF               	addwf	___flmul@grs+2,f
  4930  044F                     u3762:
  4931  044F  0839               	movf	??___flmul+3,w
  4932  0450  1103               	clrz
  4933  0451  1803               	skipnc
  4934  0452  3E01               	addlw	1
  4935  0453  1903               	skipnz
  4936  0454  2C56               	goto	u3763
  4937  0455  07C0               	addwf	___flmul@grs+3,f
  4938  0456                     u3763:
  4939  0456                     l3192:
  4940  0456  0847               	movf	___flmul@temp+1,w
  4941  0457  00B6               	movwf	??___flmul
  4942  0458  01B7               	clrf	??___flmul+1
  4943  0459  01B8               	clrf	??___flmul+2
  4944  045A  01B9               	clrf	??___flmul+3
  4945  045B  0836               	movf	??___flmul,w
  4946  045C  07C2               	addwf	___flmul@prod,f
  4947  045D  0837               	movf	??___flmul+1,w
  4948  045E  1103               	clrz
  4949  045F  1803               	skipnc
  4950  0460  3E01               	addlw	1
  4951  0461  1903               	skipnz
  4952  0462  2C64               	goto	u3771
  4953  0463  07C3               	addwf	___flmul@prod+1,f
  4954  0464                     u3771:
  4955  0464  0838               	movf	??___flmul+2,w
  4956  0465  1103               	clrz
  4957  0466  1803               	skipnc
  4958  0467  3E01               	addlw	1
  4959  0468  1903               	skipnz
  4960  0469  2C6B               	goto	u3772
  4961  046A  07C4               	addwf	___flmul@prod+2,f
  4962  046B                     u3772:
  4963  046B  0839               	movf	??___flmul+3,w
  4964  046C  1103               	clrz
  4965  046D  1803               	skipnc
  4966  046E  3E01               	addlw	1
  4967  046F  1903               	skipnz
  4968  0470  2C72               	goto	u3773
  4969  0471  07C5               	addwf	___flmul@prod+3,f
  4970  0472                     u3773:
  4971  0472  0830               	movf	___flmul@b+2,w
  4972  0473  00B6               	movwf	??___flmul
  4973  0474  0836               	movf	??___flmul,w
  4974  0475  00F4               	movwf	__Umul8_16@multiplicand
  4975  0476  0832               	movf	___flmul@a,w
  4976  0477  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  4977  047C  0875               	movf	?__Umul8_16+1,w
  4978  047D  1283               	bcf	3,5	;RP0=0, select bank0
  4979  047E  1303               	bcf	3,6	;RP1=0, select bank0
  4980  047F  00C7               	movwf	___flmul@temp+1
  4981  0480  0874               	movf	?__Umul8_16,w
  4982  0481  00C6               	movwf	___flmul@temp
  4983  0482                     l3194:
  4984  0482  0846               	movf	___flmul@temp,w
  4985  0483  00B6               	movwf	??___flmul
  4986  0484  01B7               	clrf	??___flmul+1
  4987  0485  01B8               	clrf	??___flmul+2
  4988  0486  01B9               	clrf	??___flmul+3
  4989  0487  0836               	movf	??___flmul,w
  4990  0488  07BD               	addwf	___flmul@grs,f
  4991  0489  0837               	movf	??___flmul+1,w
  4992  048A  1103               	clrz
  4993  048B  1803               	skipnc
  4994  048C  3E01               	addlw	1
  4995  048D  1903               	skipnz
  4996  048E  2C90               	goto	u3781
  4997  048F  07BE               	addwf	___flmul@grs+1,f
  4998  0490                     u3781:
  4999  0490  0838               	movf	??___flmul+2,w
  5000  0491  1103               	clrz
  5001  0492  1803               	skipnc
  5002  0493  3E01               	addlw	1
  5003  0494  1903               	skipnz
  5004  0495  2C97               	goto	u3782
  5005  0496  07BF               	addwf	___flmul@grs+2,f
  5006  0497                     u3782:
  5007  0497  0839               	movf	??___flmul+3,w
  5008  0498  1103               	clrz
  5009  0499  1803               	skipnc
  5010  049A  3E01               	addlw	1
  5011  049B  1903               	skipnz
  5012  049C  2C9E               	goto	u3783
  5013  049D  07C0               	addwf	___flmul@grs+3,f
  5014  049E                     u3783:
  5015  049E                     l3196:
  5016  049E  0847               	movf	___flmul@temp+1,w
  5017  049F  00B6               	movwf	??___flmul
  5018  04A0  01B7               	clrf	??___flmul+1
  5019  04A1  01B8               	clrf	??___flmul+2
  5020  04A2  01B9               	clrf	??___flmul+3
  5021  04A3  0836               	movf	??___flmul,w
  5022  04A4  07C2               	addwf	___flmul@prod,f
  5023  04A5  0837               	movf	??___flmul+1,w
  5024  04A6  1103               	clrz
  5025  04A7  1803               	skipnc
  5026  04A8  3E01               	addlw	1
  5027  04A9  1903               	skipnz
  5028  04AA  2CAC               	goto	u3791
  5029  04AB  07C3               	addwf	___flmul@prod+1,f
  5030  04AC                     u3791:
  5031  04AC  0838               	movf	??___flmul+2,w
  5032  04AD  1103               	clrz
  5033  04AE  1803               	skipnc
  5034  04AF  3E01               	addlw	1
  5035  04B0  1903               	skipnz
  5036  04B1  2CB3               	goto	u3792
  5037  04B2  07C4               	addwf	___flmul@prod+2,f
  5038  04B3                     u3792:
  5039  04B3  0839               	movf	??___flmul+3,w
  5040  04B4  1103               	clrz
  5041  04B5  1803               	skipnc
  5042  04B6  3E01               	addlw	1
  5043  04B7  1903               	skipnz
  5044  04B8  2CBA               	goto	u3793
  5045  04B9  07C5               	addwf	___flmul@prod+3,f
  5046  04BA                     u3793:
  5047  04BA                     l3198:
  5048  04BA  3008               	movlw	8
  5049  04BB  00B6               	movwf	??___flmul
  5050  04BC                     u3805:
  5051  04BC  1003               	clrc
  5052  04BD  0DBD               	rlf	___flmul@grs,f
  5053  04BE  0DBE               	rlf	___flmul@grs+1,f
  5054  04BF  0DBF               	rlf	___flmul@grs+2,f
  5055  04C0  0DC0               	rlf	___flmul@grs+3,f
  5056  04C1  0BB6               	decfsz	??___flmul,f
  5057  04C2  2CBC               	goto	u3805
  5058  04C3                     l3200:
  5059  04C3  082F               	movf	___flmul@b+1,w
  5060  04C4  00B6               	movwf	??___flmul
  5061  04C5  0836               	movf	??___flmul,w
  5062  04C6  00F4               	movwf	__Umul8_16@multiplicand
  5063  04C7  0832               	movf	___flmul@a,w
  5064  04C8  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5065  04CD  0875               	movf	?__Umul8_16+1,w
  5066  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  5067  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  5068  04D0  00C7               	movwf	___flmul@temp+1
  5069  04D1  0874               	movf	?__Umul8_16,w
  5070  04D2  00C6               	movwf	___flmul@temp
  5071  04D3                     l3202:
  5072  04D3  0846               	movf	___flmul@temp,w
  5073  04D4  00B6               	movwf	??___flmul
  5074  04D5  0847               	movf	___flmul@temp+1,w
  5075  04D6  00B7               	movwf	??___flmul+1
  5076  04D7  01B8               	clrf	??___flmul+2
  5077  04D8  01B9               	clrf	??___flmul+3
  5078  04D9  0836               	movf	??___flmul,w
  5079  04DA  07BD               	addwf	___flmul@grs,f
  5080  04DB  0837               	movf	??___flmul+1,w
  5081  04DC  1103               	clrz
  5082  04DD  1803               	skipnc
  5083  04DE  3E01               	addlw	1
  5084  04DF  1903               	skipnz
  5085  04E0  2CE2               	goto	u3811
  5086  04E1  07BE               	addwf	___flmul@grs+1,f
  5087  04E2                     u3811:
  5088  04E2  0838               	movf	??___flmul+2,w
  5089  04E3  1103               	clrz
  5090  04E4  1803               	skipnc
  5091  04E5  3E01               	addlw	1
  5092  04E6  1903               	skipnz
  5093  04E7  2CE9               	goto	u3812
  5094  04E8  07BF               	addwf	___flmul@grs+2,f
  5095  04E9                     u3812:
  5096  04E9  0839               	movf	??___flmul+3,w
  5097  04EA  1103               	clrz
  5098  04EB  1803               	skipnc
  5099  04EC  3E01               	addlw	1
  5100  04ED  1903               	skipnz
  5101  04EE  2CF0               	goto	u3813
  5102  04EF  07C0               	addwf	___flmul@grs+3,f
  5103  04F0                     u3813:
  5104  04F0                     l3204:
  5105  04F0  082E               	movf	___flmul@b,w
  5106  04F1  00B6               	movwf	??___flmul
  5107  04F2  0836               	movf	??___flmul,w
  5108  04F3  00F4               	movwf	__Umul8_16@multiplicand
  5109  04F4  0833               	movf	___flmul@a+1,w
  5110  04F5  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5111  04FA  0875               	movf	?__Umul8_16+1,w
  5112  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  5113  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  5114  04FD  00C7               	movwf	___flmul@temp+1
  5115  04FE  0874               	movf	?__Umul8_16,w
  5116  04FF  00C6               	movwf	___flmul@temp
  5117  0500                     l3206:
  5118  0500  0846               	movf	___flmul@temp,w
  5119  0501  00B6               	movwf	??___flmul
  5120  0502  0847               	movf	___flmul@temp+1,w
  5121  0503  00B7               	movwf	??___flmul+1
  5122  0504  01B8               	clrf	??___flmul+2
  5123  0505  01B9               	clrf	??___flmul+3
  5124  0506  0836               	movf	??___flmul,w
  5125  0507  07BD               	addwf	___flmul@grs,f
  5126  0508  0837               	movf	??___flmul+1,w
  5127  0509  1103               	clrz
  5128  050A  1803               	skipnc
  5129  050B  3E01               	addlw	1
  5130  050C  1903               	skipnz
  5131  050D  2D0F               	goto	u3821
  5132  050E  07BE               	addwf	___flmul@grs+1,f
  5133  050F                     u3821:
  5134  050F  0838               	movf	??___flmul+2,w
  5135  0510  1103               	clrz
  5136  0511  1803               	skipnc
  5137  0512  3E01               	addlw	1
  5138  0513  1903               	skipnz
  5139  0514  2D16               	goto	u3822
  5140  0515  07BF               	addwf	___flmul@grs+2,f
  5141  0516                     u3822:
  5142  0516  0839               	movf	??___flmul+3,w
  5143  0517  1103               	clrz
  5144  0518  1803               	skipnc
  5145  0519  3E01               	addlw	1
  5146  051A  1903               	skipnz
  5147  051B  2D1D               	goto	u3823
  5148  051C  07C0               	addwf	___flmul@grs+3,f
  5149  051D                     u3823:
  5150  051D                     l3208:
  5151  051D  3008               	movlw	8
  5152  051E  00B6               	movwf	??___flmul
  5153  051F                     u3835:
  5154  051F  1003               	clrc
  5155  0520  0DBD               	rlf	___flmul@grs,f
  5156  0521  0DBE               	rlf	___flmul@grs+1,f
  5157  0522  0DBF               	rlf	___flmul@grs+2,f
  5158  0523  0DC0               	rlf	___flmul@grs+3,f
  5159  0524  0BB6               	decfsz	??___flmul,f
  5160  0525  2D1F               	goto	u3835
  5161  0526  082E               	movf	___flmul@b,w
  5162  0527  00B6               	movwf	??___flmul
  5163  0528  0836               	movf	??___flmul,w
  5164  0529  00F4               	movwf	__Umul8_16@multiplicand
  5165  052A  0832               	movf	___flmul@a,w
  5166  052B  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5167  0530  0875               	movf	?__Umul8_16+1,w
  5168  0531  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0532  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0533  00C7               	movwf	___flmul@temp+1
  5171  0534  0874               	movf	?__Umul8_16,w
  5172  0535  00C6               	movwf	___flmul@temp
  5173  0536                     l3210:
  5174  0536  0846               	movf	___flmul@temp,w
  5175  0537  00B6               	movwf	??___flmul
  5176  0538  0847               	movf	___flmul@temp+1,w
  5177  0539  00B7               	movwf	??___flmul+1
  5178  053A  01B8               	clrf	??___flmul+2
  5179  053B  01B9               	clrf	??___flmul+3
  5180  053C  0836               	movf	??___flmul,w
  5181  053D  07BD               	addwf	___flmul@grs,f
  5182  053E  0837               	movf	??___flmul+1,w
  5183  053F  1103               	clrz
  5184  0540  1803               	skipnc
  5185  0541  3E01               	addlw	1
  5186  0542  1903               	skipnz
  5187  0543  2D45               	goto	u3841
  5188  0544  07BE               	addwf	___flmul@grs+1,f
  5189  0545                     u3841:
  5190  0545  0838               	movf	??___flmul+2,w
  5191  0546  1103               	clrz
  5192  0547  1803               	skipnc
  5193  0548  3E01               	addlw	1
  5194  0549  1903               	skipnz
  5195  054A  2D4C               	goto	u3842
  5196  054B  07BF               	addwf	___flmul@grs+2,f
  5197  054C                     u3842:
  5198  054C  0839               	movf	??___flmul+3,w
  5199  054D  1103               	clrz
  5200  054E  1803               	skipnc
  5201  054F  3E01               	addlw	1
  5202  0550  1903               	skipnz
  5203  0551  2D53               	goto	u3843
  5204  0552  07C0               	addwf	___flmul@grs+3,f
  5205  0553                     u3843:
  5206  0553                     l3212:
  5207  0553  082F               	movf	___flmul@b+1,w
  5208  0554  00B6               	movwf	??___flmul
  5209  0555  0836               	movf	??___flmul,w
  5210  0556  00F4               	movwf	__Umul8_16@multiplicand
  5211  0557  0834               	movf	___flmul@a+2,w
  5212  0558  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5213  055D  0875               	movf	?__Umul8_16+1,w
  5214  055E  1283               	bcf	3,5	;RP0=0, select bank0
  5215  055F  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0560  00C7               	movwf	___flmul@temp+1
  5217  0561  0874               	movf	?__Umul8_16,w
  5218  0562  00C6               	movwf	___flmul@temp
  5219  0563  0846               	movf	___flmul@temp,w
  5220  0564  00B6               	movwf	??___flmul
  5221  0565  0847               	movf	___flmul@temp+1,w
  5222  0566  00B7               	movwf	??___flmul+1
  5223  0567  01B8               	clrf	??___flmul+2
  5224  0568  01B9               	clrf	??___flmul+3
  5225  0569  0836               	movf	??___flmul,w
  5226  056A  07C2               	addwf	___flmul@prod,f
  5227  056B  0837               	movf	??___flmul+1,w
  5228  056C  1103               	clrz
  5229  056D  1803               	skipnc
  5230  056E  3E01               	addlw	1
  5231  056F  1903               	skipnz
  5232  0570  2D72               	goto	u3851
  5233  0571  07C3               	addwf	___flmul@prod+1,f
  5234  0572                     u3851:
  5235  0572  0838               	movf	??___flmul+2,w
  5236  0573  1103               	clrz
  5237  0574  1803               	skipnc
  5238  0575  3E01               	addlw	1
  5239  0576  1903               	skipnz
  5240  0577  2D79               	goto	u3852
  5241  0578  07C4               	addwf	___flmul@prod+2,f
  5242  0579                     u3852:
  5243  0579  0839               	movf	??___flmul+3,w
  5244  057A  1103               	clrz
  5245  057B  1803               	skipnc
  5246  057C  3E01               	addlw	1
  5247  057D  1903               	skipnz
  5248  057E  2D80               	goto	u3853
  5249  057F  07C5               	addwf	___flmul@prod+3,f
  5250  0580                     u3853:
  5251  0580                     l3214:
  5252  0580  0830               	movf	___flmul@b+2,w
  5253  0581  00B6               	movwf	??___flmul
  5254  0582  0836               	movf	??___flmul,w
  5255  0583  00F4               	movwf	__Umul8_16@multiplicand
  5256  0584  0833               	movf	___flmul@a+1,w
  5257  0585  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5258  058A  0875               	movf	?__Umul8_16+1,w
  5259  058B  1283               	bcf	3,5	;RP0=0, select bank0
  5260  058C  1303               	bcf	3,6	;RP1=0, select bank0
  5261  058D  00C7               	movwf	___flmul@temp+1
  5262  058E  0874               	movf	?__Umul8_16,w
  5263  058F  00C6               	movwf	___flmul@temp
  5264  0590                     l3216:
  5265  0590  0846               	movf	___flmul@temp,w
  5266  0591  00B6               	movwf	??___flmul
  5267  0592  0847               	movf	___flmul@temp+1,w
  5268  0593  00B7               	movwf	??___flmul+1
  5269  0594  01B8               	clrf	??___flmul+2
  5270  0595  01B9               	clrf	??___flmul+3
  5271  0596  0836               	movf	??___flmul,w
  5272  0597  07C2               	addwf	___flmul@prod,f
  5273  0598  0837               	movf	??___flmul+1,w
  5274  0599  1103               	clrz
  5275  059A  1803               	skipnc
  5276  059B  3E01               	addlw	1
  5277  059C  1903               	skipnz
  5278  059D  2D9F               	goto	u3861
  5279  059E  07C3               	addwf	___flmul@prod+1,f
  5280  059F                     u3861:
  5281  059F  0838               	movf	??___flmul+2,w
  5282  05A0  1103               	clrz
  5283  05A1  1803               	skipnc
  5284  05A2  3E01               	addlw	1
  5285  05A3  1903               	skipnz
  5286  05A4  2DA6               	goto	u3862
  5287  05A5  07C4               	addwf	___flmul@prod+2,f
  5288  05A6                     u3862:
  5289  05A6  0839               	movf	??___flmul+3,w
  5290  05A7  1103               	clrz
  5291  05A8  1803               	skipnc
  5292  05A9  3E01               	addlw	1
  5293  05AA  1903               	skipnz
  5294  05AB  2DAD               	goto	u3863
  5295  05AC  07C5               	addwf	___flmul@prod+3,f
  5296  05AD                     u3863:
  5297  05AD  0830               	movf	___flmul@b+2,w
  5298  05AE  00B6               	movwf	??___flmul
  5299  05AF  0836               	movf	??___flmul,w
  5300  05B0  00F4               	movwf	__Umul8_16@multiplicand
  5301  05B1  0834               	movf	___flmul@a+2,w
  5302  05B2  120A  158A  21ED  120A  118A  	fcall	__Umul8_16
  5303  05B7  0875               	movf	?__Umul8_16+1,w
  5304  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  5305  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  5306  05BA  00C7               	movwf	___flmul@temp+1
  5307  05BB  0874               	movf	?__Umul8_16,w
  5308  05BC  00C6               	movwf	___flmul@temp
  5309  05BD                     l3218:
  5310  05BD  0846               	movf	___flmul@temp,w
  5311  05BE  00B6               	movwf	??___flmul
  5312  05BF  0847               	movf	___flmul@temp+1,w
  5313  05C0  00B7               	movwf	??___flmul+1
  5314  05C1  01B8               	clrf	??___flmul+2
  5315  05C2  01B9               	clrf	??___flmul+3
  5316  05C3  3008               	movlw	8
  5317  05C4                     u3875:
  5318  05C4  1003               	clrc
  5319  05C5  0DB6               	rlf	??___flmul,f
  5320  05C6  0DB7               	rlf	??___flmul+1,f
  5321  05C7  0DB8               	rlf	??___flmul+2,f
  5322  05C8  0DB9               	rlf	??___flmul+3,f
  5323  05C9                     u3870:
  5324  05C9  3EFF               	addlw	-1
  5325  05CA  1D03               	skipz
  5326  05CB  2DC4               	goto	u3875
  5327  05CC  0836               	movf	??___flmul,w
  5328  05CD  07C2               	addwf	___flmul@prod,f
  5329  05CE  0837               	movf	??___flmul+1,w
  5330  05CF  1103               	clrz
  5331  05D0  1803               	skipnc
  5332  05D1  3E01               	addlw	1
  5333  05D2  1903               	skipnz
  5334  05D3  2DD5               	goto	u3881
  5335  05D4  07C3               	addwf	___flmul@prod+1,f
  5336  05D5                     u3881:
  5337  05D5  0838               	movf	??___flmul+2,w
  5338  05D6  1103               	clrz
  5339  05D7  1803               	skipnc
  5340  05D8  3E01               	addlw	1
  5341  05D9  1903               	skipnz
  5342  05DA  2DDC               	goto	u3882
  5343  05DB  07C4               	addwf	___flmul@prod+2,f
  5344  05DC                     u3882:
  5345  05DC  0839               	movf	??___flmul+3,w
  5346  05DD  1103               	clrz
  5347  05DE  1803               	skipnc
  5348  05DF  3E01               	addlw	1
  5349  05E0  1903               	skipnz
  5350  05E1  2DE3               	goto	u3883
  5351  05E2  07C5               	addwf	___flmul@prod+3,f
  5352  05E3                     u3883:
  5353  05E3                     l3220:
  5354  05E3  083D               	movf	___flmul@grs,w
  5355  05E4  00B6               	movwf	??___flmul
  5356  05E5  083E               	movf	___flmul@grs+1,w
  5357  05E6  00B7               	movwf	??___flmul+1
  5358  05E7  083F               	movf	___flmul@grs+2,w
  5359  05E8  00B8               	movwf	??___flmul+2
  5360  05E9  0840               	movf	___flmul@grs+3,w
  5361  05EA  00B9               	movwf	??___flmul+3
  5362  05EB  3018               	movlw	24
  5363  05EC                     u3895:
  5364  05EC  1003               	clrc
  5365  05ED  0CB9               	rrf	??___flmul+3,f
  5366  05EE  0CB8               	rrf	??___flmul+2,f
  5367  05EF  0CB7               	rrf	??___flmul+1,f
  5368  05F0  0CB6               	rrf	??___flmul,f
  5369  05F1                     u3890:
  5370  05F1  3EFF               	addlw	-1
  5371  05F2  1D03               	skipz
  5372  05F3  2DEC               	goto	u3895
  5373  05F4  0836               	movf	??___flmul,w
  5374  05F5  07C2               	addwf	___flmul@prod,f
  5375  05F6  0837               	movf	??___flmul+1,w
  5376  05F7  1103               	clrz
  5377  05F8  1803               	skipnc
  5378  05F9  3E01               	addlw	1
  5379  05FA  1903               	skipnz
  5380  05FB  2DFD               	goto	u3901
  5381  05FC  07C3               	addwf	___flmul@prod+1,f
  5382  05FD                     u3901:
  5383  05FD  0838               	movf	??___flmul+2,w
  5384  05FE  1103               	clrz
  5385  05FF  1803               	skipnc
  5386  0600  3E01               	addlw	1
  5387  0601  1903               	skipnz
  5388  0602  2E04               	goto	u3902
  5389  0603  07C4               	addwf	___flmul@prod+2,f
  5390  0604                     u3902:
  5391  0604  0839               	movf	??___flmul+3,w
  5392  0605  1103               	clrz
  5393  0606  1803               	skipnc
  5394  0607  3E01               	addlw	1
  5395  0608  1903               	skipnz
  5396  0609  2E0B               	goto	u3903
  5397  060A  07C5               	addwf	___flmul@prod+3,f
  5398  060B                     u3903:
  5399  060B                     l3222:
  5400  060B  3008               	movlw	8
  5401  060C  00B6               	movwf	??___flmul
  5402  060D                     u3915:
  5403  060D  1003               	clrc
  5404  060E  0DBD               	rlf	___flmul@grs,f
  5405  060F  0DBE               	rlf	___flmul@grs+1,f
  5406  0610  0DBF               	rlf	___flmul@grs+2,f
  5407  0611  0DC0               	rlf	___flmul@grs+3,f
  5408  0612  0BB6               	decfsz	??___flmul,f
  5409  0613  2E0D               	goto	u3915
  5410  0614                     l3224:
  5411  0614  0841               	movf	___flmul@bexp,w
  5412  0615  073C               	addwf	___flmul@aexp,w
  5413  0616  00B6               	movwf	??___flmul
  5414  0617  01B7               	clrf	??___flmul+1
  5415  0618  0DB7               	rlf	??___flmul+1,f
  5416  0619  0836               	movf	??___flmul,w
  5417  061A  3E82               	addlw	130
  5418  061B  00C6               	movwf	___flmul@temp
  5419  061C  0837               	movf	??___flmul+1,w
  5420  061D  1803               	skipnc
  5421  061E  3E01               	addlw	1
  5422  061F  3EFF               	addlw	255
  5423  0620  00C7               	movwf	___flmul@temp+1
  5424  0621  2E3F               	goto	l3236
  5425  0622                     l3226:
  5426  0622  3001               	movlw	1
  5427  0623  00B6               	movwf	??___flmul
  5428  0624                     u3925:
  5429  0624  1003               	clrc
  5430  0625  0DC2               	rlf	___flmul@prod,f
  5431  0626  0DC3               	rlf	___flmul@prod+1,f
  5432  0627  0DC4               	rlf	___flmul@prod+2,f
  5433  0628  0DC5               	rlf	___flmul@prod+3,f
  5434  0629  0BB6               	decfsz	??___flmul,f
  5435  062A  2E24               	goto	u3925
  5436  062B                     l3228:
  5437  062B  1FC0               	btfss	___flmul@grs+3,7
  5438  062C  2E2E               	goto	u3931
  5439  062D  2E2F               	goto	u3930
  5440  062E                     u3931:
  5441  062E  2E30               	goto	l3232
  5442  062F                     u3930:
  5443  062F                     l3230:
  5444  062F  1442               	bsf	___flmul@prod,0
  5445  0630                     l3232:
  5446  0630  3001               	movlw	1
  5447  0631  00B6               	movwf	??___flmul
  5448  0632                     u3945:
  5449  0632  1003               	clrc
  5450  0633  0DBD               	rlf	___flmul@grs,f
  5451  0634  0DBE               	rlf	___flmul@grs+1,f
  5452  0635  0DBF               	rlf	___flmul@grs+2,f
  5453  0636  0DC0               	rlf	___flmul@grs+3,f
  5454  0637  0BB6               	decfsz	??___flmul,f
  5455  0638  2E32               	goto	u3945
  5456  0639                     l3234:
  5457  0639  30FF               	movlw	255
  5458  063A  07C6               	addwf	___flmul@temp,f
  5459  063B  1803               	skipnc
  5460  063C  0AC7               	incf	___flmul@temp+1,f
  5461  063D  30FF               	movlw	255
  5462  063E  07C7               	addwf	___flmul@temp+1,f
  5463  063F                     l3236:
  5464  063F  1FC4               	btfss	___flmul@prod+2,7
  5465  0640  2E42               	goto	u3951
  5466  0641  2E43               	goto	u3950
  5467  0642                     u3951:
  5468  0642  2E22               	goto	l3226
  5469  0643                     u3950:
  5470  0643                     l3238:
  5471  0643  01BC               	clrf	___flmul@aexp
  5472  0644                     l3240:
  5473  0644  1FC0               	btfss	___flmul@grs+3,7
  5474  0645  2E47               	goto	u3961
  5475  0646  2E48               	goto	u3960
  5476  0647                     u3961:
  5477  0647  2E64               	goto	l3248
  5478  0648                     u3960:
  5479  0648                     l3242:
  5480  0648  30FF               	movlw	255
  5481  0649  053D               	andwf	___flmul@grs,w
  5482  064A  00B6               	movwf	??___flmul
  5483  064B  30FF               	movlw	255
  5484  064C  053E               	andwf	___flmul@grs+1,w
  5485  064D  00B7               	movwf	??___flmul+1
  5486  064E  30FF               	movlw	255
  5487  064F  053F               	andwf	___flmul@grs+2,w
  5488  0650  00B8               	movwf	??___flmul+2
  5489  0651  307F               	movlw	127
  5490  0652  0540               	andwf	___flmul@grs+3,w
  5491  0653  00B9               	movwf	??___flmul+3
  5492  0654  0839               	movf	??___flmul+3,w
  5493  0655  0438               	iorwf	??___flmul+2,w
  5494  0656  0437               	iorwf	??___flmul+1,w
  5495  0657  0436               	iorwf	??___flmul,w
  5496  0658  1903               	skipnz
  5497  0659  2E5B               	goto	u3971
  5498  065A  2E5C               	goto	u3970
  5499  065B                     u3971:
  5500  065B  2E5F               	goto	l757
  5501  065C                     u3970:
  5502  065C                     l3244:
  5503  065C  01BC               	clrf	___flmul@aexp
  5504  065D  0ABC               	incf	___flmul@aexp,f
  5505  065E  2E64               	goto	l3248
  5506  065F                     l757:
  5507  065F  1C42               	btfss	___flmul@prod,0
  5508  0660  2E62               	goto	u3981
  5509  0661  2E63               	goto	u3980
  5510  0662                     u3981:
  5511  0662  2E64               	goto	l3248
  5512  0663                     u3980:
  5513  0663  2E5C               	goto	l3244
  5514  0664                     l3248:
  5515  0664  083C               	movf	___flmul@aexp,w
  5516  0665  1903               	btfsc	3,2
  5517  0666  2E68               	goto	u3991
  5518  0667  2E69               	goto	u3990
  5519  0668                     u3991:
  5520  0668  2E9A               	goto	l3258
  5521  0669                     u3990:
  5522  0669                     l3250:
  5523  0669  3001               	movlw	1
  5524  066A  07C2               	addwf	___flmul@prod,f
  5525  066B  3000               	movlw	0
  5526  066C  1803               	skipnc
  5527  066D  3001               	movlw	1
  5528  066E  07C3               	addwf	___flmul@prod+1,f
  5529  066F  3000               	movlw	0
  5530  0670  1803               	skipnc
  5531  0671  3001               	movlw	1
  5532  0672  07C4               	addwf	___flmul@prod+2,f
  5533  0673  3000               	movlw	0
  5534  0674  1803               	skipnc
  5535  0675  3001               	movlw	1
  5536  0676  07C5               	addwf	___flmul@prod+3,f
  5537  0677                     l3252:
  5538  0677  1C45               	btfss	___flmul@prod+3,0
  5539  0678  2E7A               	goto	u4001
  5540  0679  2E7B               	goto	u4000
  5541  067A                     u4001:
  5542  067A  2E9A               	goto	l3258
  5543  067B                     u4000:
  5544  067B                     l3254:
  5545  067B  0842               	movf	___flmul@prod,w
  5546  067C  00B6               	movwf	??___flmul
  5547  067D  0843               	movf	___flmul@prod+1,w
  5548  067E  00B7               	movwf	??___flmul+1
  5549  067F  0844               	movf	___flmul@prod+2,w
  5550  0680  00B8               	movwf	??___flmul+2
  5551  0681  0845               	movf	___flmul@prod+3,w
  5552  0682  00B9               	movwf	??___flmul+3
  5553  0683  3001               	movlw	1
  5554  0684  00BA               	movwf	??___flmul+4
  5555  0685                     u4015:
  5556  0685  0D39               	rlf	??___flmul+3,w
  5557  0686  0CB9               	rrf	??___flmul+3,f
  5558  0687  0CB8               	rrf	??___flmul+2,f
  5559  0688  0CB7               	rrf	??___flmul+1,f
  5560  0689  0CB6               	rrf	??___flmul,f
  5561  068A                     u4010:
  5562  068A  0BBA               	decfsz	??___flmul+4,f
  5563  068B  2E85               	goto	u4015
  5564  068C  0839               	movf	??___flmul+3,w
  5565  068D  00C5               	movwf	___flmul@prod+3
  5566  068E  0838               	movf	??___flmul+2,w
  5567  068F  00C4               	movwf	___flmul@prod+2
  5568  0690  0837               	movf	??___flmul+1,w
  5569  0691  00C3               	movwf	___flmul@prod+1
  5570  0692  0836               	movf	??___flmul,w
  5571  0693  00C2               	movwf	___flmul@prod
  5572  0694                     l3256:
  5573  0694  3001               	movlw	1
  5574  0695  07C6               	addwf	___flmul@temp,f
  5575  0696  1803               	skipnc
  5576  0697  0AC7               	incf	___flmul@temp+1,f
  5577  0698  3000               	movlw	0
  5578  0699  07C7               	addwf	___flmul@temp+1,f
  5579  069A                     l3258:
  5580  069A  0847               	movf	___flmul@temp+1,w
  5581  069B  3A80               	xorlw	128
  5582  069C  00FF               	movwf	btemp+1
  5583  069D  3080               	movlw	128
  5584  069E  027F               	subwf	btemp+1,w
  5585  069F  1D03               	skipz
  5586  06A0  2EA3               	goto	u4025
  5587  06A1  30FF               	movlw	255
  5588  06A2  0246               	subwf	___flmul@temp,w
  5589  06A3                     u4025:
  5590  06A3  1C03               	skipc
  5591  06A4  2EA6               	goto	u4021
  5592  06A5  2EA7               	goto	u4020
  5593  06A6                     u4021:
  5594  06A6  2EB2               	goto	l3262
  5595  06A7                     u4020:
  5596  06A7                     l3260:
  5597  06A7  307F               	movlw	127
  5598  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  5599  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  5600  06AA  00C5               	movwf	___flmul@prod+3
  5601  06AB  3080               	movlw	128
  5602  06AC  00C4               	movwf	___flmul@prod+2
  5603  06AD  3000               	movlw	0
  5604  06AE  00C3               	movwf	___flmul@prod+1
  5605  06AF  3000               	movlw	0
  5606  06B0  00C2               	movwf	___flmul@prod
  5607  06B1  2EE7               	goto	l763
  5608  06B2                     l3262:
  5609  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  5610  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  5611  06B4  0847               	movf	___flmul@temp+1,w
  5612  06B5  3A80               	xorlw	128
  5613  06B6  00FF               	movwf	btemp+1
  5614  06B7  3080               	movlw	128
  5615  06B8  027F               	subwf	btemp+1,w
  5616  06B9  1D03               	skipz
  5617  06BA  2EBD               	goto	u4035
  5618  06BB  3001               	movlw	1
  5619  06BC  0246               	subwf	___flmul@temp,w
  5620  06BD                     u4035:
  5621  06BD  1803               	skipnc
  5622  06BE  2EC0               	goto	u4031
  5623  06BF  2EC1               	goto	u4030
  5624  06C0                     u4031:
  5625  06C0  2ECD               	goto	l3268
  5626  06C1                     u4030:
  5627  06C1                     l3264:
  5628  06C1  3000               	movlw	0
  5629  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  5630  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  5631  06C4  00C5               	movwf	___flmul@prod+3
  5632  06C5  3000               	movlw	0
  5633  06C6  00C4               	movwf	___flmul@prod+2
  5634  06C7  3000               	movlw	0
  5635  06C8  00C3               	movwf	___flmul@prod+1
  5636  06C9  3000               	movlw	0
  5637  06CA  00C2               	movwf	___flmul@prod
  5638  06CB                     l3266:
  5639  06CB  01BB               	clrf	___flmul@sign
  5640  06CC  2EE7               	goto	l763
  5641  06CD                     l3268:
  5642  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  5643  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  5644  06CF  0846               	movf	___flmul@temp,w
  5645  06D0  00B6               	movwf	??___flmul
  5646  06D1  0836               	movf	??___flmul,w
  5647  06D2  00C1               	movwf	___flmul@bexp
  5648  06D3  30FF               	movlw	255
  5649  06D4  05C2               	andwf	___flmul@prod,f
  5650  06D5  30FF               	movlw	255
  5651  06D6  05C3               	andwf	___flmul@prod+1,f
  5652  06D7  307F               	movlw	127
  5653  06D8  05C4               	andwf	___flmul@prod+2,f
  5654  06D9  3000               	movlw	0
  5655  06DA  05C5               	andwf	___flmul@prod+3,f
  5656  06DB                     l3270:
  5657  06DB  1C41               	btfss	___flmul@bexp,0
  5658  06DC  2EDE               	goto	u4041
  5659  06DD  2EDF               	goto	u4040
  5660  06DE                     u4041:
  5661  06DE  2EE0               	goto	l3274
  5662  06DF                     u4040:
  5663  06DF                     l3272:
  5664  06DF  17C4               	bsf	___flmul@prod+2,7
  5665  06E0                     l3274:
  5666  06E0  0841               	movf	___flmul@bexp,w
  5667  06E1  00B6               	movwf	??___flmul
  5668  06E2  1003               	clrc
  5669  06E3  0C36               	rrf	??___flmul,w
  5670  06E4  00B7               	movwf	??___flmul+1
  5671  06E5  0837               	movf	??___flmul+1,w
  5672  06E6  00C5               	movwf	___flmul@prod+3
  5673  06E7                     l763:
  5674  06E7  083B               	movf	___flmul@sign,w
  5675  06E8  00B6               	movwf	??___flmul
  5676  06E9  0836               	movf	??___flmul,w
  5677  06EA  04C5               	iorwf	___flmul@prod+3,f
  5678  06EB                     l3276:
  5679  06EB  0845               	movf	___flmul@prod+3,w
  5680  06EC  00B1               	movwf	?___flmul+3
  5681  06ED  0844               	movf	___flmul@prod+2,w
  5682  06EE  00B0               	movwf	?___flmul+2
  5683  06EF  0843               	movf	___flmul@prod+1,w
  5684  06F0  00AF               	movwf	?___flmul+1
  5685  06F1  0842               	movf	___flmul@prod,w
  5686  06F2  00AE               	movwf	?___flmul
  5687  06F3                     l751:
  5688  06F3  0008               	return
  5689  06F4                     __end_of___flmul:
  5690                           
  5691                           	psect	text22
  5692  09ED                     __ptext22:	
  5693 ;; *************** function __Umul8_16 *****************
  5694 ;; Defined at:
  5695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  multiplier      1    wreg     unsigned char 
  5698 ;;  multiplicand    1    4[COMMON] unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  multiplier      1    6[BANK0 ] unsigned char 
  5701 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  5702 ;;  product         2    2[BANK0 ] unsigned int 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2    4[COMMON] unsigned int 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5712 ;;      Params:         2       0       0       0       0
  5713 ;;      Locals:         0       5       0       0       0
  5714 ;;      Temps:          0       2       0       0       0
  5715 ;;      Totals:         2       7       0       0       0
  5716 ;;Total ram usage:        9 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    2
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		___flmul
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function __Umul8_16
  5728  09ED                     __Umul8_16:
  5729                           
  5730                           ;incstack = 0
  5731                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5732                           ;__Umul8_16@multiplier stored from wreg
  5733  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  5734  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  5735  09EF  00A6               	movwf	__Umul8_16@multiplier
  5736  09F0                     l2878:
  5737  09F0  01A2               	clrf	__Umul8_16@product
  5738  09F1  01A3               	clrf	__Umul8_16@product+1
  5739  09F2                     l2880:
  5740  09F2  0874               	movf	__Umul8_16@multiplicand,w
  5741  09F3  00A0               	movwf	??__Umul8_16
  5742  09F4  01A1               	clrf	??__Umul8_16+1
  5743  09F5  0820               	movf	??__Umul8_16,w
  5744  09F6  00A4               	movwf	__Umul8_16@word_mpld
  5745  09F7  0821               	movf	??__Umul8_16+1,w
  5746  09F8  00A5               	movwf	__Umul8_16@word_mpld+1
  5747  09F9                     l2882:
  5748  09F9  1C26               	btfss	__Umul8_16@multiplier,0
  5749  09FA  29FC               	goto	u3241
  5750  09FB  29FD               	goto	u3240
  5751  09FC                     u3241:
  5752  09FC  2A03               	goto	l770
  5753  09FD                     u3240:
  5754  09FD                     l2884:
  5755  09FD  0824               	movf	__Umul8_16@word_mpld,w
  5756  09FE  07A2               	addwf	__Umul8_16@product,f
  5757  09FF  1803               	skipnc
  5758  0A00  0AA3               	incf	__Umul8_16@product+1,f
  5759  0A01  0825               	movf	__Umul8_16@word_mpld+1,w
  5760  0A02  07A3               	addwf	__Umul8_16@product+1,f
  5761  0A03                     l770:
  5762  0A03  3001               	movlw	1
  5763  0A04                     u3255:
  5764  0A04  1003               	clrc
  5765  0A05  0DA4               	rlf	__Umul8_16@word_mpld,f
  5766  0A06  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  5767  0A07  3EFF               	addlw	-1
  5768  0A08  1D03               	skipz
  5769  0A09  2A04               	goto	u3255
  5770  0A0A  1003               	clrc
  5771  0A0B  0CA6               	rrf	__Umul8_16@multiplier,f
  5772  0A0C                     l2886:
  5773  0A0C  0826               	movf	__Umul8_16@multiplier,w
  5774  0A0D  1D03               	btfss	3,2
  5775  0A0E  2A10               	goto	u3261
  5776  0A0F  2A11               	goto	u3260
  5777  0A10                     u3261:
  5778  0A10  29F9               	goto	l2882
  5779  0A11                     u3260:
  5780  0A11                     l2888:
  5781  0A11  0823               	movf	__Umul8_16@product+1,w
  5782  0A12  00F5               	movwf	?__Umul8_16+1
  5783  0A13  0822               	movf	__Umul8_16@product,w
  5784  0A14  00F4               	movwf	?__Umul8_16
  5785  0A15                     l772:
  5786  0A15  0008               	return
  5787  0A16                     __end_of__Umul8_16:
  5788                           
  5789                           	psect	text23
  5790  0E23                     __ptext23:	
  5791 ;; *************** function ___fldiv *****************
  5792 ;; Defined at:
  5793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  a               4   40[BANK0 ] unsigned int 
  5796 ;;  b               4   44[BANK0 ] unsigned int 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  grs             4   60[BANK0 ] unsigned long 
  5799 ;;  rem             4   53[BANK0 ] unsigned long 
  5800 ;;  new_exp         2   58[BANK0 ] int 
  5801 ;;  aexp            1   65[BANK0 ] unsigned char 
  5802 ;;  bexp            1   64[BANK0 ] unsigned char 
  5803 ;;  sign            1   57[BANK0 ] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  4   40[BANK0 ] unsigned char 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0, btemp+1
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5813 ;;      Params:         0       8       0       0       0
  5814 ;;      Locals:         0      13       0       0       0
  5815 ;;      Temps:          0       5       0       0       0
  5816 ;;      Totals:         0      26       0       0       0
  5817 ;;Total ram usage:       26 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    2
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_ADC
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function ___fldiv
  5829  0E23                     ___fldiv:
  5830  0E23                     l2304:	
  5831                           ;incstack = 0
  5832                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5833                           
  5834  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0E25  084F               	movf	___fldiv@b+3,w
  5837  0E26  3980               	andlw	128
  5838  0E27  00D0               	movwf	??___fldiv
  5839  0E28  0850               	movf	??___fldiv,w
  5840  0E29  00D9               	movwf	___fldiv@sign
  5841  0E2A                     l2306:
  5842  0E2A  084F               	movf	___fldiv@b+3,w
  5843  0E2B  00D0               	movwf	??___fldiv
  5844  0E2C  0750               	addwf	??___fldiv,w
  5845  0E2D  00D1               	movwf	??___fldiv+1
  5846  0E2E  0851               	movf	??___fldiv+1,w
  5847  0E2F  00E0               	movwf	___fldiv@bexp
  5848  0E30                     l2308:
  5849  0E30  1FCE               	btfss	___fldiv@b+2,7
  5850  0E31  2E33               	goto	u2321
  5851  0E32  2E34               	goto	u2320
  5852  0E33                     u2321:
  5853  0E33  2E35               	goto	l2312
  5854  0E34                     u2320:
  5855  0E34                     l2310:
  5856  0E34  1460               	bsf	___fldiv@bexp,0
  5857  0E35                     l2312:
  5858  0E35  0860               	movf	___fldiv@bexp,w
  5859  0E36  1903               	btfsc	3,2
  5860  0E37  2E39               	goto	u2331
  5861  0E38  2E3A               	goto	u2330
  5862  0E39                     u2331:
  5863  0E39  2E4A               	goto	l2322
  5864  0E3A                     u2330:
  5865  0E3A                     l2314:
  5866  0E3A  0A60               	incf	___fldiv@bexp,w
  5867  0E3B  1D03               	btfss	3,2
  5868  0E3C  2E3E               	goto	u2341
  5869  0E3D  2E3F               	goto	u2340
  5870  0E3E                     u2341:
  5871  0E3E  2E47               	goto	l2318
  5872  0E3F                     u2340:
  5873  0E3F                     l2316:
  5874  0E3F  3000               	movlw	0
  5875  0E40  00CF               	movwf	___fldiv@b+3
  5876  0E41  3000               	movlw	0
  5877  0E42  00CE               	movwf	___fldiv@b+2
  5878  0E43  3000               	movlw	0
  5879  0E44  00CD               	movwf	___fldiv@b+1
  5880  0E45  3000               	movlw	0
  5881  0E46  00CC               	movwf	___fldiv@b
  5882  0E47                     l2318:
  5883  0E47  17CE               	bsf	___fldiv@b+2,7
  5884  0E48                     l2320:
  5885  0E48  01CF               	clrf	___fldiv@b+3
  5886  0E49  2E52               	goto	l2324
  5887  0E4A                     l2322:
  5888  0E4A  3000               	movlw	0
  5889  0E4B  00CF               	movwf	___fldiv@b+3
  5890  0E4C  3000               	movlw	0
  5891  0E4D  00CE               	movwf	___fldiv@b+2
  5892  0E4E  3000               	movlw	0
  5893  0E4F  00CD               	movwf	___fldiv@b+1
  5894  0E50  3000               	movlw	0
  5895  0E51  00CC               	movwf	___fldiv@b
  5896  0E52                     l2324:
  5897  0E52  084B               	movf	___fldiv@a+3,w
  5898  0E53  3980               	andlw	128
  5899  0E54  00D0               	movwf	??___fldiv
  5900  0E55  0850               	movf	??___fldiv,w
  5901  0E56  06D9               	xorwf	___fldiv@sign,f
  5902  0E57                     l2326:
  5903  0E57  084B               	movf	___fldiv@a+3,w
  5904  0E58  00D0               	movwf	??___fldiv
  5905  0E59  0750               	addwf	??___fldiv,w
  5906  0E5A  00D1               	movwf	??___fldiv+1
  5907  0E5B  0851               	movf	??___fldiv+1,w
  5908  0E5C  00E1               	movwf	___fldiv@aexp
  5909  0E5D                     l2328:
  5910  0E5D  1FCA               	btfss	___fldiv@a+2,7
  5911  0E5E  2E60               	goto	u2351
  5912  0E5F  2E61               	goto	u2350
  5913  0E60                     u2351:
  5914  0E60  2E62               	goto	l2332
  5915  0E61                     u2350:
  5916  0E61                     l2330:
  5917  0E61  1461               	bsf	___fldiv@aexp,0
  5918  0E62                     l2332:
  5919  0E62  0861               	movf	___fldiv@aexp,w
  5920  0E63  1903               	btfsc	3,2
  5921  0E64  2E66               	goto	u2361
  5922  0E65  2E67               	goto	u2360
  5923  0E66                     u2361:
  5924  0E66  2E77               	goto	l2342
  5925  0E67                     u2360:
  5926  0E67                     l2334:
  5927  0E67  0A61               	incf	___fldiv@aexp,w
  5928  0E68  1D03               	btfss	3,2
  5929  0E69  2E6B               	goto	u2371
  5930  0E6A  2E6C               	goto	u2370
  5931  0E6B                     u2371:
  5932  0E6B  2E74               	goto	l2338
  5933  0E6C                     u2370:
  5934  0E6C                     l2336:
  5935  0E6C  3000               	movlw	0
  5936  0E6D  00CB               	movwf	___fldiv@a+3
  5937  0E6E  3000               	movlw	0
  5938  0E6F  00CA               	movwf	___fldiv@a+2
  5939  0E70  3000               	movlw	0
  5940  0E71  00C9               	movwf	___fldiv@a+1
  5941  0E72  3000               	movlw	0
  5942  0E73  00C8               	movwf	___fldiv@a
  5943  0E74                     l2338:
  5944  0E74  17CA               	bsf	___fldiv@a+2,7
  5945  0E75                     l2340:
  5946  0E75  01CB               	clrf	___fldiv@a+3
  5947  0E76  2E7F               	goto	l711
  5948  0E77                     l2342:
  5949  0E77  3000               	movlw	0
  5950  0E78  00CB               	movwf	___fldiv@a+3
  5951  0E79  3000               	movlw	0
  5952  0E7A  00CA               	movwf	___fldiv@a+2
  5953  0E7B  3000               	movlw	0
  5954  0E7C  00C9               	movwf	___fldiv@a+1
  5955  0E7D  3000               	movlw	0
  5956  0E7E  00C8               	movwf	___fldiv@a
  5957  0E7F                     l711:
  5958  0E7F  084B               	movf	___fldiv@a+3,w
  5959  0E80  044A               	iorwf	___fldiv@a+2,w
  5960  0E81  0449               	iorwf	___fldiv@a+1,w
  5961  0E82  0448               	iorwf	___fldiv@a,w
  5962  0E83  1D03               	skipz
  5963  0E84  2E86               	goto	u2381
  5964  0E85  2E87               	goto	u2380
  5965  0E86                     u2381:
  5966  0E86  2EA0               	goto	l2352
  5967  0E87                     u2380:
  5968  0E87                     l2344:
  5969  0E87  3000               	movlw	0
  5970  0E88  00CF               	movwf	___fldiv@b+3
  5971  0E89  3000               	movlw	0
  5972  0E8A  00CE               	movwf	___fldiv@b+2
  5973  0E8B  3000               	movlw	0
  5974  0E8C  00CD               	movwf	___fldiv@b+1
  5975  0E8D  3000               	movlw	0
  5976  0E8E  00CC               	movwf	___fldiv@b
  5977  0E8F  3080               	movlw	128
  5978  0E90  04CE               	iorwf	___fldiv@b+2,f
  5979  0E91  307F               	movlw	127
  5980  0E92  04CF               	iorwf	___fldiv@b+3,f
  5981  0E93                     l2346:
  5982  0E93  0859               	movf	___fldiv@sign,w
  5983  0E94  00D0               	movwf	??___fldiv
  5984  0E95  0850               	movf	??___fldiv,w
  5985  0E96  04CF               	iorwf	___fldiv@b+3,f
  5986  0E97                     l2348:
  5987  0E97  084F               	movf	___fldiv@b+3,w
  5988  0E98  00CB               	movwf	?___fldiv+3
  5989  0E99  084E               	movf	___fldiv@b+2,w
  5990  0E9A  00CA               	movwf	?___fldiv+2
  5991  0E9B  084D               	movf	___fldiv@b+1,w
  5992  0E9C  00C9               	movwf	?___fldiv+1
  5993  0E9D  084C               	movf	___fldiv@b,w
  5994  0E9E  00C8               	movwf	?___fldiv
  5995  0E9F  2FFF               	goto	l713
  5996  0EA0                     l2352:
  5997  0EA0  0860               	movf	___fldiv@bexp,w
  5998  0EA1  1D03               	btfss	3,2
  5999  0EA2  2EA4               	goto	u2391
  6000  0EA3  2EA5               	goto	u2390
  6001  0EA4                     u2391:
  6002  0EA4  2EAE               	goto	l2358
  6003  0EA5                     u2390:
  6004  0EA5                     l2354:
  6005  0EA5  3000               	movlw	0
  6006  0EA6  00CB               	movwf	?___fldiv+3
  6007  0EA7  3000               	movlw	0
  6008  0EA8  00CA               	movwf	?___fldiv+2
  6009  0EA9  3000               	movlw	0
  6010  0EAA  00C9               	movwf	?___fldiv+1
  6011  0EAB  3000               	movlw	0
  6012  0EAC  00C8               	movwf	?___fldiv
  6013  0EAD  2FFF               	goto	l713
  6014  0EAE                     l2358:
  6015  0EAE  0860               	movf	___fldiv@bexp,w
  6016  0EAF  00D0               	movwf	??___fldiv
  6017  0EB0  01D1               	clrf	??___fldiv+1
  6018  0EB1  0851               	movf	??___fldiv+1,w
  6019  0EB2  00D3               	movwf	??___fldiv+3
  6020  0EB3  0861               	movf	___fldiv@aexp,w
  6021  0EB4  0250               	subwf	??___fldiv,w
  6022  0EB5  00D2               	movwf	??___fldiv+2
  6023  0EB6  1C03               	skipc
  6024  0EB7  03D3               	decf	??___fldiv+3,f
  6025  0EB8  0852               	movf	??___fldiv+2,w
  6026  0EB9  3E7F               	addlw	127
  6027  0EBA  00DA               	movwf	___fldiv@new_exp
  6028  0EBB  0853               	movf	??___fldiv+3,w
  6029  0EBC  1803               	skipnc
  6030  0EBD  3E01               	addlw	1
  6031  0EBE  3E00               	addlw	0
  6032  0EBF  00DB               	movwf	___fldiv@new_exp+1
  6033  0EC0                     l2360:
  6034  0EC0  084F               	movf	___fldiv@b+3,w
  6035  0EC1  00D8               	movwf	___fldiv@rem+3
  6036  0EC2  084E               	movf	___fldiv@b+2,w
  6037  0EC3  00D7               	movwf	___fldiv@rem+2
  6038  0EC4  084D               	movf	___fldiv@b+1,w
  6039  0EC5  00D6               	movwf	___fldiv@rem+1
  6040  0EC6  084C               	movf	___fldiv@b,w
  6041  0EC7  00D5               	movwf	___fldiv@rem
  6042  0EC8                     l2362:
  6043  0EC8  3000               	movlw	0
  6044  0EC9  00CF               	movwf	___fldiv@b+3
  6045  0ECA  3000               	movlw	0
  6046  0ECB  00CE               	movwf	___fldiv@b+2
  6047  0ECC  3000               	movlw	0
  6048  0ECD  00CD               	movwf	___fldiv@b+1
  6049  0ECE  3000               	movlw	0
  6050  0ECF  00CC               	movwf	___fldiv@b
  6051  0ED0                     l2364:
  6052  0ED0  3000               	movlw	0
  6053  0ED1  00DF               	movwf	___fldiv@grs+3
  6054  0ED2  3000               	movlw	0
  6055  0ED3  00DE               	movwf	___fldiv@grs+2
  6056  0ED4  3000               	movlw	0
  6057  0ED5  00DD               	movwf	___fldiv@grs+1
  6058  0ED6  3000               	movlw	0
  6059  0ED7  00DC               	movwf	___fldiv@grs
  6060  0ED8                     l2366:
  6061  0ED8  01E1               	clrf	___fldiv@aexp
  6062  0ED9  2F24               	goto	l2386
  6063  0EDA                     l2368:
  6064  0EDA  0861               	movf	___fldiv@aexp,w
  6065  0EDB  1903               	btfsc	3,2
  6066  0EDC  2EDE               	goto	u2401
  6067  0EDD  2EDF               	goto	u2400
  6068  0EDE                     u2401:
  6069  0EDE  2EFF               	goto	l2378
  6070  0EDF                     u2400:
  6071  0EDF                     l2370:
  6072  0EDF  3001               	movlw	1
  6073  0EE0  00D0               	movwf	??___fldiv
  6074  0EE1                     u2415:
  6075  0EE1  1003               	clrc
  6076  0EE2  0DD5               	rlf	___fldiv@rem,f
  6077  0EE3  0DD6               	rlf	___fldiv@rem+1,f
  6078  0EE4  0DD7               	rlf	___fldiv@rem+2,f
  6079  0EE5  0DD8               	rlf	___fldiv@rem+3,f
  6080  0EE6  0BD0               	decfsz	??___fldiv,f
  6081  0EE7  2EE1               	goto	u2415
  6082  0EE8  3001               	movlw	1
  6083  0EE9  00D0               	movwf	??___fldiv
  6084  0EEA                     u2425:
  6085  0EEA  1003               	clrc
  6086  0EEB  0DCC               	rlf	___fldiv@b,f
  6087  0EEC  0DCD               	rlf	___fldiv@b+1,f
  6088  0EED  0DCE               	rlf	___fldiv@b+2,f
  6089  0EEE  0DCF               	rlf	___fldiv@b+3,f
  6090  0EEF  0BD0               	decfsz	??___fldiv,f
  6091  0EF0  2EEA               	goto	u2425
  6092  0EF1                     l2372:
  6093  0EF1  1FDF               	btfss	___fldiv@grs+3,7
  6094  0EF2  2EF4               	goto	u2431
  6095  0EF3  2EF5               	goto	u2430
  6096  0EF4                     u2431:
  6097  0EF4  2EF6               	goto	l2376
  6098  0EF5                     u2430:
  6099  0EF5                     l2374:
  6100  0EF5  144C               	bsf	___fldiv@b,0
  6101  0EF6                     l2376:
  6102  0EF6  3001               	movlw	1
  6103  0EF7  00D0               	movwf	??___fldiv
  6104  0EF8                     u2445:
  6105  0EF8  1003               	clrc
  6106  0EF9  0DDC               	rlf	___fldiv@grs,f
  6107  0EFA  0DDD               	rlf	___fldiv@grs+1,f
  6108  0EFB  0DDE               	rlf	___fldiv@grs+2,f
  6109  0EFC  0DDF               	rlf	___fldiv@grs+3,f
  6110  0EFD  0BD0               	decfsz	??___fldiv,f
  6111  0EFE  2EF8               	goto	u2445
  6112  0EFF                     l2378:
  6113  0EFF  084B               	movf	___fldiv@a+3,w
  6114  0F00  0258               	subwf	___fldiv@rem+3,w
  6115  0F01  1D03               	skipz
  6116  0F02  2F0D               	goto	u2455
  6117  0F03  084A               	movf	___fldiv@a+2,w
  6118  0F04  0257               	subwf	___fldiv@rem+2,w
  6119  0F05  1D03               	skipz
  6120  0F06  2F0D               	goto	u2455
  6121  0F07  0849               	movf	___fldiv@a+1,w
  6122  0F08  0256               	subwf	___fldiv@rem+1,w
  6123  0F09  1D03               	skipz
  6124  0F0A  2F0D               	goto	u2455
  6125  0F0B  0848               	movf	___fldiv@a,w
  6126  0F0C  0255               	subwf	___fldiv@rem,w
  6127  0F0D                     u2455:
  6128  0F0D  1C03               	skipc
  6129  0F0E  2F10               	goto	u2451
  6130  0F0F  2F11               	goto	u2450
  6131  0F10                     u2451:
  6132  0F10  2F20               	goto	l2384
  6133  0F11                     u2450:
  6134  0F11                     l2380:
  6135  0F11  175F               	bsf	___fldiv@grs+3,6
  6136  0F12                     l2382:
  6137  0F12  0848               	movf	___fldiv@a,w
  6138  0F13  02D5               	subwf	___fldiv@rem,f
  6139  0F14  0849               	movf	___fldiv@a+1,w
  6140  0F15  1C03               	skipc
  6141  0F16  0F49               	incfsz	___fldiv@a+1,w
  6142  0F17  02D6               	subwf	___fldiv@rem+1,f
  6143  0F18  084A               	movf	___fldiv@a+2,w
  6144  0F19  1C03               	skipc
  6145  0F1A  0F4A               	incfsz	___fldiv@a+2,w
  6146  0F1B  02D7               	subwf	___fldiv@rem+2,f
  6147  0F1C  084B               	movf	___fldiv@a+3,w
  6148  0F1D  1C03               	skipc
  6149  0F1E  0F4B               	incfsz	___fldiv@a+3,w
  6150  0F1F  02D8               	subwf	___fldiv@rem+3,f
  6151  0F20                     l2384:
  6152  0F20  3001               	movlw	1
  6153  0F21  00D0               	movwf	??___fldiv
  6154  0F22  0850               	movf	??___fldiv,w
  6155  0F23  07E1               	addwf	___fldiv@aexp,f
  6156  0F24                     l2386:
  6157  0F24  301A               	movlw	26
  6158  0F25  0261               	subwf	___fldiv@aexp,w
  6159  0F26  1C03               	skipc
  6160  0F27  2F29               	goto	u2461
  6161  0F28  2F2A               	goto	u2460
  6162  0F29                     u2461:
  6163  0F29  2EDA               	goto	l2368
  6164  0F2A                     u2460:
  6165  0F2A                     l2388:
  6166  0F2A  0858               	movf	___fldiv@rem+3,w
  6167  0F2B  0457               	iorwf	___fldiv@rem+2,w
  6168  0F2C  0456               	iorwf	___fldiv@rem+1,w
  6169  0F2D  0455               	iorwf	___fldiv@rem,w
  6170  0F2E  1903               	skipnz
  6171  0F2F  2F31               	goto	u2471
  6172  0F30  2F32               	goto	u2470
  6173  0F31                     u2471:
  6174  0F31  2F51               	goto	l2402
  6175  0F32                     u2470:
  6176  0F32                     l2390:
  6177  0F32  145C               	bsf	___fldiv@grs,0
  6178  0F33  2F51               	goto	l2402
  6179  0F34                     l2392:
  6180  0F34  3001               	movlw	1
  6181  0F35  00D0               	movwf	??___fldiv
  6182  0F36                     u2485:
  6183  0F36  1003               	clrc
  6184  0F37  0DCC               	rlf	___fldiv@b,f
  6185  0F38  0DCD               	rlf	___fldiv@b+1,f
  6186  0F39  0DCE               	rlf	___fldiv@b+2,f
  6187  0F3A  0DCF               	rlf	___fldiv@b+3,f
  6188  0F3B  0BD0               	decfsz	??___fldiv,f
  6189  0F3C  2F36               	goto	u2485
  6190  0F3D                     l2394:
  6191  0F3D  1FDF               	btfss	___fldiv@grs+3,7
  6192  0F3E  2F40               	goto	u2491
  6193  0F3F  2F41               	goto	u2490
  6194  0F40                     u2491:
  6195  0F40  2F42               	goto	l2398
  6196  0F41                     u2490:
  6197  0F41                     l2396:
  6198  0F41  144C               	bsf	___fldiv@b,0
  6199  0F42                     l2398:
  6200  0F42  3001               	movlw	1
  6201  0F43  00D0               	movwf	??___fldiv
  6202  0F44                     u2505:
  6203  0F44  1003               	clrc
  6204  0F45  0DDC               	rlf	___fldiv@grs,f
  6205  0F46  0DDD               	rlf	___fldiv@grs+1,f
  6206  0F47  0DDE               	rlf	___fldiv@grs+2,f
  6207  0F48  0DDF               	rlf	___fldiv@grs+3,f
  6208  0F49  0BD0               	decfsz	??___fldiv,f
  6209  0F4A  2F44               	goto	u2505
  6210  0F4B                     l2400:
  6211  0F4B  30FF               	movlw	255
  6212  0F4C  07DA               	addwf	___fldiv@new_exp,f
  6213  0F4D  1803               	skipnc
  6214  0F4E  0ADB               	incf	___fldiv@new_exp+1,f
  6215  0F4F  30FF               	movlw	255
  6216  0F50  07DB               	addwf	___fldiv@new_exp+1,f
  6217  0F51                     l2402:
  6218  0F51  1FCE               	btfss	___fldiv@b+2,7
  6219  0F52  2F54               	goto	u2511
  6220  0F53  2F55               	goto	u2510
  6221  0F54                     u2511:
  6222  0F54  2F34               	goto	l2392
  6223  0F55                     u2510:
  6224  0F55                     l2404:
  6225  0F55  01E1               	clrf	___fldiv@aexp
  6226  0F56                     l2406:
  6227  0F56  1FDF               	btfss	___fldiv@grs+3,7
  6228  0F57  2F59               	goto	u2521
  6229  0F58  2F5A               	goto	u2520
  6230  0F59                     u2521:
  6231  0F59  2F76               	goto	l2414
  6232  0F5A                     u2520:
  6233  0F5A                     l2408:
  6234  0F5A  30FF               	movlw	255
  6235  0F5B  055C               	andwf	___fldiv@grs,w
  6236  0F5C  00D0               	movwf	??___fldiv
  6237  0F5D  30FF               	movlw	255
  6238  0F5E  055D               	andwf	___fldiv@grs+1,w
  6239  0F5F  00D1               	movwf	??___fldiv+1
  6240  0F60  30FF               	movlw	255
  6241  0F61  055E               	andwf	___fldiv@grs+2,w
  6242  0F62  00D2               	movwf	??___fldiv+2
  6243  0F63  307F               	movlw	127
  6244  0F64  055F               	andwf	___fldiv@grs+3,w
  6245  0F65  00D3               	movwf	??___fldiv+3
  6246  0F66  0853               	movf	??___fldiv+3,w
  6247  0F67  0452               	iorwf	??___fldiv+2,w
  6248  0F68  0451               	iorwf	??___fldiv+1,w
  6249  0F69  0450               	iorwf	??___fldiv,w
  6250  0F6A  1903               	skipnz
  6251  0F6B  2F6D               	goto	u2531
  6252  0F6C  2F6E               	goto	u2530
  6253  0F6D                     u2531:
  6254  0F6D  2F71               	goto	l727
  6255  0F6E                     u2530:
  6256  0F6E                     l2410:
  6257  0F6E  01E1               	clrf	___fldiv@aexp
  6258  0F6F  0AE1               	incf	___fldiv@aexp,f
  6259  0F70  2F76               	goto	l2414
  6260  0F71                     l727:
  6261  0F71  1C4C               	btfss	___fldiv@b,0
  6262  0F72  2F74               	goto	u2541
  6263  0F73  2F75               	goto	u2540
  6264  0F74                     u2541:
  6265  0F74  2F76               	goto	l2414
  6266  0F75                     u2540:
  6267  0F75  2F6E               	goto	l2410
  6268  0F76                     l2414:
  6269  0F76  0861               	movf	___fldiv@aexp,w
  6270  0F77  1903               	btfsc	3,2
  6271  0F78  2F7A               	goto	u2551
  6272  0F79  2F7B               	goto	u2550
  6273  0F7A                     u2551:
  6274  0F7A  2FAC               	goto	l2424
  6275  0F7B                     u2550:
  6276  0F7B                     l2416:
  6277  0F7B  3001               	movlw	1
  6278  0F7C  07CC               	addwf	___fldiv@b,f
  6279  0F7D  3000               	movlw	0
  6280  0F7E  1803               	skipnc
  6281  0F7F  3001               	movlw	1
  6282  0F80  07CD               	addwf	___fldiv@b+1,f
  6283  0F81  3000               	movlw	0
  6284  0F82  1803               	skipnc
  6285  0F83  3001               	movlw	1
  6286  0F84  07CE               	addwf	___fldiv@b+2,f
  6287  0F85  3000               	movlw	0
  6288  0F86  1803               	skipnc
  6289  0F87  3001               	movlw	1
  6290  0F88  07CF               	addwf	___fldiv@b+3,f
  6291  0F89                     l2418:
  6292  0F89  1C4F               	btfss	___fldiv@b+3,0
  6293  0F8A  2F8C               	goto	u2561
  6294  0F8B  2F8D               	goto	u2560
  6295  0F8C                     u2561:
  6296  0F8C  2FAC               	goto	l2424
  6297  0F8D                     u2560:
  6298  0F8D                     l2420:
  6299  0F8D  084C               	movf	___fldiv@b,w
  6300  0F8E  00D0               	movwf	??___fldiv
  6301  0F8F  084D               	movf	___fldiv@b+1,w
  6302  0F90  00D1               	movwf	??___fldiv+1
  6303  0F91  084E               	movf	___fldiv@b+2,w
  6304  0F92  00D2               	movwf	??___fldiv+2
  6305  0F93  084F               	movf	___fldiv@b+3,w
  6306  0F94  00D3               	movwf	??___fldiv+3
  6307  0F95  3001               	movlw	1
  6308  0F96  00D4               	movwf	??___fldiv+4
  6309  0F97                     u2575:
  6310  0F97  0D53               	rlf	??___fldiv+3,w
  6311  0F98  0CD3               	rrf	??___fldiv+3,f
  6312  0F99  0CD2               	rrf	??___fldiv+2,f
  6313  0F9A  0CD1               	rrf	??___fldiv+1,f
  6314  0F9B  0CD0               	rrf	??___fldiv,f
  6315  0F9C                     u2570:
  6316  0F9C  0BD4               	decfsz	??___fldiv+4,f
  6317  0F9D  2F97               	goto	u2575
  6318  0F9E  0853               	movf	??___fldiv+3,w
  6319  0F9F  00CF               	movwf	___fldiv@b+3
  6320  0FA0  0852               	movf	??___fldiv+2,w
  6321  0FA1  00CE               	movwf	___fldiv@b+2
  6322  0FA2  0851               	movf	??___fldiv+1,w
  6323  0FA3  00CD               	movwf	___fldiv@b+1
  6324  0FA4  0850               	movf	??___fldiv,w
  6325  0FA5  00CC               	movwf	___fldiv@b
  6326  0FA6                     l2422:
  6327  0FA6  3001               	movlw	1
  6328  0FA7  07DA               	addwf	___fldiv@new_exp,f
  6329  0FA8  1803               	skipnc
  6330  0FA9  0ADB               	incf	___fldiv@new_exp+1,f
  6331  0FAA  3000               	movlw	0
  6332  0FAB  07DB               	addwf	___fldiv@new_exp+1,f
  6333  0FAC                     l2424:
  6334  0FAC  085B               	movf	___fldiv@new_exp+1,w
  6335  0FAD  3A80               	xorlw	128
  6336  0FAE  00FF               	movwf	btemp+1
  6337  0FAF  3080               	movlw	128
  6338  0FB0  027F               	subwf	btemp+1,w
  6339  0FB1  1D03               	skipz
  6340  0FB2  2FB5               	goto	u2585
  6341  0FB3  30FF               	movlw	255
  6342  0FB4  025A               	subwf	___fldiv@new_exp,w
  6343  0FB5                     u2585:
  6344  0FB5  1C03               	skipc
  6345  0FB6  2FB8               	goto	u2581
  6346  0FB7  2FB9               	goto	u2580
  6347  0FB8                     u2581:
  6348  0FB8  2FC7               	goto	l2428
  6349  0FB9                     u2580:
  6350  0FB9                     l2426:
  6351  0FB9  30FF               	movlw	255
  6352  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0FBC  00DA               	movwf	___fldiv@new_exp
  6355  0FBD  3000               	movlw	0
  6356  0FBE  00DB               	movwf	___fldiv@new_exp+1
  6357  0FBF  3000               	movlw	0
  6358  0FC0  00CF               	movwf	___fldiv@b+3
  6359  0FC1  3000               	movlw	0
  6360  0FC2  00CE               	movwf	___fldiv@b+2
  6361  0FC3  3000               	movlw	0
  6362  0FC4  00CD               	movwf	___fldiv@b+1
  6363  0FC5  3000               	movlw	0
  6364  0FC6  00CC               	movwf	___fldiv@b
  6365  0FC7                     l2428:
  6366  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  6368  0FC9  085B               	movf	___fldiv@new_exp+1,w
  6369  0FCA  3A80               	xorlw	128
  6370  0FCB  00FF               	movwf	btemp+1
  6371  0FCC  3080               	movlw	128
  6372  0FCD  027F               	subwf	btemp+1,w
  6373  0FCE  1D03               	skipz
  6374  0FCF  2FD2               	goto	u2595
  6375  0FD0  3001               	movlw	1
  6376  0FD1  025A               	subwf	___fldiv@new_exp,w
  6377  0FD2                     u2595:
  6378  0FD2  1803               	skipnc
  6379  0FD3  2FD5               	goto	u2591
  6380  0FD4  2FD6               	goto	u2590
  6381  0FD5                     u2591:
  6382  0FD5  2FE3               	goto	l733
  6383  0FD6                     u2590:
  6384  0FD6                     l2430:
  6385  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  6386  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  6387  0FD8  01DA               	clrf	___fldiv@new_exp
  6388  0FD9  01DB               	clrf	___fldiv@new_exp+1
  6389  0FDA                     l2432:
  6390  0FDA  3000               	movlw	0
  6391  0FDB  00CF               	movwf	___fldiv@b+3
  6392  0FDC  3000               	movlw	0
  6393  0FDD  00CE               	movwf	___fldiv@b+2
  6394  0FDE  3000               	movlw	0
  6395  0FDF  00CD               	movwf	___fldiv@b+1
  6396  0FE0  3000               	movlw	0
  6397  0FE1  00CC               	movwf	___fldiv@b
  6398  0FE2                     l2434:
  6399  0FE2  01D9               	clrf	___fldiv@sign
  6400  0FE3                     l733:
  6401  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0FE5  085A               	movf	___fldiv@new_exp,w
  6404  0FE6  00D0               	movwf	??___fldiv
  6405  0FE7  0850               	movf	??___fldiv,w
  6406  0FE8  00E0               	movwf	___fldiv@bexp
  6407  0FE9                     l2436:
  6408  0FE9  1C60               	btfss	___fldiv@bexp,0
  6409  0FEA  2FEC               	goto	u2601
  6410  0FEB  2FED               	goto	u2600
  6411  0FEC                     u2601:
  6412  0FEC  2FEF               	goto	l2440
  6413  0FED                     u2600:
  6414  0FED                     l2438:
  6415  0FED  17CE               	bsf	___fldiv@b+2,7
  6416  0FEE  2FF3               	goto	l735
  6417  0FEF                     l2440:
  6418  0FEF  307F               	movlw	127
  6419  0FF0  00D0               	movwf	??___fldiv
  6420  0FF1  0850               	movf	??___fldiv,w
  6421  0FF2  05CE               	andwf	___fldiv@b+2,f
  6422  0FF3                     l735:
  6423  0FF3  0860               	movf	___fldiv@bexp,w
  6424  0FF4  00D0               	movwf	??___fldiv
  6425  0FF5  1003               	clrc
  6426  0FF6  0C50               	rrf	??___fldiv,w
  6427  0FF7  00D1               	movwf	??___fldiv+1
  6428  0FF8  0851               	movf	??___fldiv+1,w
  6429  0FF9  00CF               	movwf	___fldiv@b+3
  6430  0FFA  0859               	movf	___fldiv@sign,w
  6431  0FFB  00D0               	movwf	??___fldiv
  6432  0FFC  0850               	movf	??___fldiv,w
  6433  0FFD  04CF               	iorwf	___fldiv@b+3,f
  6434  0FFE  2E97               	goto	l2348
  6435  0FFF                     l713:
  6436  0FFF  0008               	return
  6437  1000                     __end_of___fldiv:
  6438                           
  6439                           	psect	text24
  6440  0B0C                     __ptext24:	
  6441 ;; *************** function ___awmod *****************
  6442 ;; Defined at:
  6443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  divisor         2    8[BANK0 ] int 
  6446 ;;  dividend        2   10[BANK0 ] int 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  sign            1   13[BANK0 ] unsigned char 
  6449 ;;  counter         1   12[BANK0 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  2    8[BANK0 ] int 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6459 ;;      Params:         0       4       0       0       0
  6460 ;;      Locals:         0       2       0       0       0
  6461 ;;      Temps:          1       0       0       0       0
  6462 ;;      Totals:         1       6       0       0       0
  6463 ;;Total ram usage:        7 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    2
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_ADC
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           
  6474                           ;psect for function ___awmod
  6475  0B0C                     ___awmod:
  6476  0B0C                     l2230:	
  6477                           ;incstack = 0
  6478                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6479                           
  6480  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0B0E  01AD               	clrf	___awmod@sign
  6483  0B0F                     l2232:
  6484  0B0F  1FAB               	btfss	___awmod@dividend+1,7
  6485  0B10  2B12               	goto	u2131
  6486  0B11  2B13               	goto	u2130
  6487  0B12                     u2131:
  6488  0B12  2B1A               	goto	l2238
  6489  0B13                     u2130:
  6490  0B13                     l2234:
  6491  0B13  09AA               	comf	___awmod@dividend,f
  6492  0B14  09AB               	comf	___awmod@dividend+1,f
  6493  0B15  0AAA               	incf	___awmod@dividend,f
  6494  0B16  1903               	skipnz
  6495  0B17  0AAB               	incf	___awmod@dividend+1,f
  6496  0B18                     l2236:
  6497  0B18  01AD               	clrf	___awmod@sign
  6498  0B19  0AAD               	incf	___awmod@sign,f
  6499  0B1A                     l2238:
  6500  0B1A  1FA9               	btfss	___awmod@divisor+1,7
  6501  0B1B  2B1D               	goto	u2141
  6502  0B1C  2B1E               	goto	u2140
  6503  0B1D                     u2141:
  6504  0B1D  2B23               	goto	l2242
  6505  0B1E                     u2140:
  6506  0B1E                     l2240:
  6507  0B1E  09A8               	comf	___awmod@divisor,f
  6508  0B1F  09A9               	comf	___awmod@divisor+1,f
  6509  0B20  0AA8               	incf	___awmod@divisor,f
  6510  0B21  1903               	skipnz
  6511  0B22  0AA9               	incf	___awmod@divisor+1,f
  6512  0B23                     l2242:
  6513  0B23  0828               	movf	___awmod@divisor,w
  6514  0B24  0429               	iorwf	___awmod@divisor+1,w
  6515  0B25  1903               	btfsc	3,2
  6516  0B26  2B28               	goto	u2151
  6517  0B27  2B29               	goto	u2150
  6518  0B28                     u2151:
  6519  0B28  2B58               	goto	l2260
  6520  0B29                     u2150:
  6521  0B29                     l2244:
  6522  0B29  01AC               	clrf	___awmod@counter
  6523  0B2A  0AAC               	incf	___awmod@counter,f
  6524  0B2B  2B37               	goto	l2250
  6525  0B2C                     l2246:
  6526  0B2C  3001               	movlw	1
  6527  0B2D                     u2165:
  6528  0B2D  1003               	clrc
  6529  0B2E  0DA8               	rlf	___awmod@divisor,f
  6530  0B2F  0DA9               	rlf	___awmod@divisor+1,f
  6531  0B30  3EFF               	addlw	-1
  6532  0B31  1D03               	skipz
  6533  0B32  2B2D               	goto	u2165
  6534  0B33                     l2248:
  6535  0B33  3001               	movlw	1
  6536  0B34  00F5               	movwf	??___awmod
  6537  0B35  0875               	movf	??___awmod,w
  6538  0B36  07AC               	addwf	___awmod@counter,f
  6539  0B37                     l2250:
  6540  0B37  1FA9               	btfss	___awmod@divisor+1,7
  6541  0B38  2B3A               	goto	u2171
  6542  0B39  2B3B               	goto	u2170
  6543  0B3A                     u2171:
  6544  0B3A  2B2C               	goto	l2246
  6545  0B3B                     u2170:
  6546  0B3B                     l2252:
  6547  0B3B  0829               	movf	___awmod@divisor+1,w
  6548  0B3C  022B               	subwf	___awmod@dividend+1,w
  6549  0B3D  1D03               	skipz
  6550  0B3E  2B41               	goto	u2185
  6551  0B3F  0828               	movf	___awmod@divisor,w
  6552  0B40  022A               	subwf	___awmod@dividend,w
  6553  0B41                     u2185:
  6554  0B41  1C03               	skipc
  6555  0B42  2B44               	goto	u2181
  6556  0B43  2B45               	goto	u2180
  6557  0B44                     u2181:
  6558  0B44  2B4B               	goto	l2256
  6559  0B45                     u2180:
  6560  0B45                     l2254:
  6561  0B45  0828               	movf	___awmod@divisor,w
  6562  0B46  02AA               	subwf	___awmod@dividend,f
  6563  0B47  0829               	movf	___awmod@divisor+1,w
  6564  0B48  1C03               	skipc
  6565  0B49  03AB               	decf	___awmod@dividend+1,f
  6566  0B4A  02AB               	subwf	___awmod@dividend+1,f
  6567  0B4B                     l2256:
  6568  0B4B  3001               	movlw	1
  6569  0B4C                     u2195:
  6570  0B4C  1003               	clrc
  6571  0B4D  0CA9               	rrf	___awmod@divisor+1,f
  6572  0B4E  0CA8               	rrf	___awmod@divisor,f
  6573  0B4F  3EFF               	addlw	-1
  6574  0B50  1D03               	skipz
  6575  0B51  2B4C               	goto	u2195
  6576  0B52                     l2258:
  6577  0B52  3001               	movlw	1
  6578  0B53  02AC               	subwf	___awmod@counter,f
  6579  0B54  1D03               	btfss	3,2
  6580  0B55  2B57               	goto	u2201
  6581  0B56  2B58               	goto	u2200
  6582  0B57                     u2201:
  6583  0B57  2B3B               	goto	l2252
  6584  0B58                     u2200:
  6585  0B58                     l2260:
  6586  0B58  082D               	movf	___awmod@sign,w
  6587  0B59  1903               	btfsc	3,2
  6588  0B5A  2B5C               	goto	u2211
  6589  0B5B  2B5D               	goto	u2210
  6590  0B5C                     u2211:
  6591  0B5C  2B62               	goto	l2264
  6592  0B5D                     u2210:
  6593  0B5D                     l2262:
  6594  0B5D  09AA               	comf	___awmod@dividend,f
  6595  0B5E  09AB               	comf	___awmod@dividend+1,f
  6596  0B5F  0AAA               	incf	___awmod@dividend,f
  6597  0B60  1903               	skipnz
  6598  0B61  0AAB               	incf	___awmod@dividend+1,f
  6599  0B62                     l2264:
  6600  0B62  082B               	movf	___awmod@dividend+1,w
  6601  0B63  00A9               	movwf	?___awmod+1
  6602  0B64  082A               	movf	___awmod@dividend,w
  6603  0B65  00A8               	movwf	?___awmod
  6604  0B66                     l528:
  6605  0B66  0008               	return
  6606  0B67                     __end_of___awmod:
  6607                           
  6608                           	psect	text25
  6609  0B67                     __ptext25:	
  6610 ;; *************** function ___awdiv *****************
  6611 ;; Defined at:
  6612 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  divisor         2    0[BANK0 ] int 
  6615 ;;  dividend        2    2[BANK0 ] int 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  quotient        2    6[BANK0 ] int 
  6618 ;;  sign            1    5[BANK0 ] unsigned char 
  6619 ;;  counter         1    4[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2    0[BANK0 ] int 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6629 ;;      Params:         0       4       0       0       0
  6630 ;;      Locals:         0       4       0       0       0
  6631 ;;      Temps:          1       0       0       0       0
  6632 ;;      Totals:         1       8       0       0       0
  6633 ;;Total ram usage:        9 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    2
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_ADC
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function ___awdiv
  6645  0B67                     ___awdiv:
  6646  0B67                     l3060:	
  6647                           ;incstack = 0
  6648                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6649                           
  6650  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  6652  0B69  01A5               	clrf	___awdiv@sign
  6653  0B6A                     l3062:
  6654  0B6A  1FA1               	btfss	___awdiv@divisor+1,7
  6655  0B6B  2B6D               	goto	u3481
  6656  0B6C  2B6E               	goto	u3480
  6657  0B6D                     u3481:
  6658  0B6D  2B75               	goto	l3068
  6659  0B6E                     u3480:
  6660  0B6E                     l3064:
  6661  0B6E  09A0               	comf	___awdiv@divisor,f
  6662  0B6F  09A1               	comf	___awdiv@divisor+1,f
  6663  0B70  0AA0               	incf	___awdiv@divisor,f
  6664  0B71  1903               	skipnz
  6665  0B72  0AA1               	incf	___awdiv@divisor+1,f
  6666  0B73                     l3066:
  6667  0B73  01A5               	clrf	___awdiv@sign
  6668  0B74  0AA5               	incf	___awdiv@sign,f
  6669  0B75                     l3068:
  6670  0B75  1FA3               	btfss	___awdiv@dividend+1,7
  6671  0B76  2B78               	goto	u3491
  6672  0B77  2B79               	goto	u3490
  6673  0B78                     u3491:
  6674  0B78  2B82               	goto	l3074
  6675  0B79                     u3490:
  6676  0B79                     l3070:
  6677  0B79  09A2               	comf	___awdiv@dividend,f
  6678  0B7A  09A3               	comf	___awdiv@dividend+1,f
  6679  0B7B  0AA2               	incf	___awdiv@dividend,f
  6680  0B7C  1903               	skipnz
  6681  0B7D  0AA3               	incf	___awdiv@dividend+1,f
  6682  0B7E                     l3072:
  6683  0B7E  3001               	movlw	1
  6684  0B7F  00F4               	movwf	??___awdiv
  6685  0B80  0874               	movf	??___awdiv,w
  6686  0B81  06A5               	xorwf	___awdiv@sign,f
  6687  0B82                     l3074:
  6688  0B82  01A6               	clrf	___awdiv@quotient
  6689  0B83  01A7               	clrf	___awdiv@quotient+1
  6690  0B84                     l3076:
  6691  0B84  0820               	movf	___awdiv@divisor,w
  6692  0B85  0421               	iorwf	___awdiv@divisor+1,w
  6693  0B86  1903               	btfsc	3,2
  6694  0B87  2B89               	goto	u3501
  6695  0B88  2B8A               	goto	u3500
  6696  0B89                     u3501:
  6697  0B89  2BC1               	goto	l3096
  6698  0B8A                     u3500:
  6699  0B8A                     l3078:
  6700  0B8A  01A4               	clrf	___awdiv@counter
  6701  0B8B  0AA4               	incf	___awdiv@counter,f
  6702  0B8C  2B98               	goto	l3084
  6703  0B8D                     l3080:
  6704  0B8D  3001               	movlw	1
  6705  0B8E                     u3515:
  6706  0B8E  1003               	clrc
  6707  0B8F  0DA0               	rlf	___awdiv@divisor,f
  6708  0B90  0DA1               	rlf	___awdiv@divisor+1,f
  6709  0B91  3EFF               	addlw	-1
  6710  0B92  1D03               	skipz
  6711  0B93  2B8E               	goto	u3515
  6712  0B94                     l3082:
  6713  0B94  3001               	movlw	1
  6714  0B95  00F4               	movwf	??___awdiv
  6715  0B96  0874               	movf	??___awdiv,w
  6716  0B97  07A4               	addwf	___awdiv@counter,f
  6717  0B98                     l3084:
  6718  0B98  1FA1               	btfss	___awdiv@divisor+1,7
  6719  0B99  2B9B               	goto	u3521
  6720  0B9A  2B9C               	goto	u3520
  6721  0B9B                     u3521:
  6722  0B9B  2B8D               	goto	l3080
  6723  0B9C                     u3520:
  6724  0B9C                     l3086:
  6725  0B9C  3001               	movlw	1
  6726  0B9D                     u3535:
  6727  0B9D  1003               	clrc
  6728  0B9E  0DA6               	rlf	___awdiv@quotient,f
  6729  0B9F  0DA7               	rlf	___awdiv@quotient+1,f
  6730  0BA0  3EFF               	addlw	-1
  6731  0BA1  1D03               	skipz
  6732  0BA2  2B9D               	goto	u3535
  6733  0BA3  0821               	movf	___awdiv@divisor+1,w
  6734  0BA4  0223               	subwf	___awdiv@dividend+1,w
  6735  0BA5  1D03               	skipz
  6736  0BA6  2BA9               	goto	u3545
  6737  0BA7  0820               	movf	___awdiv@divisor,w
  6738  0BA8  0222               	subwf	___awdiv@dividend,w
  6739  0BA9                     u3545:
  6740  0BA9  1C03               	skipc
  6741  0BAA  2BAC               	goto	u3541
  6742  0BAB  2BAD               	goto	u3540
  6743  0BAC                     u3541:
  6744  0BAC  2BB4               	goto	l3092
  6745  0BAD                     u3540:
  6746  0BAD                     l3088:
  6747  0BAD  0820               	movf	___awdiv@divisor,w
  6748  0BAE  02A2               	subwf	___awdiv@dividend,f
  6749  0BAF  0821               	movf	___awdiv@divisor+1,w
  6750  0BB0  1C03               	skipc
  6751  0BB1  03A3               	decf	___awdiv@dividend+1,f
  6752  0BB2  02A3               	subwf	___awdiv@dividend+1,f
  6753  0BB3                     l3090:
  6754  0BB3  1426               	bsf	___awdiv@quotient,0
  6755  0BB4                     l3092:
  6756  0BB4  3001               	movlw	1
  6757  0BB5                     u3555:
  6758  0BB5  1003               	clrc
  6759  0BB6  0CA1               	rrf	___awdiv@divisor+1,f
  6760  0BB7  0CA0               	rrf	___awdiv@divisor,f
  6761  0BB8  3EFF               	addlw	-1
  6762  0BB9  1D03               	skipz
  6763  0BBA  2BB5               	goto	u3555
  6764  0BBB                     l3094:
  6765  0BBB  3001               	movlw	1
  6766  0BBC  02A4               	subwf	___awdiv@counter,f
  6767  0BBD  1D03               	btfss	3,2
  6768  0BBE  2BC0               	goto	u3561
  6769  0BBF  2BC1               	goto	u3560
  6770  0BC0                     u3561:
  6771  0BC0  2B9C               	goto	l3086
  6772  0BC1                     u3560:
  6773  0BC1                     l3096:
  6774  0BC1  0825               	movf	___awdiv@sign,w
  6775  0BC2  1903               	btfsc	3,2
  6776  0BC3  2BC5               	goto	u3571
  6777  0BC4  2BC6               	goto	u3570
  6778  0BC5                     u3571:
  6779  0BC5  2BCB               	goto	l3100
  6780  0BC6                     u3570:
  6781  0BC6                     l3098:
  6782  0BC6  09A6               	comf	___awdiv@quotient,f
  6783  0BC7  09A7               	comf	___awdiv@quotient+1,f
  6784  0BC8  0AA6               	incf	___awdiv@quotient,f
  6785  0BC9  1903               	skipnz
  6786  0BCA  0AA7               	incf	___awdiv@quotient+1,f
  6787  0BCB                     l3100:
  6788  0BCB  0827               	movf	___awdiv@quotient+1,w
  6789  0BCC  00A1               	movwf	?___awdiv+1
  6790  0BCD  0826               	movf	___awdiv@quotient,w
  6791  0BCE  00A0               	movwf	?___awdiv
  6792  0BCF                     l515:
  6793  0BCF  0008               	return
  6794  0BD0                     __end_of___awdiv:
  6795                           
  6796                           	psect	text26
  6797  08F6                     __ptext26:	
  6798 ;; *************** function _SerialCom *****************
  6799 ;; Defined at:
  6800 ;;		line 56 in file "adc.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6814 ;;      Params:         0       0       0       0       0
  6815 ;;      Locals:         0       0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0
  6817 ;;      Totals:         0       0       0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    2
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_main
  6825 ;;		_ADC
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           
  6830                           ;psect for function _SerialCom
  6831  08F6                     _SerialCom:
  6832  08F6                     l2050:	
  6833                           ;incstack = 0
  6834                           ; Regs used in _SerialCom: [wreg+status,2]
  6835                           
  6836                           
  6837                           ;adc.c: 58:     INTCONbits.GIE = 1;
  6838  08F6  178B               	bsf	11,7	;volatile
  6839                           
  6840                           ;adc.c: 59:     INTCONbits.PEIE = 1;
  6841  08F7  170B               	bsf	11,6	;volatile
  6842                           
  6843                           ;adc.c: 60:     PIE1bits.RCIE = 1;
  6844  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  6845  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  6846  08FA  168C               	bsf	12,5	;volatile
  6847                           
  6848                           ;adc.c: 61:     PIE1bits.TXIE = 0;
  6849  08FB  120C               	bcf	12,4	;volatile
  6850                           
  6851                           ;adc.c: 63:     PIR1bits.RCIF = 0;
  6852  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  6853  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  6854  08FE  128C               	bcf	12,5	;volatile
  6855                           
  6856                           ;adc.c: 64:     PIR1bits.TXIF = 0;
  6857  08FF  120C               	bcf	12,4	;volatile
  6858  0900                     l2052:
  6859                           
  6860                           ;adc.c: 65:     SPBRGH = 0;
  6861  0900  1683               	bsf	3,5	;RP0=1, select bank1
  6862  0901  1303               	bcf	3,6	;RP1=0, select bank1
  6863  0902  019A               	clrf	26	;volatile
  6864  0903                     l2054:
  6865                           
  6866                           ;adc.c: 66:     SPBRG = 25;
  6867  0903  3019               	movlw	25
  6868  0904  0099               	movwf	25	;volatile
  6869  0905                     l2056:
  6870                           
  6871                           ;adc.c: 67:     TXSTA = 0b00100100;
  6872  0905  3024               	movlw	36
  6873  0906  0098               	movwf	24	;volatile
  6874  0907                     l2058:
  6875                           
  6876                           ;adc.c: 68:     RCSTA = 0b10010000;
  6877  0907  3090               	movlw	144
  6878  0908  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0909  1303               	bcf	3,6	;RP1=0, select bank0
  6880  090A  0098               	movwf	24	;volatile
  6881  090B                     l2060:
  6882                           
  6883                           ;adc.c: 69:     BAUDCTLbits.BRG16 = 0;
  6884  090B  1683               	bsf	3,5	;RP0=1, select bank3
  6885  090C  1703               	bsf	3,6	;RP1=1, select bank3
  6886  090D  1187               	bcf	7,3	;volatile
  6887  090E                     l2062:
  6888                           
  6889                           ;adc.c: 70:     Contador = 0;
  6890  090E  01F8               	clrf	_Contador
  6891  090F  01F9               	clrf	_Contador+1
  6892  0910                     l2064:
  6893                           
  6894                           ;adc.c: 71:     Lectura = 0;
  6895  0910  01F6               	clrf	_Lectura
  6896  0911  01F7               	clrf	_Lectura+1
  6897  0912                     l211:
  6898  0912  0008               	return
  6899  0913                     __end_of_SerialCom:
  6900                           
  6901                           	psect	text27
  6902  0A3F                     __ptext27:	
  6903 ;; *************** function _ISR *****************
  6904 ;; Defined at:
  6905 ;;		line 87 in file "adc.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0, pclath, cstack
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6919 ;;      Params:         0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0
  6921 ;;      Temps:          4       0       0       0       0
  6922 ;;      Totals:         4       0       0       0       0
  6923 ;;Total ram usage:        4 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    1
  6926 ;; This function calls:
  6927 ;;		i1_Counter
  6928 ;; This function is called by:
  6929 ;;		Interrupt level 1
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _ISR
  6935  0A3F                     _ISR:
  6936  0A3F                     i1l1844:
  6937                           
  6938                           ;adc.c: 88:     if (PIR1bits.RCIF==1) {
  6939  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  6940  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0A41  1E8C               	btfss	12,5	;volatile
  6942  0A42  2A44               	goto	u160_21
  6943  0A43  2A45               	goto	u160_20
  6944  0A44                     u160_21:
  6945  0A44  2A55               	goto	i1l221
  6946  0A45                     u160_20:
  6947  0A45                     i1l1846:
  6948                           
  6949                           ;adc.c: 89:         Lectura = RCREG;
  6950  0A45  081A               	movf	26,w	;volatile
  6951  0A46  00F0               	movwf	??_ISR
  6952  0A47  01F1               	clrf	??_ISR+1
  6953  0A48  0870               	movf	??_ISR,w
  6954  0A49  00F6               	movwf	_Lectura
  6955  0A4A  0871               	movf	??_ISR+1,w
  6956  0A4B  00F7               	movwf	_Lectura+1
  6957  0A4C                     i1l1848:
  6958                           
  6959                           ;adc.c: 90:         Counter();
  6960  0A4C  120A  158A  2155  120A  158A  	fcall	i1_Counter
  6961  0A51                     i1l1850:
  6962                           
  6963                           ;adc.c: 91:         PIR1bits.RCIF = 0;
  6964  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  6965  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  6966  0A53  128C               	bcf	12,5	;volatile
  6967  0A54  2A62               	goto	i1l222
  6968  0A55                     i1l221:	
  6969                           ;adc.c: 93:     }
  6970                           
  6971                           
  6972                           ;adc.c: 94:     RCSTAbits.CREN = 0;
  6973  0A55  1218               	bcf	24,4	;volatile
  6974  0A56                     i1l1854:
  6975                           
  6976                           ;adc.c: 95:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6977  0A56  300D               	movlw	13
  6978  0A57  00F1               	movwf	??_ISR+1
  6979  0A58  30FB               	movlw	251
  6980  0A59  00F0               	movwf	??_ISR
  6981  0A5A                     u426_27:
  6982  0A5A  0BF0               	decfsz	??_ISR,f
  6983  0A5B  2A5A               	goto	u426_27
  6984  0A5C  0BF1               	decfsz	??_ISR+1,f
  6985  0A5D  2A5A               	goto	u426_27
  6986  0A5E  2A5F               	nop2
  6987  0A5F                     i1l1856:
  6988                           
  6989                           ;adc.c: 96:     RCSTAbits.CREN = 1;
  6990  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  6991  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  6992  0A61  1618               	bsf	24,4	;volatile
  6993  0A62                     i1l222:
  6994  0A62  0873               	movf	??_ISR+3,w
  6995  0A63  008A               	movwf	10
  6996  0A64  0E72               	swapf	??_ISR+2,w
  6997  0A65  0083               	movwf	3
  6998  0A66  0EFE               	swapf	btemp,f
  6999  0A67  0E7E               	swapf	btemp,w
  7000  0A68  0009               	retfie
  7001  0A69                     __end_of_ISR:
  7002                           
  7003                           	psect	intentry
  7004  0004                     __pintentry:	
  7005                           ;incstack = 0
  7006                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7007                           
  7008  0004                     interrupt_function:
  7009  007E                     saved_w	set	btemp
  7010  0004  00FE               	movwf	btemp
  7011  0005  0E03               	swapf	3,w
  7012  0006  00F2               	movwf	??_ISR+2
  7013  0007  080A               	movf	10,w
  7014  0008  00F3               	movwf	??_ISR+3
  7015  0009  120A  158A  2A3F   	ljmp	_ISR
  7016                           
  7017                           	psect	text28
  7018  0955                     __ptext28:	
  7019 ;; *************** function i1_Counter *****************
  7020 ;; Defined at:
  7021 ;;		line 74 in file "adc.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7035 ;;      Params:         0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0
  7038 ;;      Totals:         0       0       0       0       0
  7039 ;;Total ram usage:        0 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_ISR
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function i1_Counter
  7050  0955                     i1_Counter:
  7051  0955                     i1l1776:	
  7052                           ;incstack = 0
  7053                           ; Regs used in i1_Counter: [wreg+status,2+status,0]
  7054                           
  7055                           
  7056                           ;adc.c: 75:     if (Lectura == '+') {
  7057  0955  302B               	movlw	43
  7058  0956  0676               	xorwf	_Lectura,w
  7059  0957  0477               	iorwf	_Lectura+1,w
  7060  0958  1D03               	btfss	3,2
  7061  0959  295B               	goto	u156_21
  7062  095A  295C               	goto	u156_20
  7063  095B                     u156_21:
  7064  095B  2965               	goto	i1l1782
  7065  095C                     u156_20:
  7066  095C                     i1l1778:
  7067                           
  7068                           ;adc.c: 76:         Contador = Contador + 1;
  7069  095C  0878               	movf	_Contador,w
  7070  095D  3E01               	addlw	1
  7071  095E  00F8               	movwf	_Contador
  7072  095F  0879               	movf	_Contador+1,w
  7073  0960  1803               	skipnc
  7074  0961  3E01               	addlw	1
  7075  0962  3E00               	addlw	0
  7076  0963  00F9               	movwf	_Contador+1
  7077  0964  2979               	goto	i1l215
  7078  0965                     i1l1782:
  7079                           
  7080                           ;adc.c: 80:     if (Lectura == '-') {
  7081  0965  302D               	movlw	45
  7082  0966  0676               	xorwf	_Lectura,w
  7083  0967  0477               	iorwf	_Lectura+1,w
  7084  0968  1D03               	btfss	3,2
  7085  0969  296B               	goto	u157_21
  7086  096A  296C               	goto	u157_20
  7087  096B                     u157_21:
  7088  096B  2975               	goto	i1l1788
  7089  096C                     u157_20:
  7090  096C                     i1l1784:
  7091                           
  7092                           ;adc.c: 81:         Contador = Contador - 1;
  7093  096C  0878               	movf	_Contador,w
  7094  096D  3EFF               	addlw	255
  7095  096E  00F8               	movwf	_Contador
  7096  096F  0879               	movf	_Contador+1,w
  7097  0970  1803               	skipnc
  7098  0971  3E01               	addlw	1
  7099  0972  3EFF               	addlw	255
  7100  0973  00F9               	movwf	_Contador+1
  7101  0974  2979               	goto	i1l215
  7102  0975                     i1l1788:
  7103                           
  7104                           ;adc.c: 84:     Lectura = '0';
  7105  0975  3030               	movlw	48
  7106  0976  00F6               	movwf	_Lectura
  7107  0977  3000               	movlw	0
  7108  0978  00F7               	movwf	_Lectura+1
  7109  0979                     i1l215:
  7110  0979  0008               	return
  7111  097A                     __end_ofi1_Counter:
  7112  007E                     btemp	set	126	;btemp
  7113  007E                     wtemp0	set	126
  7114                           
  7115                           	psect	config
  7116                           
  7117                           ;Config register CONFIG1 @ 0x2007
  7118                           ;	Oscillator Selection bits
  7119                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7120                           ;	Watchdog Timer Enable bit
  7121                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7122                           ;	Power-up Timer Enable bit
  7123                           ;	PWRTE = OFF, PWRT disabled
  7124                           ;	RE3/MCLR pin function select bit
  7125                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7126                           ;	Code Protection bit
  7127                           ;	CP = OFF, Program memory code protection is disabled
  7128                           ;	Data Code Protection bit
  7129                           ;	CPD = OFF, Data memory code protection is disabled
  7130                           ;	Brown Out Reset Selection bits
  7131                           ;	BOREN = OFF, BOR disabled
  7132                           ;	Internal External Switchover bit
  7133                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7134                           ;	Fail-Safe Clock Monitor Enabled bit
  7135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7136                           ;	Low Voltage Programming Enable bit
  7137                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7138                           ;	In-Circuit Debugger Mode bit
  7139                           ;	DEBUG = 0x1, unprogrammed default
  7140  2007                     	org	8199
  7141  2007  20D4               	dw	8404
  7142                           
  7143                           ;Config register CONFIG2 @ 0x2008
  7144                           ;	Brown-out Reset Selection bit
  7145                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7146                           ;	Flash Program Memory Self Write Enable bits
  7147                           ;	WRT = OFF, Write protection off
  7148  2008                     	org	8200
  7149  2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     66      80
    BANK1            80      4      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> ContadorSend(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[3]), STR_5(CODE[3]), ContadorSend(BANK1[5]), ADCchar2C(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _ADC->___awmod
    _ADC->_strcat
    _ADC->_strcpy
    _sprintf->___bmul
    _sprintf->___lwmod
    _sprintf->_isdigit
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    ___awmod->___awdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _inicializacion->_lcd_cmd
    _ADC->___fldiv
    _sprintf->___lwmod
    _lcd_msg->_lcd_dwr
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16976
                                _ADC
                            _Counter
                          _SerialCom
                          _UART_INIT
                     _inicializacion
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       0     0      0      31
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Counter                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     4      0   16945
                                              0 BANK1      4     4      0
                          _SerialCom
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     361
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     899
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2725
                                             12 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_msg                                              2     0      2     636
                                              1 BANK0      2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (3) _lcd_dwr                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    3429
                                             21 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1900
                                             12 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3893
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              5 COMMON     1     1      0
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SerialCom                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                          i1_Counter
 ---------------------------------------------------------------------------------
 (6) i1_Counter                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _SerialCom
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _lcd_cmd
       _lcd_lat
       _lcd_ready
     _lcd_msg
       _lcd_dwr
         _lcd_lat
         _lcd_ready
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
     _strcat
     _strcpy
   _Counter
   _SerialCom
   _UART_INIT
   _inicializacion
     _lcd_cmd
       _lcd_lat
       _lcd_ready

 _ISR (ROOT)
   i1_Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 00:15:24 2021

           ___fldiv@aexp 0061             ___fldiv@bexp 0060                        pc 0002  
           ___fldiv@sign 0059           ___bmul@product 0020                       l20 088B  
                     l25 0A3E                       l17 08B1                       l34 09EC  
                     l28 08C5                       l37 0931                       _PI 00AF  
           ___awdiv@sign 0025                       fsr 0004      __Umul8_16@word_mpld 0024  
                    l106 08F5                      l211 0912                      l230 01C8  
                    l215 099E                      l227 0054                      _ADC 0028  
                    l515 0BCF                      l358 0E22                      l711 0E7F  
                    l528 0B66                      l713 0FFF                      l801 075D  
                    l634 07F5                      l555 0CA8                      l548 0CBD  
                    l644 0ACF                      l388 08DC                      l733 0FE3  
                    l821 09C4                      l558 0CBD                      l735 0FF3  
                    l727 0F71                      l751 06F3                      l815 089D  
                    l808 0779                      l809 0785                      l770 0A03  
                    l763 06E7                      l827 0C2A                      l772 0A15  
                    l844 0954                      l757 065F                      l829 0C41  
                    l838 0A93                      l795 0718                      l797 07AF  
                    _RE0 0048                      _RE1 0049                      _RE2 004A  
                    _ISR 0A3F                      _plc 00AD                      fsr0 0004  
                    indf 0000             ___awmod@sign 002D             ___flmul@aexp 003C  
           ___flmul@bexp 0041             ___flmul@sign 003B             ___flmul@temp 0046  
           ___flmul@prod 0042                     ?_ADC 0070                     ?_ISR 0070  
           ___fltol@exp1 0052                     l3000 0D3C                     l2050 08F6  
                   l3010 0D55                     l3002 0D44                     l2060 090B  
                   l2052 0900                     l3100 0BCB                     l3020 0D66  
                   l3012 0D5A                     l3004 0D48                     l2062 090E  
                   l2054 0903                     l2230 0B0C                     l2310 0E34  
                   l3110 0C58                     l3030 0D9D                     l3014 0D60  
                   l3006 0D4C                     l2064 0910                     l2056 0905  
                   l2240 0B1E                     l2232 0B0F                     l2400 0F4B  
                   l2320 0E48                     l2312 0E35                     l2304 0E23  
                   l3200 04C3                     l3120 0C7C                     l3112 0C6D  
                   l3104 0C42                     l3040 0DCB                     l3032 0DB1  
                   l3024 0D82                     l3016 0D64                     l3008 0D50  
                   l2058 0907                     l2250 0B37                     l2242 0B23  
                   l2234 0B13                     l2410 0F6E                     l2402 0F51  
                   l2330 0E61                     l2314 0E3A                     l2322 0E4A  
                   l2306 0E2A                     l3210 0536                     l3202 04D3  
                   l3114 0C6E                     l3106 0C4F                     l3042 0DFB  
                   l3034 0DB7                     l3026 0D8C                     l3050 0E1E  
                   l3060 0B67                     l2252 0B3B                     l2244 0B29  
                   l2260 0B58                     l2236 0B18                     l2420 0F8D  
                   l2404 0F55                     l2340 0E75                     l2332 0E62  
                   l2324 0E52                     l2316 0E3F                     l2308 0E30  
                   l3220 05E3                     l3212 0553                     l3204 04F0  
                   l3140 0393                     l3116 0C76                     l3300 0746  
                   l3036 0DBF                     l3028 0D9C                     l3070 0B79  
                   l3062 0B6A                     l2262 0B5D                     l2254 0B45  
                   l2246 0B2C                     l2238 0B1A                     l2430 0FD6  
                   l2422 0FA6                     l2414 0F76                     l2406 0F56  
                   l2334 0E67                     l2342 0E77                     l2326 0E57  
                   l2318 0E47                     l3230 062F                     l3222 060B  
                   l3214 0580                     l3206 0500                     l3150 03AA  
                   l3142 039A                     l3134 0C9D                     l3126 0C84  
                   l3118 0C78                     l3310 077D                     l3302 0754  
                   l3038 0DC6                     l3046 0E03                     l3080 0B8D  
                   l3072 0B7E                     l3064 0B6E                     l2264 0B62  
                   l2256 0B4B                     l2248 0B33                     l2440 0FEF  
                   l2432 0FDA                     l2416 0F7B                     l2424 0FAC  
                   l2408 0F5A                     l2360 0EC0                     l2344 0E87  
                   l2352 0EA0                     l2336 0E6C                     l2328 0E5D  
                   l3240 0644                     l3232 0630                     l3224 0614  
                   l3216 0590                     l3208 051D                     l3160 03C6  
                   l3152 03AF                     l3144 03A0                     l3136 0CAD  
                   l3128 0C96                     l3320 07A7                     l3312 0787  
                   l3304 0764                     l3048 0E0C                     l3400 0312  
                   l3090 0BB3                     l3082 0B94                     l3074 0B82  
                   l3066 0B73                     l2258 0B52                     l2434 0FE2  
                   l2426 0FB9                     l2418 0F89                     l2370 0EDF  
                   l2362 0EC8                     l2354 0EA5                     l2346 0E93  
                   l2338 0E74                     l3250 0669                     l3242 0648  
                   l3234 0639                     l3226 0622                     l3218 05BD  
                   l3170 03DB                     l3162 03CC                     l3154 03B7  
                   l3146 03A4                     l3138 0CB2                     l3314 079D  
                   l3306 076F                     l3410 0354                     l3402 031E  
                   l3330 0033                     l3092 0BB4                     l3084 0B98  
                   l3076 0B84                     l3068 0B75                     l2436 0FE9  
                   l2428 0FC7                     l2380 0F11                     l2372 0EF1  
                   l2364 0ED0                     l2348 0E97                     l3260 06A7  
                   l3252 0677                     l3244 065C                     l3228 062B  
                   l3236 063F                     l3180 03F7                     l3172 03E3  
                   l3164 03D0                     l3156 03B9                     l3148 03A5  
                   l3316 07A2                     l3308 0773                     l3420 0386  
                   l3412 035A                     l3404 032A                     l3340 0044  
                   l3332 0034                     l3324 0913                     l3094 0BBB  
                   l3086 0B9C                     l3078 0B8A                     l2438 0FED  
                   l2390 0F32                     l2382 0F12                     l2374 0EF5  
                   l2366 0ED8                     l2358 0EAE                     l3270 06DB  
                   l3262 06B2                     l3254 067B                     l3238 0643  
                   l3190 043A                     l3174 03E5                     l3166 03D1  
                   l3158 03C1                     l3318 07A6                     l3414 0365  
                   l3406 0336                     l3350 0060                     l3342 004E  
                   l3334 0037                     l3326 0028                     l1750 08DD  
                   l3430 0AD9                     l3422 0AD0                     l3088 0BAD  
                   l3096 0BC1                     l2392 0F34                     l2384 0F20  
                   l2376 0EF6                     l2368 0EDA                     l3272 06DF  
                   l3264 06C1                     l3256 0694                     l3248 0664  
                   l3192 0456                     l3184 0400                     l3176 03ED  
                   l3168 03D6                     l3280 06F7                     l3416 0370  
                   l3408 0342                     l3360 0146                     l3352 00C9  
                   l3344 0052                     l3336 0038                     l3328 002D  
                   l1760 08F2                     l1752 08E7                     l3440 0AE4  
                   l3432 0ADA                     l3424 0AD6                     l3098 0BC6  
                   l2394 0F3D                     l2378 0EFF                     l2386 0F24  
                   l3274 06E0                     l3266 06CB                     l3258 069A  
                   l3194 0482                     l3186 0410                     l3178 03F2  
                   l3282 06FC                     l1930 0A94                     l2810 0A20  
                   l2802 0A16                     l3418 037B                     l3370 019E  
                   l3362 0154                     l3354 0101                     l3346 0053  
                   l3338 0039                     l1770 0991                     l1762 097A  
                   l1754 08EA                     l3450 0AEC                     l3442 0AE5  
                   l3434 0ADE                     l3426 0AD7                     l2396 0F41  
                   l2388 0F2A                     l3276 06EB                     l3268 06CD  
                   l3196 049E                     l3188 041D                     l3292 0729  
                   l3284 0700                     l1940 0AAE                     l1932 0A9C  
                   l2900 0BF4                     l2820 0A3B                     l2812 0A21  
                   l2804 0A1A                     l3380 01C7                     l3372 01AA  
                   l3364 0178                     l3356 0114                     l3348 0058  
                   l1764 0981                     l1756 08EC                     l3460 0AF9  
                   l3452 0AED                     l3444 0AE7                     l3436 0ADF  
                   l3428 0AD8                     l2398 0F42                     l3198 04BA  
                   l3294 072E                     l3286 0710                     l2830 07B4  
                   l1942 0AB8                     l1934 0A9F                     l2910 0C26  
                   l2902 0BF8                     l2822 087D                     l2814 0A29  
                   l2806 0A1E                     l3390 0288                     l3382 01CC  
                   l3374 01B6                     l3366 0186                     l3358 0122  
                   l1774 099A                     l1758 08EE                     l3462 0AFE  
                   l3454 0AEE                     l3446 0AE8                     l3438 0AE3  
                   l3296 073B                     l3288 0720                     l2840 07CC  
                   l2832 07BA                     l1944 0ABE                     l1936 0AA6  
                   l2912 0C2E                     l2904 0BFA                     l2824 0880  
                   l2816 0A32                     l2808 0A1F                     l3392 0296  
                   l3384 01D4                     l3376 01C0                     l3368 0192  
                   l1768 098A                     l3464 0B03                     l3456 0AEF  
                   l3448 0AEB                     l3298 0742                     l2842 07DD  
                   l2834 07BD                     l2850 07F1                     l1946 0AC5  
                   l1938 0AAA                     l2914 0C35                     l2906 0C0D  
                   l2826 0888                     l2818 0A33                     l2930 08AC  
                   l2922 08A1                     l1970 089C                     l1962 088D  
                   l3394 02C0                     l3386 023D                     l3378 01C6  
                   l3458 0AF4                     l2844 07E3                     l2836 07C4  
                   l2828 07B0                     l1948 0ACB                     l2916 0C37  
                   l2908 0C20                     l2940 09A2                     l2924 08A6  
                   l2860 08BF                     l2932 09C5                     l1964 088E  
                   l3396 02D4                     l3388 0275                     l2846 07E4  
                   l2838 07C8                     l2918 0C3D                     l2950 09B6  
                   l2942 09A2                     l2926 08AA                     l2862 08C0  
                   l2854 08B5                     l2934 09C6                     l2870 08D2  
                   l1966 0894                     l3398 02FE                     l2880 09F2  
                   l2848 07EB                     l2944 09A6                     l2928 08AB  
                   l2856 08BA                     l2936 09D4                     l2872 08D4  
                   l2864 08C9                     l1968 089A                     l3496 0D31  
                   l2960 0A7E                     l2882 09F9                     l2946 09AD  
                   l2858 08BE                     l2938 09DC                     l2874 08DB  
                   l2866 08CA                     l2970 0CC1                     l2962 0A86  
                   l2954 0A6C                     l2884 09FD                     l2892 0BD3  
                   l2948 09B1                     l2868 08CE                     l2980 0CD9  
                   l2972 0CC6                     l2956 0A71                     l2964 0935  
                   l2886 0A0C                     l2878 09F0                     l2894 0BD7  
                   l2990 0D07                     l2982 0CE5                     l2974 0CCC  
                   l2958 0A75                     l2966 093A                     l2888 0A11  
                   l2896 0BEA                     l2992 0D0B                     l2984 0CE9  
                   l2976 0CD3                     l2968 0942                     l2898 0BEE  
                   l2986 0CEB                     l2994 0D1C                     l2978 0CD8  
                   l2988 0CFC                     l2998 0D1D                     STR_1 081A  
                   STR_2 0834                     STR_3 0834                     STR_4 082C  
                   STR_5 0831                     STR_6 0831                     u2200 0B58  
                   u2201 0B57                     u2210 0B5D                     u2130 0B13  
                   u2211 0B5C                     u2131 0B12                     u2140 0B1E  
                   u2141 0B1D                     u2150 0B29                     u2151 0B28  
                   u2400 0EDF                     u2320 0E34                     u4000 067B  
                   u2401 0EDE                     u2321 0E33                     u4001 067A  
                   u2170 0B3B                     u2330 0E3A                     u4010 068A  
                   u3210 07F1                     u2171 0B3A                     u2331 0E39  
                   u3211 07F0                     u2180 0B45                     u2340 0E3F  
                   u4020 06A7                     u3140 0A32                     u3300 09EC  
                   u3220 08CE                     u1540 0981                     u2181 0B44  
                   u2165 0B2D                     u2341 0E3E                     u4021 06A6  
                   u3205 07E5                     u3141 0A31                     u3301 09EB  
                   u3221 08CD                     u1541 0980                     u2510 0F55  
                   u2430 0EF5                     u2350 0E61                     u4030 06C1  
                   u4110 0763                     u3150 07BA                     u1710 0AAE  
                   u3310 09A6                     u3230 08DB                     u1550 0991  
                   u2511 0F54                     u2431 0EF4                     u2415 0EE1  
                   u2351 0E60                     u4031 06C0                     u4015 0685  
                   u4111 0762                     u3151 07B9                     u1711 0AAD  
                   u3311 09A5                     u3231 08DA                     u1551 0990  
                   u2600 0FED                     u2520 0F5A                     u2360 0E67  
                   u3240 09FD                     u4040 06DF                     u1720 0AB8  
                   u3400 0D60                     u3320 0A7D                     u4200 01CC  
                   u2185 0B41                     u2601 0FEC                     u2521 0F59  
                   u2505 0F44                     u2425 0EEA                     u2361 0E66  
                   u3241 09FC                     u4041 06DE                     u4025 06A3  
                   u4105 0755                     u1721 0AB7                     u1705 0AA0  
                   u3401 0D5F                     u3321 0A7C                     u4201 01CB  
                   u2530 0F6E                     u2450 0F11                     u2370 0E6C  
                   u4130 0773                     u4050 06FC                     u3170 07CC  
                   u3410 0D81                     u3330 0A93                     u2195 0B4C  
                   u2531 0F6D                     u2451 0F10                     u2371 0E6B  
                   u4035 06BD                     u4131 0772                     u4051 06FB  
                   u3171 07CB                     u3411 0D80                     u3331 0A92  
                   u3500 0B8A                     u2540 0F75                     u2460 0F2A  
                   u2380 0E87                     u3260 0A11                     u4140 0779  
                   u4060 0700                     u1740 0ACB                     u3420 0D8C  
                   u3340 0954                     u3501 0B89                     u2541 0F74  
                   u2461 0F29                     u2445 0EF8                     u2381 0E86  
                   u3261 0A10                     u4141 0778                     u4125 0768  
                   u4061 06FF                     u3165 07BE                     u1741 0ACA  
                   u1725 0AB4                     u3421 0D8B                     u3341 0953  
                   u2550 0F7B                     u2470 0F32                     u2390 0EA5  
                   u4150 077D                     u4070 0720                     u3190 07DD  
                   u3270 0BF4                     u1750 0894                     u3430 0D9C  
                   u3350 0CCC                     u2551 0F7A                     u2471 0F31  
                   u2455 0F0D                     u2391 0EA4                     u3255 0A04  
                   u4151 077C                     u4071 071F                     u3191 07DC  
                   u1735 0ABF                     u3271 0BF3                     u1751 0893  
                   u3431 0D9B                     u3415 0D7D                     u3351 0CCB  
                   u3520 0B9C                     u2560 0F8D                     u3600 0C7C  
                   u4160 0792                     u3280 0C26                     u1760 089A  
                   u3440 0DB1                     u3360 0CE5                     u3521 0B9B  
                   u2561 0F8C                     u3601 0C7B                     u3185 07CD  
                   u3281 0C25                     u1761 0899                     u3441 0DB0  
                   u3361 0CE4                     u4217 004A                     u2570 0F9C  
                   u2490 0F41                     u3610 0C83                     u4170 07A2  
                   u4090 0741                     u1690 0A9C                     u3290 0C3D  
                   u3450 0DBF                     u3370 0D1B                     u3515 0B8E  
                   u2491 0F40                     u3611 0C82                     u4171 07A1  
                   u4091 0740                     u3195 07D9                     u1691 0A9B  
                   u3291 0C3C                     u3451 0DBE                     u3435 0D98  
                   u3371 0D1A                     u4227 01BC                     u3540 0BAD  
                   u2580 0FB9                     u3700 03AF                     u4180 07A6  
                   u3460 0E0C                     u3380 0D4C                     u3541 0BAC  
                   u2581 0FB8                     u2485 0F36                     u3701 03AE  
                   u4181 07A5                     u4165 078D                     u4085 0733  
                   u4237 0A25                     u3461 0E0B                     u3445 0DAD  
                   u3381 0D4B                     u2590 0FD6                     u3710 03D0  
                   u3630 0C95                     u3470 0E1E                     u3390 0D5A  
                   u4190 0058                     u3535 0B9D                     u2591 0FD5  
                   u2575 0F97                     u3711 03CF                     u3631 0C94  
                   u4247 0A37                     u3471 0E1D                     u3391 0D59  
                   u4191 0057                     u3560 0BC1                     u3480 0B6E  
                   u3720 03D6                     u3640 0C9C                     u3561 0BC0  
                   u3545 0BA9                     u3481 0B6D                     u2585 0FB5  
                   u3721 03D5                     u3641 0C9B                     u3625 0C85  
                   u4257 0884                     u3570 0BC6                     u3490 0B79  
                   u3730 03DB                     u3571 0BC5                     u3555 0BB5  
                   u3491 0B78                     u2595 0FD2                     u3811 04E2  
                   u3731 03DA                     u3812 04E9                     u3740 03F2  
                   u3660 0CAD                     u3580 0C4F                     u3901 05FD  
                   u3821 050F                     u3813 04F0                     u3805 04BC  
                   u3741 03F1                     u3661 0CAC                     u3581 0C4E  
                   u3902 0604                     u3822 0516                     u3750 03F7  
                   u3670 0CB2                     u3590 0C66                     u3903 060B  
                   u3823 051D                     u3751 03F6                     u3671 0CB1  
                   u3655 0C9F                     u3680 03A4                     u3841 0545  
                   u3761 0448                     u3681 03A3                     u3930 062F  
                   u3842 054C                     u3762 044F                     u3690 03AA  
                   u3931 062E                     u3915 060D                     u3851 0572  
                   u3843 0553                     u3835 051F                     u3771 0464  
                   u3763 0456                     u3691 03A9                     u3595 0C61  
                   u3852 0579                     u3772 046B                     u3925 0624  
                   u3861 059F                     u3853 0580                     u3781 0490  
                   u3773 0472                     u3950 0643                     u3870 05C9  
                   u3862 05A6                     u3782 0497                     u3951 0642  
                   u3863 05AD                     u3791 04AC                     u3783 049E  
                   u3960 0648                     u3792 04B3                     u3961 0647  
                   u3945 0632                     u3881 05D5                     u3793 04BA  
                   u3970 065C                     u3890 05F1                     u3882 05DC  
                   u3971 065B                     u3883 05E3                     u3875 05C4  
                   u3980 0663                     u3981 0662                     u3990 0669  
                   u3991 0668                     u3895 05EC                     _main 0AD0  
                   _itoa 099F                     _test 00A0                     btemp 007E  
                   _utoa 0BD0                     start 000C          ___fldiv@new_exp 005A  
      ___bmul@multiplier 0021          __end_of_Counter 099F                    ??_ADC 00E2  
                  ??_ISR 0070                    _ADC1A 006A                    _ADC1B 0068  
                  _ADC1C 0066                    _ADC2A 0062                    _ADC2B 00B3  
                  _ADC2C 00B1            ___fltol@sign1 0051                    _ADCLA 00A9  
                  _ADCLB 00A5                    ?_main 0070          __end_of___fldiv 1000  
                  ?_itoa 0035          __end_of___awdiv 0BD0          __end_of___awmod 0B67  
        __end_of___flmul 06F4          __end_of___fltol 0CBE                    _ANSEL 0188  
                  ?_utoa 002C          ___awdiv@divisor 0020          __end_of___lwdiv 07F6  
                  i1l221 0A55                    i1l222 0A62                    i1l215 0979  
        __end_of___lwmod 0AD0          ___awdiv@counter 0024                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _TXSTA 0098       __size_of_UART_INIT 0019  
        __end_of_lcd_cmd 08B2          __end_of_lcd_lat 088C          __end_of_lcd_dwr 08C6  
        __end_of_lcd_msg 09ED          __end_of_dpowers 081A       __size_ofi1_Counter 0025  
        __end_of_isdigit 089E                    pclath 000A                    utoa@c 0033  
                  utoa@v 0031                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0E23          __initialization 000F             __end_of_main 0B0C  
           __end_of_itoa 09C5             __end_of_utoa 0C42                   ??_main 0076  
                 ??_itoa 0039                   ??_utoa 0030                   _DCADC1 006C  
                 _DCADC2 0064                   _ADRESH 001E         ___awdiv@dividend 0022  
                 _ANSELH 0189                   i1l1850 0A51                   i1l1844 0A3F  
                 i1l1782 0965                   i1l1854 0A56                   i1l1846 0A45  
                 i1l1784 096C                   i1l1776 0955                   i1l1856 0A5F  
                 i1l1848 0A4C                   i1l1778 095C                   i1l1788 0975  
                 u160_20 0A45                   u160_21 0A44                   u156_20 095C  
                 u156_21 095B                   u157_20 096C                   u157_21 096B  
                 u426_27 0A5A                   _SPBRGH 009A  __size_of_inicializacion 001F  
       __end_of___xxtofl 07B0                ??_Counter 0074        __end_of_UART_INIT 08F6  
                 ___bmul 08C6                ??___fldiv 0050                ??___awdiv 0074  
              ??___awmod 0075        __end_ofi1_Counter 097A                ??___flmul 0036  
              ??___fltol 004C                ??___lwdiv 0074                ??___lwmod 0075  
       ___awdiv@quotient 0026       __size_of_SerialCom 001D          ___awmod@divisor 0028  
        ___awmod@counter 002C                ??_lcd_cmd 0076                ??_lcd_lat 0074  
                 _strcat 0A69                ??_lcd_dwr 0076                ??_lcd_msg 0076  
                 _strcpy 0932                ??_isdigit 0074       __size_of__Umul8_16 0029  
                 saved_w 007E                ??_sprintf 002F             ___xxtofl@arg 002A  
           ___xxtofl@exp 0029             ___xxtofl@val 0020  __end_of__initialization 0024  
             ___fltol@f1 0048      ___bmul@multiplicand 0074           __pcstackCOMMON 0070  
     __size_of_lcd_ready 0029               __pbssBANK0 0062               __pbssBANK1 00A0  
      __end_of_SerialCom 0913        __end_of__Umul8_16 0A16               __pmaintext 0AD0  
                ?___bmul 0074               __pintentry 0004                  ?_strcat 0074  
                ?_strcpy 0074                ?___xxtofl 0020                  _PUNTO1A 00CE  
                _PUNTO2A 00BA               __stringtab 0800           _inicializacion 0913  
                _Counter 097A                  _Lectura 0076                _ADCchar1A 00DD  
              _ADCchar1B 00D8                _ADCchar1C 00D3                _ADCchar2A 00C9  
              _ADCchar2B 00C4                _ADCchar2C 00BF        __end_of_lcd_ready 0A3F  
        __size_of___bmul 0017                  ___fldiv 0E23                  ___awdiv 0B67  
                ___awmod 0B0C                  ___flmul 0393                  ___fltol 0C42  
                ___lwdiv 07B0                  ___lwmod 0A94                  __ptext1 0913  
                __ptext2 08DD                  __ptext3 097A                  __ptext4 0028  
                __ptext5 0932                  __ptext6 0A69                  __ptext7 0CBE  
                __ptext8 088C                  __ptext9 08C6                  _lcd_cmd 089E  
                _lcd_lat 087D                  _lcd_dwr 08B2                  _lcd_msg 09C5  
           __size_of_ADC 036B          __size_of_strcat 002B          __size_of_strcpy 0023  
           __size_of_ISR 002A                  _dpowers 0810             _ContadorSend 00B5  
                _isdigit 088C               ??___xxtofl 0024         ___awmod@dividend 002A  
                _sprintf 0CBE                  clrloop0 07F7   __end_of_inicializacion 0932  
   end_of_initialization 0024                  itoa@buf 003B                  itoa@val 0035  
              _RCSTAbits 0018                  utoa@buf 0034                  utoa@val 002C  
              _UART_INIT 08DD                i1_Counter 0955            ___xxtofl@sign 0028  
            ___fldiv@grs 005C              ___fldiv@rem 0055          ?_inicializacion 0070  
            ___flmul@grs 003D                _TXSTAbits 0098           __end_of___bmul 08DD  
             ?_UART_INIT 0070              _BAUDCTLbits 0187               ?i1_Counter 0070  
         __end_of_strcat 0A94           __end_of_strcpy 0955      start_initialization 000F  
            __end_of_ADC 0393              __end_of_ISR 0A69                _SerialCom 08F6  
               ??___bmul 0075                __Umul8_16 09ED                 ??_strcat 0075  
               ??_strcpy 0075                ___fldiv@a 0048                ___fldiv@b 004C  
              ___flmul@a 0032                ___flmul@b 002E              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00E2  
      __size_of___xxtofl 00BC             _isdigit$1003 0074              sprintf@flag 0033  
            sprintf@prec 0037                 ?_Counter 0070               ?_SerialCom 0070  
       ___lwdiv@dividend 0022                 ?___fldiv 0048                 ?___awdiv 0020  
               ?___awmod 0028                 ?___flmul 002E                 ?___fltol 0048  
             ?__Umul8_16 0074                 ?___lwdiv 0020                 ?___lwmod 0027  
            ??_UART_INIT 0074                _lcd_ready 0A16                __pstrings 0800  
            ??i1_Counter 0070                 ?_lcd_cmd 0070                 ?_lcd_lat 0070  
               ?_lcd_dwr 0070                 ?_lcd_msg 0021                 ?_isdigit 0070  
       ___lwdiv@quotient 0025                 ?_sprintf 002C               _ADC1ADRESH 006F  
             _ADC2ADRESH 006E        interrupt_function 0004                clear_ram0 07F6  
               _PIE1bits 008C                 _PIR1bits 000C               ?_lcd_ready 0070  
             _ADCON0bits 001F              __stringbase 080F               _ADCON1bits 009F  
       ??_inicializacion 0076                 _Contador 0078         __size_of_Counter 0025  
            ??_SerialCom 0074              ??__Umul8_16 0020         __size_of___fldiv 01DD  
       __size_of___awdiv 0069         __size_of___awmod 005B         __size_of___flmul 0361  
       __size_of___fltol 007C         __size_of___lwdiv 0046         __size_of___lwmod 003C  
     __end_of__stringtab 0810         __size_of_lcd_cmd 0014         __size_of_lcd_lat 000F  
       __size_of_lcd_dwr 0014         __size_of_lcd_msg 0028               sprintf@val 0035  
               ___xxtofl 06F4               strcat@from 0074         __size_of_isdigit 0012  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 __ptext10 09C5  
               __ptext11 08B2                 __ptext20 0C42                 __ptext12 089E  
               __ptext21 0393                 __ptext13 0A16                 __ptext22 09ED  
               __ptext14 087D                 __ptext23 0E23                 __ptext15 099F  
               __ptext24 0B0C                 __ptext16 0BD0                 __ptext25 0B67  
               __ptext17 0A94                 __ptext26 08F6                 __ptext18 07B0  
               __ptext27 0A3F                 __ptext19 06F4                 __ptext28 0955  
       __size_of_sprintf 0165               strcpy@from 0074            __size_of_main 003C  
          __size_of_itoa 0026            __size_of_utoa 0072                 lcd_cmd@x 0020  
               lcd_dwr@x 0020                 lcd_msg@c 0021              ??_lcd_ready 0074  
             _INTCONbits 000B                 itoa@base 0037                 isdigit@c 0075  
               intlevel1 0000                sprintf@ap 0032                sprintf@sp 0034  
       ___lwmod@dividend 0029                stringcode 080A               _OSCCONbits 008F  
               utoa@base 002E   __Umul8_16@multiplicand 0074                 sprintf@c 0038  
               sprintf@f 002C                 strcat@cp 0021                 strcat@to 0020  
        ___lwmod@divisor 0027                 strcpy@cp 0020                 strcpy@to 0021  
        ___lwmod@counter 002B                 stringdir 080A                 stringtab 0800  
   __Umul8_16@multiplier 0026        __Umul8_16@product 0022  
