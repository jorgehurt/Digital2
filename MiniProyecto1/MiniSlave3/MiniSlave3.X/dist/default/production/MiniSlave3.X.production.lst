

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 15:30:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCONbits	set	20
   366  0008                     _PORTDbits	set	8
   367  0009                     _PORTE	set	9
   368  0008                     _PORTD	set	8
   369  0007                     _PORTC	set	7
   370  0006                     _PORTB	set	6
   371  0005                     _PORTA	set	5
   372  001F                     _ADCON0bits	set	31
   373  000C                     _PIR1bits	set	12
   374  000B                     _INTCONbits	set	11
   375  0063                     _SSPIF	set	99
   376  0085                     _TRISAbits	set	133
   377  0087                     _TRISCbits	set	135
   378  0094                     _SSPSTATbits	set	148
   379  009E                     _ADRESL	set	158
   380  0089                     _TRISE	set	137
   381  0087                     _TRISC	set	135
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  008F                     _OSCCONbits	set	143
   386  009F                     _ADCON1bits	set	159
   387  008C                     _PIE1bits	set	140
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   401  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   402  0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   403  0014                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0014                     __end_of__initialization:
   407  0014  0183               	clrf	3
   408  0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0078                     __pbssCOMMON:
   412  0078                     _dummy:
   413  0078                     	ds	1
   414  0079                     _ContadorID:
   415  0079                     	ds	1
   416  007A                     _Dec:
   417  007A                     	ds	1
   418  007B                     _Inc:
   419  007B                     	ds	1
   420  007C                     _ADC1ADRESH:
   421  007C                     	ds	1
   422                           
   423                           	psect	cstackCOMMON
   424  0070                     __pcstackCOMMON:
   425  0070                     ?_SPISlave:
   426  0070                     ?_Semaforo:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_spiRead:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_spiRead:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_spiWrite:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ??_spiWrite:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_ADCInit:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_ISR:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     spiWrite@dat:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455  0070                     	ds	1
   456  0071                     ??_ISR:
   457                           
   458                           ; 1 bytes @ 0x1
   459  0071                     	ds	3
   460  0074                     ??_SPISlave:
   461  0074                     ??_Semaforo:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ??_ADCInit:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	2
   470  0076                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x6
   473  0076                     	ds	2
   474                           
   475                           	psect	maintext
   476  0018                     __pmaintext:	
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 59 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B00/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          2       0       0       0       0
   499 ;;      Totals:         2       0       0       0       0
   500 ;;Total ram usage:        2 bytes
   501 ;; Hardware stack levels required when called:    3
   502 ;; This function calls:
   503 ;;		_ADCInit
   504 ;;		_SPISlave
   505 ;;		_Semaforo
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           
   512                           ;psect for function _main
   513  0018                     _main:
   514  0018                     l782:	
   515                           ;incstack = 0
   516                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   517                           
   518                           
   519                           ;main.c: 62:         return;
   520  0018  3070               	movlw	112
   521  0019  1683               	bsf	3,5	;RP0=1, select bank1
   522  001A  1303               	bcf	3,6	;RP1=0, select bank1
   523  001B  048F               	iorwf	15,f	;volatile
   524  001C                     l784:
   525                           
   526                           ;main.c: 63:     }
   527  001C  118F               	bcf	15,3	;volatile
   528  001D                     l786:
   529                           
   530                           ;main.c: 64:     if(SSPIF == 1)
   531  001D  110F               	bcf	15,2	;volatile
   532  001E                     l788:
   533                           
   534                           ;main.c: 65:     {
   535  001E  108F               	bcf	15,1	;volatile
   536  001F                     l790:
   537                           
   538                           ;main.c: 66:         dummy = spiRead();
   539  001F  140F               	bsf	15,0	;volatile
   540  0020                     l792:
   541                           
   542                           ;main.c: 69:     }
   543  0020  3001               	movlw	1
   544  0021  1683               	bsf	3,5	;RP0=1, select bank3
   545  0022  1703               	bsf	3,6	;RP1=1, select bank3
   546  0023  0088               	movwf	8	;volatile
   547  0024                     l794:
   548                           
   549                           ;main.c: 70: }
   550  0024  0189               	clrf	9	;volatile
   551  0025                     l796:
   552                           
   553                           ;main.c: 71: 
   554  0025  3021               	movlw	33
   555  0026  1683               	bsf	3,5	;RP0=1, select bank1
   556  0027  1303               	bcf	3,6	;RP1=0, select bank1
   557  0028  0085               	movwf	5	;volatile
   558  0029                     l798:
   559                           
   560                           ;main.c: 72: void Semaforo(void) {
   561  0029  0186               	clrf	6	;volatile
   562  002A                     l800:
   563                           
   564                           ;main.c: 73:     if (ADC1ADRESH < 51) {
   565  002A  0188               	clrf	8	;volatile
   566  002B                     l802:
   567                           
   568                           ;main.c: 74:         PORTDbits.RD0 = 0;
   569  002B  3018               	movlw	24
   570  002C  0087               	movwf	7	;volatile
   571  002D                     l804:
   572                           
   573                           ;main.c: 75:         PORTDbits.RD1 = 0;
   574  002D  0189               	clrf	9	;volatile
   575  002E                     l806:
   576                           
   577                           ;main.c: 76:         PORTDbits.RD2 = 1;
   578  002E  1283               	bcf	3,5	;RP0=0, select bank0
   579  002F  1303               	bcf	3,6	;RP1=0, select bank0
   580  0030  0185               	clrf	5	;volatile
   581  0031                     l808:
   582                           
   583                           ;main.c: 77:         return;
   584  0031  0186               	clrf	6	;volatile
   585  0032                     l810:
   586                           
   587                           ;main.c: 78:     }
   588  0032  0187               	clrf	7	;volatile
   589  0033                     l812:
   590                           
   591                           ;main.c: 79:     if (ADC1ADRESH > 74) {
   592  0033  0188               	clrf	8	;volatile
   593  0034                     l814:
   594                           
   595                           ;main.c: 80:         PORTDbits.RD0 = 1;
   596  0034  0189               	clrf	9	;volatile
   597  0035                     l816:
   598                           
   599                           ;main.c: 81:         PORTDbits.RD1 = 0;
   600  0035  1683               	bsf	3,5	;RP0=1, select bank1
   601  0036  1303               	bcf	3,6	;RP1=0, select bank1
   602  0037  158C               	bsf	12,3	;volatile
   603  0038                     l818:
   604                           
   605                           ;main.c: 82:         PORTDbits.RD2 = 0;
   606  0038  178B               	bsf	11,7	;volatile
   607  0039                     l820:
   608                           
   609                           ;main.c: 83:         return;
   610  0039  170B               	bsf	11,6	;volatile
   611  003A                     l822:
   612                           
   613                           ;main.c: 84:     }
   614  003A  1283               	bcf	3,5	;RP0=0, select bank0
   615  003B  1303               	bcf	3,6	;RP1=0, select bank0
   616  003C  118C               	bcf	12,3	;volatile
   617  003D                     l824:
   618                           
   619                           ;main.c: 85:     else{
   620  003D  120A  118A  20C9  120A  118A  	fcall	_SPISlave
   621  0042                     l826:
   622                           
   623                           ;main.c: 91: }
   624  0042  120A  118A  20AB  120A  118A  	fcall	_ADCInit
   625  0047                     l828:
   626  0047  1283               	bcf	3,5	;RP0=0, select bank0
   627  0048  1303               	bcf	3,6	;RP1=0, select bank0
   628  0049  141F               	bsf	31,0	;volatile
   629  004A                     l830:
   630  004A  149F               	bsf	31,1	;volatile
   631  004B                     l87:
   632  004B  189F               	btfsc	31,1	;volatile
   633  004C  284E               	goto	u41
   634  004D  284F               	goto	u40
   635  004E                     u41:
   636  004E  284B               	goto	l87
   637  004F                     u40:
   638  004F                     l832:
   639  004F  301A               	movlw	26
   640  0050  00F7               	movwf	??_main+1
   641  0051  30F8               	movlw	248
   642  0052  00F6               	movwf	??_main
   643  0053                     u77:
   644  0053  0BF6               	decfsz	??_main,f
   645  0054  2853               	goto	u77
   646  0055  0BF7               	decfsz	??_main+1,f
   647  0056  2853               	goto	u77
   648  0057  0000               	nop
   649  0058                     l834:
   650  0058  120A  118A  208D  120A  118A  	fcall	_Semaforo
   651  005D  2842               	goto	l826
   652  005E  120A  118A  280C   	ljmp	start
   653  0061                     __end_of_main:
   654                           
   655                           	psect	text1
   656  008D                     __ptext1:	
   657 ;; *************** function _Semaforo *****************
   658 ;; Defined at:
   659 ;;		line 116 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    2
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _Semaforo
   689  008D                     _Semaforo:
   690  008D                     l764:	
   691                           ;incstack = 0
   692                           ; Regs used in _Semaforo: [wreg]
   693                           
   694  008D  3033               	movlw	51
   695  008E  027C               	subwf	_ADC1ADRESH,w
   696  008F  1803               	skipnc
   697  0090  2892               	goto	u11
   698  0091  2893               	goto	u10
   699  0092                     u11:
   700  0092  2899               	goto	l768
   701  0093                     u10:
   702  0093                     l766:
   703  0093  1283               	bcf	3,5	;RP0=0, select bank0
   704  0094  1303               	bcf	3,6	;RP1=0, select bank0
   705  0095  1008               	bcf	8,0	;volatile
   706  0096  1088               	bcf	8,1	;volatile
   707  0097  1508               	bsf	8,2	;volatile
   708  0098  28AA               	goto	l103
   709  0099                     l768:
   710  0099  304B               	movlw	75
   711  009A  027C               	subwf	_ADC1ADRESH,w
   712  009B  1C03               	skipc
   713  009C  289E               	goto	u21
   714  009D  289F               	goto	u20
   715  009E                     u21:
   716  009E  28A5               	goto	l104
   717  009F                     u20:
   718  009F                     l770:
   719  009F  1283               	bcf	3,5	;RP0=0, select bank0
   720  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   721  00A1  1408               	bsf	8,0	;volatile
   722  00A2  1088               	bcf	8,1	;volatile
   723  00A3  1108               	bcf	8,2	;volatile
   724  00A4  28AA               	goto	l103
   725  00A5                     l104:
   726  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   727  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   728  00A7  1008               	bcf	8,0	;volatile
   729  00A8  1488               	bsf	8,1	;volatile
   730  00A9  1108               	bcf	8,2	;volatile
   731  00AA                     l103:
   732  00AA  0008               	return
   733  00AB                     __end_of_Semaforo:
   734                           
   735                           	psect	text2
   736  00C9                     __ptext2:	
   737 ;; *************** function _SPISlave *****************
   738 ;; Defined at:
   739 ;;		line 42 in file "spi.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    2
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function _SPISlave
   769  00C9                     _SPISlave:
   770  00C9                     l744:	
   771                           ;incstack = 0
   772                           ; Regs used in _SPISlave: [wreg+status,2+status,0]
   773                           
   774                           
   775                           ;spi.c: 44:     SSPSTATbits.SMP = 0;
   776  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   777  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   778  00CB  1394               	bcf	20,7	;volatile
   779                           
   780                           ;spi.c: 45:     SSPSTATbits.CKE = 0;
   781  00CC  1314               	bcf	20,6	;volatile
   782                           
   783                           ;spi.c: 46:     SSPCONbits.SSPEN = 1;
   784  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   785  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   786  00CF  1694               	bsf	20,5	;volatile
   787                           
   788                           ;spi.c: 47:     SSPCONbits.CKP = 1;
   789  00D0  1614               	bsf	20,4	;volatile
   790  00D1                     l746:
   791                           
   792                           ;spi.c: 48:     SSPCONbits.SSPM = 0b0100;
   793  00D1  0814               	movf	20,w	;volatile
   794  00D2  39F0               	andlw	-16
   795  00D3  3804               	iorlw	4
   796  00D4  0094               	movwf	20	;volatile
   797  00D5                     l748:
   798                           
   799                           ;spi.c: 50:     TRISCbits.TRISC5 = 0;
   800  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   801  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   802  00D7  1287               	bcf	7,5	;volatile
   803  00D8                     l750:
   804                           
   805                           ;spi.c: 51:     TRISCbits.TRISC4 = 0;
   806  00D8  1207               	bcf	7,4	;volatile
   807  00D9                     l752:
   808                           
   809                           ;spi.c: 52:     TRISCbits.TRISC3 = 1;
   810  00D9  1587               	bsf	7,3	;volatile
   811  00DA                     l754:
   812                           
   813                           ;spi.c: 53:     TRISAbits.TRISA5 = 1;
   814  00DA  1685               	bsf	5,5	;volatile
   815  00DB                     l756:
   816                           
   817                           ;spi.c: 55:     PIE1bits.SSPIE = 1;
   818  00DB  158C               	bsf	12,3	;volatile
   819  00DC                     l758:
   820                           
   821                           ;spi.c: 56:     INTCONbits.GIE = 1;
   822  00DC  178B               	bsf	11,7	;volatile
   823  00DD                     l760:
   824                           
   825                           ;spi.c: 57:     INTCONbits.PEIE = 1;
   826  00DD  170B               	bsf	11,6	;volatile
   827  00DE                     l762:
   828                           
   829                           ;spi.c: 58:     PIR1bits.SSPIF = 0;
   830  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   831  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   832  00E0  118C               	bcf	12,3	;volatile
   833  00E1                     l129:
   834  00E1  0008               	return
   835  00E2                     __end_of_SPISlave:
   836                           
   837                           	psect	text3
   838  00AB                     __ptext3:	
   839 ;; *************** function _ADCInit *****************
   840 ;; Defined at:
   841 ;;		line 24 in file "adc.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          2       0       0       0       0
   858 ;;      Totals:         2       0       0       0       0
   859 ;;Total ram usage:        2 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    2
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _ADCInit
   871  00AB                     _ADCInit:
   872  00AB                     l730:	
   873                           ;incstack = 0
   874                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
   875                           
   876                           
   877                           ;adc.c: 25:     INTCONbits.GIE = 1;
   878  00AB  178B               	bsf	11,7	;volatile
   879                           
   880                           ;adc.c: 26:     INTCONbits.PEIE = 1;
   881  00AC  170B               	bsf	11,6	;volatile
   882                           
   883                           ;adc.c: 27:     PIE1bits.ADIE = 1;
   884  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   885  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   886  00AF  170C               	bsf	12,6	;volatile
   887                           
   888                           ;adc.c: 28:     PIR1bits.ADIF = 0;
   889  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   890  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   891  00B2  130C               	bcf	12,6	;volatile
   892  00B3                     l732:
   893                           
   894                           ;adc.c: 29:     ADCON0bits.ADCS = 01;
   895  00B3  081F               	movf	31,w	;volatile
   896  00B4  393F               	andlw	-193
   897  00B5  3840               	iorlw	64
   898  00B6  009F               	movwf	31	;volatile
   899                           
   900                           ;adc.c: 30:     ADCON0bits.CHS = 0000;
   901  00B7  30C3               	movlw	-61
   902  00B8  059F               	andwf	31,f	;volatile
   903  00B9                     l734:
   904                           
   905                           ;adc.c: 31:     ADCON0bits.ADON = 1;
   906  00B9  141F               	bsf	31,0	;volatile
   907  00BA                     l736:
   908                           
   909                           ;adc.c: 32:     ADCON1bits.ADFM = 1;
   910  00BA  1683               	bsf	3,5	;RP0=1, select bank1
   911  00BB  1303               	bcf	3,6	;RP1=0, select bank1
   912  00BC  179F               	bsf	31,7	;volatile
   913  00BD                     l738:
   914                           
   915                           ;adc.c: 33:     ADCON1bits.VCFG1 = 0;
   916  00BD  129F               	bcf	31,5	;volatile
   917  00BE                     l740:
   918                           
   919                           ;adc.c: 34:     ADCON1bits.VCFG0 = 0;
   920  00BE  121F               	bcf	31,4	;volatile
   921  00BF                     l742:
   922                           
   923                           ;adc.c: 35:     _delay((unsigned long)((10)*(8000000/4000.0)));
   924  00BF  301A               	movlw	26
   925  00C0  00F5               	movwf	??_ADCInit+1
   926  00C1  30F8               	movlw	248
   927  00C2  00F4               	movwf	??_ADCInit
   928  00C3                     u87:
   929  00C3  0BF4               	decfsz	??_ADCInit,f
   930  00C4  28C3               	goto	u87
   931  00C5  0BF5               	decfsz	??_ADCInit+1,f
   932  00C6  28C3               	goto	u87
   933  00C7  0000               	nop
   934  00C8                     l17:
   935  00C8  0008               	return
   936  00C9                     __end_of_ADCInit:
   937                           
   938                           	psect	text4
   939  0061                     __ptext4:	
   940 ;; *************** function _ISR *****************
   941 ;; Defined at:
   942 ;;		line 102 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          3       0       0       0       0
   959 ;;      Totals:         3       0       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    1
   963 ;; This function calls:
   964 ;;		_spiRead
   965 ;;		_spiWrite
   966 ;; This function is called by:
   967 ;;		Interrupt level 1
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _ISR
   973  0061                     _ISR:
   974  0061                     i1l836:
   975  0061  1283               	bcf	3,5	;RP0=0, select bank0
   976  0062  1303               	bcf	3,6	;RP1=0, select bank0
   977  0063  1F0C               	btfss	12,6	;volatile
   978  0064  2866               	goto	u5_21
   979  0065  2867               	goto	u5_20
   980  0066                     u5_21:
   981  0066  2871               	goto	i1l97
   982  0067                     u5_20:
   983  0067                     i1l838:
   984  0067  1683               	bsf	3,5	;RP0=1, select bank1
   985  0068  1303               	bcf	3,6	;RP1=0, select bank1
   986  0069  081E               	movf	30,w	;volatile
   987  006A  00F1               	movwf	??_ISR
   988  006B  0871               	movf	??_ISR,w
   989  006C  00FC               	movwf	_ADC1ADRESH
   990  006D                     i1l840:
   991  006D  1283               	bcf	3,5	;RP0=0, select bank0
   992  006E  1303               	bcf	3,6	;RP1=0, select bank0
   993  006F  130C               	bcf	12,6	;volatile
   994  0070  2886               	goto	i1l98
   995  0071                     i1l97:
   996  0071  1D8C               	btfss	12,3	;volatile
   997  0072  2874               	goto	u6_21
   998  0073  2875               	goto	u6_20
   999  0074                     u6_21:
  1000  0074  2886               	goto	i1l98
  1001  0075                     u6_20:
  1002  0075                     i1l844:
  1003  0075  120A  118A  20E2  120A  118A  	fcall	_spiRead
  1004  007A  00F1               	movwf	??_ISR
  1005  007B  0871               	movf	??_ISR,w
  1006  007C  00F8               	movwf	_dummy
  1007  007D                     i1l846:
  1008  007D  087C               	movf	_ADC1ADRESH,w
  1009  007E  120A  118A  20EC  120A  118A  	fcall	_spiWrite
  1010  0083                     i1l848:
  1011  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0085  118C               	bcf	12,3	;volatile
  1014  0086                     i1l98:
  1015  0086  0873               	movf	??_ISR+2,w
  1016  0087  008A               	movwf	10
  1017  0088  0E72               	swapf	??_ISR+1,w
  1018  0089  0083               	movwf	3
  1019  008A  0EFE               	swapf	btemp,f
  1020  008B  0E7E               	swapf	btemp,w
  1021  008C  0009               	retfie
  1022  008D                     __end_of_ISR:
  1023                           
  1024                           	psect	intentry
  1025  0004                     __pintentry:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029  0004                     interrupt_function:
  1030  007E                     saved_w	set	btemp
  1031  0004  00FE               	movwf	btemp
  1032  0005  0E03               	swapf	3,w
  1033  0006  00F2               	movwf	??_ISR+1
  1034  0007  080A               	movf	10,w
  1035  0008  00F3               	movwf	??_ISR+2
  1036  0009  120A  118A  2861   	ljmp	_ISR
  1037                           
  1038                           	psect	text5
  1039  00EC                     __ptext5:	
  1040 ;; *************** function _spiWrite *****************
  1041 ;; Defined at:
  1042 ;;		line 66 in file "spi.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  dat             1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  dat             1    0[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0
  1059 ;;      Totals:         1       0       0       0       0
  1060 ;;Total ram usage:        1 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_ISR
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _spiWrite
  1071  00EC                     _spiWrite:
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _spiWrite: [wreg]
  1075                           ;spiWrite@dat stored from wreg
  1076  00EC  00F0               	movwf	spiWrite@dat
  1077  00ED                     i1l780:
  1078                           
  1079                           ;spi.c: 67:     SSPBUF = dat;
  1080  00ED  0870               	movf	spiWrite@dat,w
  1081  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00F0  0093               	movwf	19	;volatile
  1084  00F1                     i1l138:
  1085  00F1  0008               	return
  1086  00F2                     __end_of_spiWrite:
  1087                           
  1088                           	psect	text6
  1089  00E2                     __ptext6:	
  1090 ;; *************** function _spiRead *****************
  1091 ;; Defined at:
  1092 ;;		line 61 in file "spi.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      unsigned char 
  1099 ;; Registers used:
  1100 ;;		wreg
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_ISR
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _spiRead
  1121  00E2                     _spiRead:
  1122  00E2                     i1l774:	
  1123                           ;incstack = 0
  1124                           ; Regs used in _spiRead: [wreg]
  1125                           
  1126  00E2                     i1l132:	
  1127                           ;spi.c: 62:     while (!SSPSTATbits.BF);
  1128                           
  1129  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1130  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1131  00E4  1C14               	btfss	20,0	;volatile
  1132  00E5  28E7               	goto	u3_21
  1133  00E6  28E8               	goto	u3_20
  1134  00E7                     u3_21:
  1135  00E7  28E2               	goto	i1l132
  1136  00E8                     u3_20:
  1137  00E8                     i1l776:
  1138                           
  1139                           ;spi.c: 63:     return (SSPBUF);
  1140  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00EA  0813               	movf	19,w	;volatile
  1143  00EB                     i1l135:
  1144  00EB  0008               	return
  1145  00EC                     __end_of_spiRead:
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126
  1148                           
  1149                           	psect	config
  1150                           
  1151                           ;Config register CONFIG1 @ 0x2007
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1156                           ;	Power-up Timer Enable bit
  1157                           ;	PWRTE = OFF, PWRT disabled
  1158                           ;	RE3/MCLR pin function select bit
  1159                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1160                           ;	Code Protection bit
  1161                           ;	CP = OFF, Program memory code protection is disabled
  1162                           ;	Data Code Protection bit
  1163                           ;	CPD = OFF, Data memory code protection is disabled
  1164                           ;	Brown Out Reset Selection bits
  1165                           ;	BOREN = OFF, BOR disabled
  1166                           ;	Internal External Switchover bit
  1167                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1168                           ;	Fail-Safe Clock Monitor Enabled bit
  1169                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1170                           ;	Low Voltage Programming Enable bit
  1171                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1172                           ;	In-Circuit Debugger Mode bit
  1173                           ;	DEBUG = 0x1, unprogrammed default
  1174  2007                     	org	8199
  1175  2007  20D4               	dw	8404
  1176                           
  1177                           ;Config register CONFIG2 @ 0x2008
  1178                           ;	Brown-out Reset Selection bit
  1179                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1180                           ;	Flash Program Memory Self Write Enable bits
  1181                           ;	WRT = OFF, Write protection off
  1182  2008                     	org	8200
  1183  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADCInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              6 COMMON     2     2      0
                            _ADCInit
                           _SPISlave
                           _Semaforo
 ---------------------------------------------------------------------------------
 (1) _Semaforo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPISlave                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _SPISlave
   _Semaforo

 _ISR (ROOT)
   _spiRead
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 15:30:30 2021

            _SSPSTATbits 0094                       l17 00C8                       l87 004B  
                     u10 0093                       u11 0092                       u20 009F  
                     u21 009E                       u40 004F                       u41 004E  
                     u77 0053                       u87 00C3                      l103 00AA  
                    l104 00A5                      l129 00E1                      l800 002A  
                    l730 00AB                      l810 0032                      l802 002B  
                    l740 00BE                      l732 00B3                      l820 0039  
                    l812 0033                      l804 002D                      l742 00BF  
                    l734 00B9                      l750 00D8                      l830 004A  
                    l822 003A                      l814 0034                      l806 002E  
                    l736 00BA                      l760 00DD                      l752 00D9  
                    l744 00C9                      l832 004F                      l824 003D  
                    l816 0035                      l808 0031                      l738 00BD  
                    l762 00DE                      l754 00DA                      l746 00D1  
                    l770 009F                      l834 0058                      l826 0042  
                    l818 0038                      l756 00DB                      l748 00D5  
                    l764 008D                      l828 0047                      l758 00DC  
                    l766 0093                      l790 001F                      l782 0018  
                    l768 0099                      l792 0020                      l784 001C  
                    l794 0024                      l786 001D                      l796 0025  
                    l788 001E                      l798 0029                      _ISR 0061  
                    _Dec 007A                      _Inc 007B          __end_of_ADCInit 00C9  
                   ?_ISR 0070                     i1l97 0071                     i1l98 0086  
                   u3_20 00E8                     u3_21 00E7                     u5_20 0067  
                   u5_21 0066                     u6_20 0075                     u6_21 0074  
                   _main 0018                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l132 00E2                    i1l135 00EB                    i1l138 00F1  
                  i1l840 006D                    i1l780 00ED                    i1l844 0075  
                  i1l836 0061                    i1l774 00E2                    i1l846 007D  
                  i1l838 0067                    i1l776 00E8                    i1l848 0083  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _SSPIF 0063               _ContadorID 0079  
                  _dummy 0078         __end_of_SPISlave 00E2                    pclath 000A  
        __end_of_spiRead 00EC                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0061                ??_ADCInit 0074  
                 ??_main 0076         __end_of_Semaforo 00AB                   _ADRESL 009E  
                 _ANSELH 0189                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00F2                ??_spiRead 0070  __end_of__initialization 0014  
         __pcstackCOMMON 0070                ?_SPISlave 0070                ?_Semaforo 0070  
             __pmaintext 0018               __pintentry 0004                  _ADCInit 00AB  
             ??_SPISlave 0074               ??_Semaforo 0074                ?_spiWrite 0070  
                __ptext1 008D                  __ptext2 00C9                  __ptext3 00AB  
                __ptext4 0061                  __ptext5 00EC                  __ptext6 00E2  
           __size_of_ISR 002C                  _spiRead 00E2     end_of_initialization 0014  
             ??_spiWrite 0070                _PORTDbits 0008                _TRISAbits 0085  
              _TRISCbits 0087              spiWrite@dat 0070        __size_of_SPISlave 0019  
    start_initialization 000F              __end_of_ISR 008D        __size_of_Semaforo 001E  
               ?_ADCInit 0070              __pbssCOMMON 0078                ___latbits 0002  
      __size_of_spiWrite 0006                 ?_spiRead 0070               _ADC1ADRESH 007C  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
               _SPISlave 00C9         __size_of_ADCInit 001E               _ADCON0bits 001F  
             _ADCON1bits 009F                 _Semaforo 008D         __size_of_spiRead 000A  
          __size_of_main 0049                 _spiWrite 00EC               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F               _SSPCONbits 0014  
