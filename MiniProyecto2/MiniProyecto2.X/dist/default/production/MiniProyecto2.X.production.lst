

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 18:18:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0019                     _TXREG	set	25
   453  001A                     _RCREG	set	26
   454  0018                     _RCSTA	set	24
   455  000C                     _PIR1bits	set	12
   456  000B                     _INTCONbits	set	11
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  0063                     _SSPIF	set	99
   465  005E                     _PEIE	set	94
   466  005F                     _GIE	set	95
   467  0098                     _TXSTAbits	set	152
   468  0098                     _TXSTA	set	152
   469  0099                     _SPBRG	set	153
   470  009A                     _SPBRGH	set	154
   471  008C                     _PIE1bits	set	140
   472  0091                     _SSPCON2bits	set	145
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  0089                     _TRISE	set	137
   477  0087                     _TRISCbits	set	135
   478  0088                     _TRISD	set	136
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  008F                     _OSCCONbits	set	143
   482  0463                     _SSPIE	set	1123
   483  043C                     _TRISC4	set	1084
   484  043B                     _TRISC3	set	1083
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  07F1                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07F1                     __initialization:
   494                           
   495                           ; Clear objects allocated to BANK0
   496  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   497  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   498  07F3  01B5               	clrf	__pbssBANK0& (0+127)
   499  07F4  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   500  07F5  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   501  07F6  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   502  07F7  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   503  07F8  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   504  07F9  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   505  07FA  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   506  07FB  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   507  07FC                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  07FC                     __end_of__initialization:
   511  07FC  0183               	clrf	3
   512  07FD  120A  118A  2E35   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssBANK0
   515  0035                     __pbssBANK0:
   516  0035                     _Start:
   517  0035                     	ds	1
   518  0036                     _Bandera:
   519  0036                     	ds	1
   520  0037                     _year:
   521  0037                     	ds	1
   522  0038                     _month:
   523  0038                     	ds	1
   524  0039                     _m_day:
   525  0039                     	ds	1
   526  003A                     _hour:
   527  003A                     	ds	1
   528  003B                     _minute:
   529  003B                     	ds	1
   530  003C                     _second:
   531  003C                     	ds	1
   532  003D                     _i:
   533  003D                     	ds	1
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_UART_INIT:
   538  0070                     ??_UART_INIT:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_READ_RTC:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_UART_WRITE:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_UART_READ:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_UART_READ:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_I2C_Master_Wait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_I2C_Master_Start:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_I2C_Master_Start:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_Master_RepeatedStart:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_I2C_Master_RepeatedStart:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Write:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_decimal_to_bcd:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_I2C_Master_Read:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?___awdiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___awmod:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___lldiv:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     I2C_Master_Write@d:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     I2C_Master_Read@a:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     UART_WRITE@data:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___awdiv@divisor:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lldiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 4 bytes @ 0x0
   618  0070                     	ds	2
   619  0072                     ??_UART_WRITE:
   620  0072                     ??_I2C_Master_Write:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ??_I2C_Master_Read:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ___awdiv@dividend:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ___awmod@dividend:	
   630                           ; 2 bytes @ 0x2
   631                           
   632                           
   633                           ; 2 bytes @ 0x2
   634  0072                     	ds	2
   635  0074                     ??___awdiv:
   636  0074                     ??___awmod:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     I2C_Master_Read@temp:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ___lldiv@dividend:	
   643                           ; 2 bytes @ 0x4
   644                           
   645                           
   646                           ; 4 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ___awdiv@counter:
   649  0075                     ___awmod@counter:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 1 bytes @ 0x5
   654  0075                     	ds	1
   655  0076                     ??_READ_RTC:
   656  0076                     ___awdiv@sign:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     ___awmod@sign:	
   660                           ; 1 bytes @ 0x6
   661                           
   662                           
   663                           ; 1 bytes @ 0x6
   664  0076                     	ds	1
   665  0077                     ___awdiv@quotient:
   666                           
   667                           ; 2 bytes @ 0x7
   668  0077                     	ds	1
   669  0078                     ??___lldiv:
   670                           
   671                           ; 1 bytes @ 0x8
   672  0078                     	ds	1
   673  0079                     ??_decimal_to_bcd:
   674  0079                     ___lldiv@quotient:	
   675                           ; 1 bytes @ 0x9
   676                           
   677                           
   678                           ; 4 bytes @ 0x9
   679  0079                     	ds	4
   680  007D                     ___lldiv@counter:
   681                           
   682                           ; 1 bytes @ 0xD
   683  007D                     	ds	1
   684                           
   685                           	psect	cstackBANK0
   686  0020                     __pcstackBANK0:
   687  0020                     ?_I2C_Master_Init:
   688  0020                     decimal_to_bcd@number:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     I2C_Master_Init@c:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 4 bytes @ 0x0
   696  0020                     	ds	1
   697  0021                     ?_SET_RTC:
   698  0021                     SET_RTC@hour:	
   699                           ; 1 bytes @ 0x1
   700                           
   701                           
   702                           ; 1 bytes @ 0x1
   703  0021                     	ds	1
   704  0022                     SET_RTC@m_day:
   705                           
   706                           ; 1 bytes @ 0x2
   707  0022                     	ds	1
   708  0023                     SET_RTC@month:
   709                           
   710                           ; 1 bytes @ 0x3
   711  0023                     	ds	1
   712  0024                     ??_I2C_Master_Init:
   713  0024                     SET_RTC@year:	
   714                           ; 1 bytes @ 0x4
   715                           
   716                           
   717                           ; 1 bytes @ 0x4
   718  0024                     	ds	1
   719  0025                     ??_SET_RTC:
   720                           
   721                           ; 1 bytes @ 0x5
   722  0025                     	ds	3
   723  0028                     SET_RTC@minute:
   724                           
   725                           ; 1 bytes @ 0x8
   726  0028                     	ds	1
   727  0029                     ??_main:
   728                           
   729                           ; 1 bytes @ 0x9
   730  0029                     	ds	9
   731  0032                     main@Bandera:
   732                           
   733                           ; 1 bytes @ 0x12
   734  0032                     	ds	1
   735  0033                     main@hour:
   736                           
   737                           ; 2 bytes @ 0x13
   738  0033                     	ds	2
   739                           
   740                           	psect	maintext
   741  0635                     __pmaintext:	
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 47 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  hour            2   19[BANK0 ] int 
   752 ;;  minute          2    0        int 
   753 ;;  Bandera         1   18[BANK0 ] unsigned char 
   754 ;;  year            1    0        unsigned char 
   755 ;;  month           1    0        unsigned char 
   756 ;;  m_day           1    0        unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       8       0       0       0
   768 ;;      Temps:          0       4       0       0       0
   769 ;;      Totals:         0      12       0       0       0
   770 ;;Total ram usage:       12 bytes
   771 ;; Hardware stack levels required when called:    3
   772 ;; This function calls:
   773 ;;		_I2C_Master_Init
   774 ;;		_READ_RTC
   775 ;;		_SET_RTC
   776 ;;		_UART_INIT
   777 ;;		_UART_READ
   778 ;;		_UART_WRITE
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _main
   786  0635                     _main:
   787  0635                     l1276:	
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   790                           
   791  0635  1683               	bsf	3,5	;RP0=1, select bank1
   792  0636  1303               	bcf	3,6	;RP1=0, select bank1
   793  0637  080F               	movf	15,w	;volatile
   794  0638  398F               	andlw	-113
   795  0639  3860               	iorlw	96
   796  063A  008F               	movwf	15	;volatile
   797  063B                     l1278:
   798  063B  118F               	bcf	15,3	;volatile
   799  063C                     l1280:
   800  063C  110F               	bcf	15,2	;volatile
   801  063D                     l1282:
   802  063D  108F               	bcf	15,1	;volatile
   803  063E                     l1284:
   804  063E  140F               	bsf	15,0	;volatile
   805  063F                     l1286:
   806  063F  1683               	bsf	3,5	;RP0=1, select bank3
   807  0640  1703               	bsf	3,6	;RP1=1, select bank3
   808  0641  0188               	clrf	8	;volatile
   809  0642                     l1288:
   810  0642  0189               	clrf	9	;volatile
   811  0643                     l1290:
   812  0643  1683               	bsf	3,5	;RP0=1, select bank1
   813  0644  1303               	bcf	3,6	;RP1=0, select bank1
   814  0645  0185               	clrf	5	;volatile
   815  0646                     l1292:
   816  0646  0186               	clrf	6	;volatile
   817  0647                     l1294:
   818  0647  0188               	clrf	8	;volatile
   819  0648                     l1296:
   820  0648  1787               	bsf	7,7	;volatile
   821  0649                     l1298:
   822  0649  1307               	bcf	7,6	;volatile
   823  064A                     l1300:
   824  064A  0189               	clrf	9	;volatile
   825  064B                     l1302:
   826  064B  1283               	bcf	3,5	;RP0=0, select bank0
   827  064C  1303               	bcf	3,6	;RP1=0, select bank0
   828  064D  0185               	clrf	5	;volatile
   829  064E                     l1304:
   830  064E  0186               	clrf	6	;volatile
   831  064F                     l1306:
   832  064F  0187               	clrf	7	;volatile
   833  0650                     l1308:
   834  0650  0188               	clrf	8	;volatile
   835  0651                     l1310:
   836  0651  0189               	clrf	9	;volatile
   837  0652                     l1312:
   838  0652                     l1314:
   839  0652  300F               	movlw	15
   840  0653  00B3               	movwf	main@hour
   841  0654  3000               	movlw	0
   842  0655  00B4               	movwf	main@hour+1
   843  0656                     l1316:
   844  0656                     l1318:
   845  0656                     l1320:
   846  0656                     l1322:
   847  0656                     l1324:
   848  0656  3000               	movlw	0
   849  0657  00A3               	movwf	I2C_Master_Init@c+3
   850  0658  3001               	movlw	1
   851  0659  00A2               	movwf	I2C_Master_Init@c+2
   852  065A  3086               	movlw	134
   853  065B  00A1               	movwf	I2C_Master_Init@c+1
   854  065C  30A0               	movlw	160
   855  065D  00A0               	movwf	I2C_Master_Init@c
   856  065E  120A  118A  24D7  120A  118A  	fcall	_I2C_Master_Init
   857  0663                     l1326:
   858  0663  300F               	movlw	15
   859  0664  1283               	bcf	3,5	;RP0=0, select bank0
   860  0665  1303               	bcf	3,6	;RP1=0, select bank0
   861  0666  00A9               	movwf	??_main
   862  0667  0829               	movf	??_main,w
   863  0668  00A1               	movwf	SET_RTC@hour
   864  0669  3005               	movlw	5
   865  066A  00AA               	movwf	??_main+1
   866  066B  082A               	movf	??_main+1,w
   867  066C  00A2               	movwf	SET_RTC@m_day
   868  066D  3003               	movlw	3
   869  066E  00AB               	movwf	??_main+2
   870  066F  082B               	movf	??_main+2,w
   871  0670  00A3               	movwf	SET_RTC@month
   872  0671  3015               	movlw	21
   873  0672  00AC               	movwf	??_main+3
   874  0673  082C               	movf	??_main+3,w
   875  0674  00A4               	movwf	SET_RTC@year
   876  0675  302D               	movlw	45
   877  0676  120A  118A  2735  120A  118A  	fcall	_SET_RTC
   878  067B                     l1328:
   879  067B  120A  118A  2460  120A  118A  	fcall	_UART_INIT
   880  0680                     l1330:
   881  0680  120A  118A  26A0  120A  118A  	fcall	_READ_RTC
   882  0685                     l1332:
   883  0685  1283               	bcf	3,5	;RP0=0, select bank0
   884  0686  1303               	bcf	3,6	;RP1=0, select bank0
   885  0687  0834               	movf	main@hour+1,w
   886  0688  00F1               	movwf	UART_WRITE@data+1
   887  0689  0833               	movf	main@hour,w
   888  068A  00F0               	movwf	UART_WRITE@data
   889  068B  120A  118A  2448  120A  118A  	fcall	_UART_WRITE
   890  0690  120A  118A  2435  120A  118A  	fcall	_UART_READ
   891  0695  1283               	bcf	3,5	;RP0=0, select bank0
   892  0696  1303               	bcf	3,6	;RP1=0, select bank0
   893  0697  00A9               	movwf	??_main
   894  0698  0829               	movf	??_main,w
   895  0699  00B2               	movwf	main@Bandera
   896  069A                     l1334:
   897  069A  0832               	movf	main@Bandera,w
   898  069B  0088               	movwf	8	;volatile
   899  069C  2E80               	goto	l1330
   900  069D  120A  118A  2800   	ljmp	start
   901  06A0                     __end_of_main:
   902                           
   903                           	psect	text1
   904  0448                     __ptext1:	
   905 ;; *************** function _UART_WRITE *****************
   906 ;; Defined at:
   907 ;;		line 35 in file "eusart.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  data            2    0[COMMON] int 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         2       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         2       0       0       0       0
   925 ;;Total ram usage:        2 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;;		_UART_Write_Text
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _UART_WRITE
   937  0448                     _UART_WRITE:
   938  0448                     l1264:	
   939                           ;incstack = 0
   940                           ; Regs used in _UART_WRITE: [wreg]
   941                           
   942  0448                     l151:	
   943                           ;eusart.c: 36:   while(!TXSTAbits.TRMT);
   944                           
   945  0448  1683               	bsf	3,5	;RP0=1, select bank1
   946  0449  1303               	bcf	3,6	;RP1=0, select bank1
   947  044A  1C98               	btfss	24,1	;volatile
   948  044B  2C4D               	goto	u671
   949  044C  2C4E               	goto	u670
   950  044D                     u671:
   951  044D  2C48               	goto	l151
   952  044E                     u670:
   953  044E                     l1266:
   954                           
   955                           ;eusart.c: 37:   TXREG = data;
   956  044E  0870               	movf	UART_WRITE@data,w
   957  044F  1283               	bcf	3,5	;RP0=0, select bank0
   958  0450  1303               	bcf	3,6	;RP1=0, select bank0
   959  0451  0099               	movwf	25	;volatile
   960  0452                     l154:
   961  0452  0008               	return
   962  0453                     __end_of_UART_WRITE:
   963                           
   964                           	psect	text2
   965  0435                     __ptext2:	
   966 ;; *************** function _UART_READ *****************
   967 ;; Defined at:
   968 ;;		line 29 in file "eusart.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      unsigned char 
   975 ;; Registers used:
   976 ;;		wreg
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;;		_UART_Read_Text
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _UART_READ
   998  0435                     _UART_READ:
   999  0435                     l1268:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _UART_READ: [wreg]
  1002                           
  1003                           
  1004                           ;eusart.c: 30:     if(PIR1bits.RCIF==1){
  1005  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0437  1E8C               	btfss	12,5	;volatile
  1008  0438  2C3A               	goto	u681
  1009  0439  2C3B               	goto	u680
  1010  043A                     u681:
  1011  043A  2C3D               	goto	l148
  1012  043B                     u680:
  1013  043B                     l1270:
  1014                           
  1015                           ;eusart.c: 31:         PIR1bits.RCIF=0;
  1016  043B  128C               	bcf	12,5	;volatile
  1017  043C                     l1272:
  1018                           
  1019                           ;eusart.c: 32:         return RCREG;
  1020  043C  081A               	movf	26,w	;volatile
  1021  043D                     l148:
  1022  043D  0008               	return
  1023  043E                     __end_of_UART_READ:
  1024                           
  1025                           	psect	text3
  1026  0460                     __ptext3:	
  1027 ;; *************** function _UART_INIT *****************
  1028 ;; Defined at:
  1029 ;;		line 14 in file "eusart.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _UART_INIT
  1058  0460                     _UART_INIT:
  1059  0460                     l1246:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _UART_INIT: [wreg+status,2]
  1062                           
  1063                           
  1064                           ;eusart.c: 16:     INTCONbits.GIE = 1;
  1065  0460  178B               	bsf	11,7	;volatile
  1066                           
  1067                           ;eusart.c: 17:     INTCONbits.PEIE = 1;
  1068  0461  170B               	bsf	11,6	;volatile
  1069                           
  1070                           ;eusart.c: 18:     PIE1bits.RCIE = 1;
  1071  0462  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0463  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0464  168C               	bsf	12,5	;volatile
  1074                           
  1075                           ;eusart.c: 19:     PIE1bits.TXIE = 1;
  1076  0465  160C               	bsf	12,4	;volatile
  1077                           
  1078                           ;eusart.c: 21:     PIR1bits.RCIF = 0;
  1079  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0468  128C               	bcf	12,5	;volatile
  1082                           
  1083                           ;eusart.c: 22:     PIR1bits.TXIF = 0;
  1084  0469  120C               	bcf	12,4	;volatile
  1085  046A                     l1248:
  1086                           
  1087                           ;eusart.c: 23:     SPBRGH = 0;
  1088  046A  1683               	bsf	3,5	;RP0=1, select bank1
  1089  046B  1303               	bcf	3,6	;RP1=0, select bank1
  1090  046C  019A               	clrf	26	;volatile
  1091  046D                     l1250:
  1092                           
  1093                           ;eusart.c: 24:     SPBRG = 25;
  1094  046D  3019               	movlw	25
  1095  046E  0099               	movwf	25	;volatile
  1096  046F                     l1252:
  1097                           
  1098                           ;eusart.c: 25:     TXSTA = 0b00100100;
  1099  046F  3024               	movlw	36
  1100  0470  0098               	movwf	24	;volatile
  1101  0471                     l1254:
  1102                           
  1103                           ;eusart.c: 26:     RCSTA = 0b10010000;
  1104  0471  3090               	movlw	144
  1105  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0474  0098               	movwf	24	;volatile
  1108  0475                     l1256:
  1109                           
  1110                           ;eusart.c: 27:     BAUDCTLbits.BRG16 = 0;
  1111  0475  1683               	bsf	3,5	;RP0=1, select bank3
  1112  0476  1703               	bsf	3,6	;RP1=1, select bank3
  1113  0477  1187               	bcf	7,3	;volatile
  1114  0478                     l144:
  1115  0478  0008               	return
  1116  0479                     __end_of_UART_INIT:
  1117                           
  1118                           	psect	text4
  1119  0735                     __ptext4:	
  1120 ;; *************** function _SET_RTC *****************
  1121 ;; Defined at:
  1122 ;;		line 49 in file "RTC.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  minute          1    wreg     unsigned char 
  1125 ;;  hour            1    1[BANK0 ] unsigned char 
  1126 ;;  m_day           1    2[BANK0 ] unsigned char 
  1127 ;;  month           1    3[BANK0 ] unsigned char 
  1128 ;;  year            1    4[BANK0 ] unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  minute          1    8[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      unsigned char 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       4       0       0       0
  1141 ;;      Locals:         0       1       0       0       0
  1142 ;;      Temps:          0       3       0       0       0
  1143 ;;      Totals:         0       8       0       0       0
  1144 ;;Total ram usage:        8 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    2
  1147 ;; This function calls:
  1148 ;;		_I2C_Master_Start
  1149 ;;		_I2C_Master_Stop
  1150 ;;		_I2C_Master_Write
  1151 ;;		_decimal_to_bcd
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _SET_RTC
  1159  0735                     _SET_RTC:
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _SET_RTC: [wreg+status,2+status,0+pclath+cstack]
  1163                           ;SET_RTC@minute stored from wreg
  1164  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0737  00A8               	movwf	SET_RTC@minute
  1167  0738                     l1240:
  1168                           
  1169                           ;RTC.c: 51:     minute = decimal_to_bcd(minute);
  1170  0738  0828               	movf	SET_RTC@minute,w
  1171  0739  120A  118A  24A7  120A  118A  	fcall	_decimal_to_bcd
  1172  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1173  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1174  0740  00A5               	movwf	??_SET_RTC
  1175  0741  0825               	movf	??_SET_RTC,w
  1176  0742  00A8               	movwf	SET_RTC@minute
  1177                           
  1178                           ;RTC.c: 52:     hour = decimal_to_bcd(hour);
  1179  0743  0821               	movf	SET_RTC@hour,w
  1180  0744  120A  118A  24A7  120A  118A  	fcall	_decimal_to_bcd
  1181  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1182  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1183  074B  00A5               	movwf	??_SET_RTC
  1184  074C  0825               	movf	??_SET_RTC,w
  1185  074D  00A1               	movwf	SET_RTC@hour
  1186                           
  1187                           ;RTC.c: 53:     m_day = decimal_to_bcd(m_day);
  1188  074E  0822               	movf	SET_RTC@m_day,w
  1189  074F  120A  118A  24A7  120A  118A  	fcall	_decimal_to_bcd
  1190  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0756  00A5               	movwf	??_SET_RTC
  1193  0757  0825               	movf	??_SET_RTC,w
  1194  0758  00A2               	movwf	SET_RTC@m_day
  1195                           
  1196                           ;RTC.c: 54:     month = decimal_to_bcd(month);
  1197  0759  0823               	movf	SET_RTC@month,w
  1198  075A  120A  118A  24A7  120A  118A  	fcall	_decimal_to_bcd
  1199  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0761  00A5               	movwf	??_SET_RTC
  1202  0762  0825               	movf	??_SET_RTC,w
  1203  0763  00A3               	movwf	SET_RTC@month
  1204                           
  1205                           ;RTC.c: 55:     year = decimal_to_bcd(year);
  1206  0764  0824               	movf	SET_RTC@year,w
  1207  0765  120A  118A  24A7  120A  118A  	fcall	_decimal_to_bcd
  1208  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1209  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1210  076C  00A5               	movwf	??_SET_RTC
  1211  076D  0825               	movf	??_SET_RTC,w
  1212  076E  00A4               	movwf	SET_RTC@year
  1213                           
  1214                           ;RTC.c: 58:     I2C_Master_Start();
  1215  076F  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Start
  1216                           
  1217                           ;RTC.c: 59:     I2C_Master_Write(0xD0);
  1218  0774  30D0               	movlw	208
  1219  0775  00F0               	movwf	I2C_Master_Write@d
  1220  0776  3000               	movlw	0
  1221  0777  00F1               	movwf	I2C_Master_Write@d+1
  1222  0778  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1223                           
  1224                           ;RTC.c: 60:     I2C_Master_Write(0);
  1225  077D  3000               	movlw	0
  1226  077E  00F0               	movwf	I2C_Master_Write@d
  1227  077F  00F1               	movwf	I2C_Master_Write@d+1
  1228  0780  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1229                           
  1230                           ;RTC.c: 61:     I2C_Master_Write(0);
  1231  0785  3000               	movlw	0
  1232  0786  00F0               	movwf	I2C_Master_Write@d
  1233  0787  00F1               	movwf	I2C_Master_Write@d+1
  1234  0788  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1235                           
  1236                           ;RTC.c: 62:     I2C_Master_Write(minute);
  1237  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1238  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1239  078F  0828               	movf	SET_RTC@minute,w
  1240  0790  00A5               	movwf	??_SET_RTC
  1241  0791  01A6               	clrf	??_SET_RTC+1
  1242  0792  0825               	movf	??_SET_RTC,w
  1243  0793  00F0               	movwf	I2C_Master_Write@d
  1244  0794  0826               	movf	??_SET_RTC+1,w
  1245  0795  00F1               	movwf	I2C_Master_Write@d+1
  1246  0796  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1247                           
  1248                           ;RTC.c: 63:     I2C_Master_Write(hour);
  1249  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1250  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1251  079D  0821               	movf	SET_RTC@hour,w
  1252  079E  00A5               	movwf	??_SET_RTC
  1253  079F  01A6               	clrf	??_SET_RTC+1
  1254  07A0  0825               	movf	??_SET_RTC,w
  1255  07A1  00F0               	movwf	I2C_Master_Write@d
  1256  07A2  0826               	movf	??_SET_RTC+1,w
  1257  07A3  00F1               	movwf	I2C_Master_Write@d+1
  1258  07A4  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1259                           
  1260                           ;RTC.c: 64:     I2C_Master_Write(1);
  1261  07A9  3001               	movlw	1
  1262  07AA  00F0               	movwf	I2C_Master_Write@d
  1263  07AB  3000               	movlw	0
  1264  07AC  00F1               	movwf	I2C_Master_Write@d+1
  1265  07AD  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1266                           
  1267                           ;RTC.c: 65:     I2C_Master_Write(m_day);
  1268  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1269  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1270  07B4  0822               	movf	SET_RTC@m_day,w
  1271  07B5  00A5               	movwf	??_SET_RTC
  1272  07B6  01A6               	clrf	??_SET_RTC+1
  1273  07B7  0825               	movf	??_SET_RTC,w
  1274  07B8  00F0               	movwf	I2C_Master_Write@d
  1275  07B9  0826               	movf	??_SET_RTC+1,w
  1276  07BA  00F1               	movwf	I2C_Master_Write@d+1
  1277  07BB  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1278                           
  1279                           ;RTC.c: 66:     I2C_Master_Write(month);
  1280  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1281  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1282  07C2  0823               	movf	SET_RTC@month,w
  1283  07C3  00A5               	movwf	??_SET_RTC
  1284  07C4  01A6               	clrf	??_SET_RTC+1
  1285  07C5  0825               	movf	??_SET_RTC,w
  1286  07C6  00F0               	movwf	I2C_Master_Write@d
  1287  07C7  0826               	movf	??_SET_RTC+1,w
  1288  07C8  00F1               	movwf	I2C_Master_Write@d+1
  1289  07C9  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1290                           
  1291                           ;RTC.c: 67:     I2C_Master_Write(year);
  1292  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1293  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1294  07D0  0824               	movf	SET_RTC@year,w
  1295  07D1  00A5               	movwf	??_SET_RTC
  1296  07D2  01A6               	clrf	??_SET_RTC+1
  1297  07D3  0825               	movf	??_SET_RTC,w
  1298  07D4  00F0               	movwf	I2C_Master_Write@d
  1299  07D5  0826               	movf	??_SET_RTC+1,w
  1300  07D6  00F1               	movwf	I2C_Master_Write@d+1
  1301  07D7  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1302                           
  1303                           ;RTC.c: 68:     I2C_Master_Stop();
  1304  07DC  120A  118A  242C  120A  118A  	fcall	_I2C_Master_Stop
  1305  07E1                     l1242:
  1306                           
  1307                           ;RTC.c: 70:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1308  07E1  3003               	movlw	3
  1309  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1310  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1311  07E4  00A7               	movwf	??_SET_RTC+2
  1312  07E5  3008               	movlw	8
  1313  07E6  00A6               	movwf	??_SET_RTC+1
  1314  07E7  3076               	movlw	118
  1315  07E8  00A5               	movwf	??_SET_RTC
  1316  07E9                     u717:
  1317  07E9  0BA5               	decfsz	??_SET_RTC,f
  1318  07EA  2FE9               	goto	u717
  1319  07EB  0BA6               	decfsz	??_SET_RTC+1,f
  1320  07EC  2FE9               	goto	u717
  1321  07ED  0BA7               	decfsz	??_SET_RTC+2,f
  1322  07EE  2FE9               	goto	u717
  1323  07EF  0000               	nop
  1324  07F0                     l204:
  1325  07F0  0008               	return
  1326  07F1                     __end_of_SET_RTC:
  1327                           
  1328                           	psect	text5
  1329  04A7                     __ptext5:	
  1330 ;; *************** function _decimal_to_bcd *****************
  1331 ;; Defined at:
  1332 ;;		line 22 in file "RTC.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  number          1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  number          1    0[BANK0 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       1       0       0       0
  1348 ;;      Temps:          5       0       0       0       0
  1349 ;;      Totals:         5       1       0       0       0
  1350 ;;Total ram usage:        6 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    1
  1353 ;; This function calls:
  1354 ;;		___awdiv
  1355 ;;		___awmod
  1356 ;; This function is called by:
  1357 ;;		_SET_RTC
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _decimal_to_bcd
  1363  04A7                     _decimal_to_bcd:
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1367                           ;decimal_to_bcd@number stored from wreg
  1368  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  1369  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  1370  04A9  00A0               	movwf	decimal_to_bcd@number
  1371  04AA                     l1200:
  1372                           
  1373                           ;RTC.c: 23:     return (((number / 10) << 4) + (number % 10));
  1374  04AA  300A               	movlw	10
  1375  04AB  00F0               	movwf	___awdiv@divisor
  1376  04AC  3000               	movlw	0
  1377  04AD  00F1               	movwf	___awdiv@divisor+1
  1378  04AE  0820               	movf	decimal_to_bcd@number,w
  1379  04AF  00F9               	movwf	??_decimal_to_bcd
  1380  04B0  01FA               	clrf	??_decimal_to_bcd+1
  1381  04B1  0879               	movf	??_decimal_to_bcd,w
  1382  04B2  00F2               	movwf	___awdiv@dividend
  1383  04B3  087A               	movf	??_decimal_to_bcd+1,w
  1384  04B4  00F3               	movwf	___awdiv@dividend+1
  1385  04B5  120A  118A  25CE  120A  118A  	fcall	___awdiv
  1386  04BA  0870               	movf	?___awdiv,w
  1387  04BB  00FB               	movwf	??_decimal_to_bcd+2
  1388  04BC  3004               	movlw	4
  1389  04BD                     u585:
  1390  04BD  1003               	clrc
  1391  04BE  0DFB               	rlf	??_decimal_to_bcd+2,f
  1392  04BF  3EFF               	addlw	-1
  1393  04C0  1D03               	skipz
  1394  04C1  2CBD               	goto	u585
  1395  04C2  300A               	movlw	10
  1396  04C3  00F0               	movwf	___awmod@divisor
  1397  04C4  3000               	movlw	0
  1398  04C5  00F1               	movwf	___awmod@divisor+1
  1399  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1400  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1401  04C8  0820               	movf	decimal_to_bcd@number,w
  1402  04C9  00FC               	movwf	??_decimal_to_bcd+3
  1403  04CA  01FD               	clrf	??_decimal_to_bcd+4
  1404  04CB  087C               	movf	??_decimal_to_bcd+3,w
  1405  04CC  00F2               	movwf	___awmod@dividend
  1406  04CD  087D               	movf	??_decimal_to_bcd+4,w
  1407  04CE  00F3               	movwf	___awmod@dividend+1
  1408  04CF  120A  118A  250F  120A  118A  	fcall	___awmod
  1409  04D4  0870               	movf	?___awmod,w
  1410  04D5  077B               	addwf	??_decimal_to_bcd+2,w
  1411  04D6                     l198:
  1412  04D6  0008               	return
  1413  04D7                     __end_of_decimal_to_bcd:
  1414                           
  1415                           	psect	text6
  1416  050F                     __ptext6:	
  1417 ;; *************** function ___awmod *****************
  1418 ;; Defined at:
  1419 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  divisor         2    0[COMMON] int 
  1422 ;;  dividend        2    2[COMMON] int 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  sign            1    6[COMMON] unsigned char 
  1425 ;;  counter         1    5[COMMON] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    0[COMMON] int 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         4       0       0       0       0
  1436 ;;      Locals:         2       0       0       0       0
  1437 ;;      Temps:          1       0       0       0       0
  1438 ;;      Totals:         7       0       0       0       0
  1439 ;;Total ram usage:        7 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_decimal_to_bcd
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function ___awmod
  1450  050F                     ___awmod:
  1451  050F                     l1130:	
  1452                           ;incstack = 0
  1453                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1454                           
  1455  050F  01F6               	clrf	___awmod@sign
  1456  0510                     l1132:
  1457  0510  1FF3               	btfss	___awmod@dividend+1,7
  1458  0511  2D13               	goto	u481
  1459  0512  2D14               	goto	u480
  1460  0513                     u481:
  1461  0513  2D1B               	goto	l1138
  1462  0514                     u480:
  1463  0514                     l1134:
  1464  0514  09F2               	comf	___awmod@dividend,f
  1465  0515  09F3               	comf	___awmod@dividend+1,f
  1466  0516  0AF2               	incf	___awmod@dividend,f
  1467  0517  1903               	skipnz
  1468  0518  0AF3               	incf	___awmod@dividend+1,f
  1469  0519                     l1136:
  1470  0519  01F6               	clrf	___awmod@sign
  1471  051A  0AF6               	incf	___awmod@sign,f
  1472  051B                     l1138:
  1473  051B  1FF1               	btfss	___awmod@divisor+1,7
  1474  051C  2D1E               	goto	u491
  1475  051D  2D1F               	goto	u490
  1476  051E                     u491:
  1477  051E  2D24               	goto	l1142
  1478  051F                     u490:
  1479  051F                     l1140:
  1480  051F  09F0               	comf	___awmod@divisor,f
  1481  0520  09F1               	comf	___awmod@divisor+1,f
  1482  0521  0AF0               	incf	___awmod@divisor,f
  1483  0522  1903               	skipnz
  1484  0523  0AF1               	incf	___awmod@divisor+1,f
  1485  0524                     l1142:
  1486  0524  0870               	movf	___awmod@divisor,w
  1487  0525  0471               	iorwf	___awmod@divisor+1,w
  1488  0526  1903               	btfsc	3,2
  1489  0527  2D29               	goto	u501
  1490  0528  2D2A               	goto	u500
  1491  0529                     u501:
  1492  0529  2D59               	goto	l1160
  1493  052A                     u500:
  1494  052A                     l1144:
  1495  052A  01F5               	clrf	___awmod@counter
  1496  052B  0AF5               	incf	___awmod@counter,f
  1497  052C  2D38               	goto	l1150
  1498  052D                     l1146:
  1499  052D  3001               	movlw	1
  1500  052E                     u515:
  1501  052E  1003               	clrc
  1502  052F  0DF0               	rlf	___awmod@divisor,f
  1503  0530  0DF1               	rlf	___awmod@divisor+1,f
  1504  0531  3EFF               	addlw	-1
  1505  0532  1D03               	skipz
  1506  0533  2D2E               	goto	u515
  1507  0534                     l1148:
  1508  0534  3001               	movlw	1
  1509  0535  00F4               	movwf	??___awmod
  1510  0536  0874               	movf	??___awmod,w
  1511  0537  07F5               	addwf	___awmod@counter,f
  1512  0538                     l1150:
  1513  0538  1FF1               	btfss	___awmod@divisor+1,7
  1514  0539  2D3B               	goto	u521
  1515  053A  2D3C               	goto	u520
  1516  053B                     u521:
  1517  053B  2D2D               	goto	l1146
  1518  053C                     u520:
  1519  053C                     l1152:
  1520  053C  0871               	movf	___awmod@divisor+1,w
  1521  053D  0273               	subwf	___awmod@dividend+1,w
  1522  053E  1D03               	skipz
  1523  053F  2D42               	goto	u535
  1524  0540  0870               	movf	___awmod@divisor,w
  1525  0541  0272               	subwf	___awmod@dividend,w
  1526  0542                     u535:
  1527  0542  1C03               	skipc
  1528  0543  2D45               	goto	u531
  1529  0544  2D46               	goto	u530
  1530  0545                     u531:
  1531  0545  2D4C               	goto	l1156
  1532  0546                     u530:
  1533  0546                     l1154:
  1534  0546  0870               	movf	___awmod@divisor,w
  1535  0547  02F2               	subwf	___awmod@dividend,f
  1536  0548  0871               	movf	___awmod@divisor+1,w
  1537  0549  1C03               	skipc
  1538  054A  03F3               	decf	___awmod@dividend+1,f
  1539  054B  02F3               	subwf	___awmod@dividend+1,f
  1540  054C                     l1156:
  1541  054C  3001               	movlw	1
  1542  054D                     u545:
  1543  054D  1003               	clrc
  1544  054E  0CF1               	rrf	___awmod@divisor+1,f
  1545  054F  0CF0               	rrf	___awmod@divisor,f
  1546  0550  3EFF               	addlw	-1
  1547  0551  1D03               	skipz
  1548  0552  2D4D               	goto	u545
  1549  0553                     l1158:
  1550  0553  3001               	movlw	1
  1551  0554  02F5               	subwf	___awmod@counter,f
  1552  0555  1D03               	btfss	3,2
  1553  0556  2D58               	goto	u551
  1554  0557  2D59               	goto	u550
  1555  0558                     u551:
  1556  0558  2D3C               	goto	l1152
  1557  0559                     u550:
  1558  0559                     l1160:
  1559  0559  0876               	movf	___awmod@sign,w
  1560  055A  1903               	btfsc	3,2
  1561  055B  2D5D               	goto	u561
  1562  055C  2D5E               	goto	u560
  1563  055D                     u561:
  1564  055D  2D63               	goto	l1164
  1565  055E                     u560:
  1566  055E                     l1162:
  1567  055E  09F2               	comf	___awmod@dividend,f
  1568  055F  09F3               	comf	___awmod@dividend+1,f
  1569  0560  0AF2               	incf	___awmod@dividend,f
  1570  0561  1903               	skipnz
  1571  0562  0AF3               	incf	___awmod@dividend+1,f
  1572  0563                     l1164:
  1573  0563  0873               	movf	___awmod@dividend+1,w
  1574  0564  00F1               	movwf	?___awmod+1
  1575  0565  0872               	movf	___awmod@dividend,w
  1576  0566  00F0               	movwf	?___awmod
  1577  0567                     l456:
  1578  0567  0008               	return
  1579  0568                     __end_of___awmod:
  1580                           
  1581                           	psect	text7
  1582  05CE                     __ptext7:	
  1583 ;; *************** function ___awdiv *****************
  1584 ;; Defined at:
  1585 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  divisor         2    0[COMMON] int 
  1588 ;;  dividend        2    2[COMMON] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  quotient        2    7[COMMON] int 
  1591 ;;  sign            1    6[COMMON] unsigned char 
  1592 ;;  counter         1    5[COMMON] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2    0[COMMON] int 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         4       0       0       0       0
  1603 ;;      Locals:         4       0       0       0       0
  1604 ;;      Temps:          1       0       0       0       0
  1605 ;;      Totals:         9       0       0       0       0
  1606 ;;Total ram usage:        9 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_decimal_to_bcd
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function ___awdiv
  1617  05CE                     ___awdiv:
  1618  05CE                     l1086:	
  1619                           ;incstack = 0
  1620                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1621                           
  1622  05CE  01F6               	clrf	___awdiv@sign
  1623  05CF                     l1088:
  1624  05CF  1FF1               	btfss	___awdiv@divisor+1,7
  1625  05D0  2DD2               	goto	u381
  1626  05D1  2DD3               	goto	u380
  1627  05D2                     u381:
  1628  05D2  2DDA               	goto	l1094
  1629  05D3                     u380:
  1630  05D3                     l1090:
  1631  05D3  09F0               	comf	___awdiv@divisor,f
  1632  05D4  09F1               	comf	___awdiv@divisor+1,f
  1633  05D5  0AF0               	incf	___awdiv@divisor,f
  1634  05D6  1903               	skipnz
  1635  05D7  0AF1               	incf	___awdiv@divisor+1,f
  1636  05D8                     l1092:
  1637  05D8  01F6               	clrf	___awdiv@sign
  1638  05D9  0AF6               	incf	___awdiv@sign,f
  1639  05DA                     l1094:
  1640  05DA  1FF3               	btfss	___awdiv@dividend+1,7
  1641  05DB  2DDD               	goto	u391
  1642  05DC  2DDE               	goto	u390
  1643  05DD                     u391:
  1644  05DD  2DE7               	goto	l1100
  1645  05DE                     u390:
  1646  05DE                     l1096:
  1647  05DE  09F2               	comf	___awdiv@dividend,f
  1648  05DF  09F3               	comf	___awdiv@dividend+1,f
  1649  05E0  0AF2               	incf	___awdiv@dividend,f
  1650  05E1  1903               	skipnz
  1651  05E2  0AF3               	incf	___awdiv@dividend+1,f
  1652  05E3                     l1098:
  1653  05E3  3001               	movlw	1
  1654  05E4  00F4               	movwf	??___awdiv
  1655  05E5  0874               	movf	??___awdiv,w
  1656  05E6  06F6               	xorwf	___awdiv@sign,f
  1657  05E7                     l1100:
  1658  05E7  01F7               	clrf	___awdiv@quotient
  1659  05E8  01F8               	clrf	___awdiv@quotient+1
  1660  05E9                     l1102:
  1661  05E9  0870               	movf	___awdiv@divisor,w
  1662  05EA  0471               	iorwf	___awdiv@divisor+1,w
  1663  05EB  1903               	btfsc	3,2
  1664  05EC  2DEE               	goto	u401
  1665  05ED  2DEF               	goto	u400
  1666  05EE                     u401:
  1667  05EE  2E26               	goto	l1122
  1668  05EF                     u400:
  1669  05EF                     l1104:
  1670  05EF  01F5               	clrf	___awdiv@counter
  1671  05F0  0AF5               	incf	___awdiv@counter,f
  1672  05F1  2DFD               	goto	l1110
  1673  05F2                     l1106:
  1674  05F2  3001               	movlw	1
  1675  05F3                     u415:
  1676  05F3  1003               	clrc
  1677  05F4  0DF0               	rlf	___awdiv@divisor,f
  1678  05F5  0DF1               	rlf	___awdiv@divisor+1,f
  1679  05F6  3EFF               	addlw	-1
  1680  05F7  1D03               	skipz
  1681  05F8  2DF3               	goto	u415
  1682  05F9                     l1108:
  1683  05F9  3001               	movlw	1
  1684  05FA  00F4               	movwf	??___awdiv
  1685  05FB  0874               	movf	??___awdiv,w
  1686  05FC  07F5               	addwf	___awdiv@counter,f
  1687  05FD                     l1110:
  1688  05FD  1FF1               	btfss	___awdiv@divisor+1,7
  1689  05FE  2E00               	goto	u421
  1690  05FF  2E01               	goto	u420
  1691  0600                     u421:
  1692  0600  2DF2               	goto	l1106
  1693  0601                     u420:
  1694  0601                     l1112:
  1695  0601  3001               	movlw	1
  1696  0602                     u435:
  1697  0602  1003               	clrc
  1698  0603  0DF7               	rlf	___awdiv@quotient,f
  1699  0604  0DF8               	rlf	___awdiv@quotient+1,f
  1700  0605  3EFF               	addlw	-1
  1701  0606  1D03               	skipz
  1702  0607  2E02               	goto	u435
  1703  0608  0871               	movf	___awdiv@divisor+1,w
  1704  0609  0273               	subwf	___awdiv@dividend+1,w
  1705  060A  1D03               	skipz
  1706  060B  2E0E               	goto	u445
  1707  060C  0870               	movf	___awdiv@divisor,w
  1708  060D  0272               	subwf	___awdiv@dividend,w
  1709  060E                     u445:
  1710  060E  1C03               	skipc
  1711  060F  2E11               	goto	u441
  1712  0610  2E12               	goto	u440
  1713  0611                     u441:
  1714  0611  2E19               	goto	l1118
  1715  0612                     u440:
  1716  0612                     l1114:
  1717  0612  0870               	movf	___awdiv@divisor,w
  1718  0613  02F2               	subwf	___awdiv@dividend,f
  1719  0614  0871               	movf	___awdiv@divisor+1,w
  1720  0615  1C03               	skipc
  1721  0616  03F3               	decf	___awdiv@dividend+1,f
  1722  0617  02F3               	subwf	___awdiv@dividend+1,f
  1723  0618                     l1116:
  1724  0618  1477               	bsf	___awdiv@quotient,0
  1725  0619                     l1118:
  1726  0619  3001               	movlw	1
  1727  061A                     u455:
  1728  061A  1003               	clrc
  1729  061B  0CF1               	rrf	___awdiv@divisor+1,f
  1730  061C  0CF0               	rrf	___awdiv@divisor,f
  1731  061D  3EFF               	addlw	-1
  1732  061E  1D03               	skipz
  1733  061F  2E1A               	goto	u455
  1734  0620                     l1120:
  1735  0620  3001               	movlw	1
  1736  0621  02F5               	subwf	___awdiv@counter,f
  1737  0622  1D03               	btfss	3,2
  1738  0623  2E25               	goto	u461
  1739  0624  2E26               	goto	u460
  1740  0625                     u461:
  1741  0625  2E01               	goto	l1112
  1742  0626                     u460:
  1743  0626                     l1122:
  1744  0626  0876               	movf	___awdiv@sign,w
  1745  0627  1903               	btfsc	3,2
  1746  0628  2E2A               	goto	u471
  1747  0629  2E2B               	goto	u470
  1748  062A                     u471:
  1749  062A  2E30               	goto	l1126
  1750  062B                     u470:
  1751  062B                     l1124:
  1752  062B  09F7               	comf	___awdiv@quotient,f
  1753  062C  09F8               	comf	___awdiv@quotient+1,f
  1754  062D  0AF7               	incf	___awdiv@quotient,f
  1755  062E  1903               	skipnz
  1756  062F  0AF8               	incf	___awdiv@quotient+1,f
  1757  0630                     l1126:
  1758  0630  0878               	movf	___awdiv@quotient+1,w
  1759  0631  00F1               	movwf	?___awdiv+1
  1760  0632  0877               	movf	___awdiv@quotient,w
  1761  0633  00F0               	movwf	?___awdiv
  1762  0634                     l443:
  1763  0634  0008               	return
  1764  0635                     __end_of___awdiv:
  1765                           
  1766                           	psect	text8
  1767  06A0                     __ptext8:	
  1768 ;; *************** function _READ_RTC *****************
  1769 ;; Defined at:
  1770 ;;		line 29 in file "RTC.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0
  1786 ;;      Temps:          2       0       0       0       0
  1787 ;;      Totals:         2       0       0       0       0
  1788 ;;Total ram usage:        2 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    2
  1791 ;; This function calls:
  1792 ;;		_I2C_Master_Read
  1793 ;;		_I2C_Master_RepeatedStart
  1794 ;;		_I2C_Master_Start
  1795 ;;		_I2C_Master_Stop
  1796 ;;		_I2C_Master_Write
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _READ_RTC
  1804  06A0                     _READ_RTC:
  1805  06A0                     l1258:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _READ_RTC: [wreg+status,2+status,0+pclath+cstack]
  1808                           
  1809                           
  1810                           ;RTC.c: 31:     I2C_Master_Start();
  1811  06A0  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Start
  1812                           
  1813                           ;RTC.c: 32:     I2C_Master_Write(0xD0);
  1814  06A5  30D0               	movlw	208
  1815  06A6  00F0               	movwf	I2C_Master_Write@d
  1816  06A7  3000               	movlw	0
  1817  06A8  00F1               	movwf	I2C_Master_Write@d+1
  1818  06A9  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1819                           
  1820                           ;RTC.c: 33:     I2C_Master_Write(0);
  1821  06AE  3000               	movlw	0
  1822  06AF  00F0               	movwf	I2C_Master_Write@d
  1823  06B0  00F1               	movwf	I2C_Master_Write@d+1
  1824  06B1  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1825                           
  1826                           ;RTC.c: 34:     I2C_Master_RepeatedStart();
  1827  06B6  120A  118A  241A  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1828                           
  1829                           ;RTC.c: 35:     I2C_Master_Write(0xD1);
  1830  06BB  30D1               	movlw	209
  1831  06BC  00F0               	movwf	I2C_Master_Write@d
  1832  06BD  3000               	movlw	0
  1833  06BE  00F1               	movwf	I2C_Master_Write@d+1
  1834  06BF  120A  118A  243E  120A  118A  	fcall	_I2C_Master_Write
  1835                           
  1836                           ;RTC.c: 36:     second = I2C_Master_Read(1);
  1837  06C4  3001               	movlw	1
  1838  06C5  00F0               	movwf	I2C_Master_Read@a
  1839  06C6  3000               	movlw	0
  1840  06C7  00F1               	movwf	I2C_Master_Read@a+1
  1841  06C8  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1842  06CD  0870               	movf	?_I2C_Master_Read,w
  1843  06CE  00F6               	movwf	??_READ_RTC
  1844  06CF  0876               	movf	??_READ_RTC,w
  1845  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1846  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1847  06D2  00BC               	movwf	_second
  1848                           
  1849                           ;RTC.c: 37:     minute = I2C_Master_Read(1);
  1850  06D3  3001               	movlw	1
  1851  06D4  00F0               	movwf	I2C_Master_Read@a
  1852  06D5  3000               	movlw	0
  1853  06D6  00F1               	movwf	I2C_Master_Read@a+1
  1854  06D7  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1855  06DC  0870               	movf	?_I2C_Master_Read,w
  1856  06DD  00F6               	movwf	??_READ_RTC
  1857  06DE  0876               	movf	??_READ_RTC,w
  1858  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1859  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1860  06E1  00BB               	movwf	_minute
  1861                           
  1862                           ;RTC.c: 38:     hour = I2C_Master_Read(1);
  1863  06E2  3001               	movlw	1
  1864  06E3  00F0               	movwf	I2C_Master_Read@a
  1865  06E4  3000               	movlw	0
  1866  06E5  00F1               	movwf	I2C_Master_Read@a+1
  1867  06E6  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1868  06EB  0870               	movf	?_I2C_Master_Read,w
  1869  06EC  00F6               	movwf	??_READ_RTC
  1870  06ED  0876               	movf	??_READ_RTC,w
  1871  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1872  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1873  06F0  00BA               	movwf	_hour
  1874                           
  1875                           ;RTC.c: 39:     I2C_Master_Read(1);
  1876  06F1  3001               	movlw	1
  1877  06F2  00F0               	movwf	I2C_Master_Read@a
  1878  06F3  3000               	movlw	0
  1879  06F4  00F1               	movwf	I2C_Master_Read@a+1
  1880  06F5  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1881                           
  1882                           ;RTC.c: 40:     m_day = I2C_Master_Read(1);
  1883  06FA  3001               	movlw	1
  1884  06FB  00F0               	movwf	I2C_Master_Read@a
  1885  06FC  3000               	movlw	0
  1886  06FD  00F1               	movwf	I2C_Master_Read@a+1
  1887  06FE  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1888  0703  0870               	movf	?_I2C_Master_Read,w
  1889  0704  00F6               	movwf	??_READ_RTC
  1890  0705  0876               	movf	??_READ_RTC,w
  1891  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0708  00B9               	movwf	_m_day
  1894                           
  1895                           ;RTC.c: 41:     month = I2C_Master_Read(1);
  1896  0709  3001               	movlw	1
  1897  070A  00F0               	movwf	I2C_Master_Read@a
  1898  070B  3000               	movlw	0
  1899  070C  00F1               	movwf	I2C_Master_Read@a+1
  1900  070D  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1901  0712  0870               	movf	?_I2C_Master_Read,w
  1902  0713  00F6               	movwf	??_READ_RTC
  1903  0714  0876               	movf	??_READ_RTC,w
  1904  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0717  00B8               	movwf	_month
  1907                           
  1908                           ;RTC.c: 42:     year = I2C_Master_Read(0);
  1909  0718  3000               	movlw	0
  1910  0719  00F0               	movwf	I2C_Master_Read@a
  1911  071A  00F1               	movwf	I2C_Master_Read@a+1
  1912  071B  120A  118A  2479  120A  118A  	fcall	_I2C_Master_Read
  1913  0720  0870               	movf	?_I2C_Master_Read,w
  1914  0721  00F6               	movwf	??_READ_RTC
  1915  0722  0876               	movf	??_READ_RTC,w
  1916  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0725  00B7               	movwf	_year
  1919                           
  1920                           ;RTC.c: 43:     I2C_Master_Stop();
  1921  0726  120A  118A  242C  120A  118A  	fcall	_I2C_Master_Stop
  1922  072B                     l1260:
  1923                           
  1924                           ;RTC.c: 44:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1925  072B  3082               	movlw	130
  1926  072C  00F7               	movwf	??_READ_RTC+1
  1927  072D  30DD               	movlw	221
  1928  072E  00F6               	movwf	??_READ_RTC
  1929  072F                     u727:
  1930  072F  0BF6               	decfsz	??_READ_RTC,f
  1931  0730  2F2F               	goto	u727
  1932  0731  0BF7               	decfsz	??_READ_RTC+1,f
  1933  0732  2F2F               	goto	u727
  1934  0733  2F34               	nop2
  1935  0734                     l201:
  1936  0734  0008               	return
  1937  0735                     __end_of_READ_RTC:
  1938                           
  1939                           	psect	text9
  1940  043E                     __ptext9:	
  1941 ;; *************** function _I2C_Master_Write *****************
  1942 ;; Defined at:
  1943 ;;		line 65 in file "I2C.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  d               2    0[COMMON] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         2       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    1
  1964 ;; This function calls:
  1965 ;;		_I2C_Master_Wait
  1966 ;; This function is called by:
  1967 ;;		_READ_RTC
  1968 ;;		_SET_RTC
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _I2C_Master_Write
  1974  043E                     _I2C_Master_Write:
  1975  043E                     l1180:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1978                           
  1979                           
  1980                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1981  043E  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  1982  0443                     l1182:
  1983                           
  1984                           ;I2C.c: 68:     SSPBUF = d;
  1985  0443  0870               	movf	I2C_Master_Write@d,w
  1986  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0446  0093               	movwf	19	;volatile
  1989  0447                     l111:
  1990  0447  0008               	return
  1991  0448                     __end_of_I2C_Master_Write:
  1992                           
  1993                           	psect	text10
  1994  042C                     __ptext10:	
  1995 ;; *************** function _I2C_Master_Stop *****************
  1996 ;; Defined at:
  1997 ;;		line 55 in file "I2C.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    1
  2018 ;; This function calls:
  2019 ;;		_I2C_Master_Wait
  2020 ;; This function is called by:
  2021 ;;		_READ_RTC
  2022 ;;		_SET_RTC
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _I2C_Master_Stop
  2028  042C                     _I2C_Master_Stop:
  2029  042C                     l1176:	
  2030                           ;incstack = 0
  2031                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2032                           
  2033                           
  2034                           ;I2C.c: 57:     I2C_Master_Wait();
  2035  042C  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2036  0431                     l1178:
  2037                           
  2038                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2039  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2041  0433  1511               	bsf	17,2	;volatile
  2042  0434                     l108:
  2043  0434  0008               	return
  2044  0435                     __end_of_I2C_Master_Stop:
  2045                           
  2046                           	psect	text11
  2047  0423                     __ptext11:	
  2048 ;; *************** function _I2C_Master_Start *****************
  2049 ;; Defined at:
  2050 ;;		line 39 in file "I2C.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    1
  2071 ;; This function calls:
  2072 ;;		_I2C_Master_Wait
  2073 ;; This function is called by:
  2074 ;;		_READ_RTC
  2075 ;;		_SET_RTC
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _I2C_Master_Start
  2081  0423                     _I2C_Master_Start:
  2082  0423                     l1168:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2085                           
  2086                           
  2087                           ;I2C.c: 41:     I2C_Master_Wait();
  2088  0423  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2089  0428                     l1170:
  2090                           
  2091                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2092  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2094  042A  1411               	bsf	17,0	;volatile
  2095  042B                     l102:
  2096  042B  0008               	return
  2097  042C                     __end_of_I2C_Master_Start:
  2098                           
  2099                           	psect	text12
  2100  041A                     __ptext12:	
  2101 ;; *************** function _I2C_Master_RepeatedStart *****************
  2102 ;; Defined at:
  2103 ;;		line 47 in file "I2C.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    1
  2124 ;; This function calls:
  2125 ;;		_I2C_Master_Wait
  2126 ;; This function is called by:
  2127 ;;		_READ_RTC
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _I2C_Master_RepeatedStart
  2133  041A                     _I2C_Master_RepeatedStart:
  2134  041A                     l1172:	
  2135                           ;incstack = 0
  2136                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2137                           
  2138                           
  2139                           ;I2C.c: 49:     I2C_Master_Wait();
  2140  041A  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2141  041F                     l1174:
  2142                           
  2143                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2144  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2145  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2146  0421  1491               	bsf	17,1	;volatile
  2147  0422                     l105:
  2148  0422  0008               	return
  2149  0423                     __end_of_I2C_Master_RepeatedStart:
  2150                           
  2151                           	psect	text13
  2152  0479                     __ptext13:	
  2153 ;; *************** function _I2C_Master_Read *****************
  2154 ;; Defined at:
  2155 ;;		line 74 in file "I2C.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  a               2    0[COMMON] unsigned short 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  temp            2    4[COMMON] unsigned short 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2    0[COMMON] unsigned short 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         2       0       0       0       0
  2170 ;;      Locals:         2       0       0       0       0
  2171 ;;      Temps:          2       0       0       0       0
  2172 ;;      Totals:         6       0       0       0       0
  2173 ;;Total ram usage:        6 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    1
  2176 ;; This function calls:
  2177 ;;		_I2C_Master_Wait
  2178 ;; This function is called by:
  2179 ;;		_READ_RTC
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _I2C_Master_Read
  2185  0479                     _I2C_Master_Read:
  2186  0479                     l1184:	
  2187                           ;incstack = 0
  2188                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2189                           
  2190                           
  2191                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2192  0479  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2193  047E                     l1186:
  2194                           
  2195                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2196  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2197  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2198  0480  1591               	bsf	17,3	;volatile
  2199                           
  2200                           ;I2C.c: 79:     I2C_Master_Wait();
  2201  0481  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2202  0486                     l1188:
  2203                           
  2204                           ;I2C.c: 80:     temp = SSPBUF;
  2205  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0488  0813               	movf	19,w	;volatile
  2208  0489  00F2               	movwf	??_I2C_Master_Read
  2209  048A  01F3               	clrf	??_I2C_Master_Read+1
  2210  048B  0872               	movf	??_I2C_Master_Read,w
  2211  048C  00F4               	movwf	I2C_Master_Read@temp
  2212  048D  0873               	movf	??_I2C_Master_Read+1,w
  2213  048E  00F5               	movwf	I2C_Master_Read@temp+1
  2214  048F                     l1190:
  2215                           
  2216                           ;I2C.c: 81:     I2C_Master_Wait();
  2217  048F  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Wait
  2218  0494                     l1192:
  2219                           
  2220                           ;I2C.c: 82:     if(a == 1){
  2221  0494  0370               	decf	I2C_Master_Read@a,w
  2222  0495  0471               	iorwf	I2C_Master_Read@a+1,w
  2223  0496  1D03               	btfss	3,2
  2224  0497  2C99               	goto	u571
  2225  0498  2C9A               	goto	u570
  2226  0499                     u571:
  2227  0499  2C9E               	goto	l114
  2228  049A                     u570:
  2229  049A                     l1194:
  2230                           
  2231                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2232  049A  1683               	bsf	3,5	;RP0=1, select bank1
  2233  049B  1303               	bcf	3,6	;RP1=0, select bank1
  2234  049C  1291               	bcf	17,5	;volatile
  2235                           
  2236                           ;I2C.c: 84:     }else{
  2237  049D  2CA1               	goto	l115
  2238  049E                     l114:
  2239                           
  2240                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2241  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2242  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2243  04A0  1691               	bsf	17,5	;volatile
  2244  04A1                     l115:	
  2245                           ;I2C.c: 86:     }
  2246                           
  2247                           
  2248                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2249  04A1  1611               	bsf	17,4	;volatile
  2250  04A2                     l1196:
  2251                           
  2252                           ;I2C.c: 88:     return temp;
  2253  04A2  0875               	movf	I2C_Master_Read@temp+1,w
  2254  04A3  00F1               	movwf	?_I2C_Master_Read+1
  2255  04A4  0874               	movf	I2C_Master_Read@temp,w
  2256  04A5  00F0               	movwf	?_I2C_Master_Read
  2257  04A6                     l116:
  2258  04A6  0008               	return
  2259  04A7                     __end_of_I2C_Master_Read:
  2260                           
  2261                           	psect	text14
  2262  0453                     __ptext14:	
  2263 ;; *************** function _I2C_Master_Wait *****************
  2264 ;; Defined at:
  2265 ;;		line 32 in file "I2C.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_I2C_Master_Start
  2289 ;;		_I2C_Master_RepeatedStart
  2290 ;;		_I2C_Master_Stop
  2291 ;;		_I2C_Master_Write
  2292 ;;		_I2C_Master_Read
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _I2C_Master_Wait
  2298  0453                     _I2C_Master_Wait:
  2299  0453                     l1082:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2302                           
  2303  0453                     l96:	
  2304                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2305                           
  2306  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0455  1914               	btfsc	20,2	;volatile
  2309  0456  2C58               	goto	u361
  2310  0457  2C59               	goto	u360
  2311  0458                     u361:
  2312  0458  2C53               	goto	l96
  2313  0459                     u360:
  2314  0459                     l1084:
  2315  0459  0811               	movf	17,w	;volatile
  2316  045A  391F               	andlw	31
  2317  045B  1D03               	btfss	3,2
  2318  045C  2C5E               	goto	u371
  2319  045D  2C5F               	goto	u370
  2320  045E                     u371:
  2321  045E  2C53               	goto	l96
  2322  045F                     u370:
  2323  045F                     l99:
  2324  045F  0008               	return
  2325  0460                     __end_of_I2C_Master_Wait:
  2326                           
  2327                           	psect	text15
  2328  04D7                     __ptext15:	
  2329 ;; *************** function _I2C_Master_Init *****************
  2330 ;; Defined at:
  2331 ;;		line 16 in file "I2C.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  c               4    0[BANK0 ] const unsigned long 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       4       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       4       0       0       0
  2348 ;;      Totals:         0       8       0       0       0
  2349 ;;Total ram usage:        8 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		___lldiv
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _I2C_Master_Init
  2361  04D7                     _I2C_Master_Init:
  2362  04D7                     l1228:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2365                           
  2366                           
  2367                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2368  04D7  3028               	movlw	40
  2369  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2370  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2371  04DA  0094               	movwf	20	;volatile
  2372  04DB                     l1230:
  2373                           
  2374                           ;I2C.c: 19:     SSPCON2 = 0;
  2375  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2376  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2377  04DD  0191               	clrf	17	;volatile
  2378  04DE                     l1232:
  2379                           
  2380                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2381  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2382  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2383  04E0  0820               	movf	I2C_Master_Init@c,w
  2384  04E1  00A4               	movwf	??_I2C_Master_Init
  2385  04E2  0821               	movf	I2C_Master_Init@c+1,w
  2386  04E3  00A5               	movwf	??_I2C_Master_Init+1
  2387  04E4  0822               	movf	I2C_Master_Init@c+2,w
  2388  04E5  00A6               	movwf	??_I2C_Master_Init+2
  2389  04E6  0823               	movf	I2C_Master_Init@c+3,w
  2390  04E7  00A7               	movwf	??_I2C_Master_Init+3
  2391  04E8  3002               	movlw	2
  2392  04E9                     u665:
  2393  04E9  1003               	clrc
  2394  04EA  0DA4               	rlf	??_I2C_Master_Init,f
  2395  04EB  0DA5               	rlf	??_I2C_Master_Init+1,f
  2396  04EC  0DA6               	rlf	??_I2C_Master_Init+2,f
  2397  04ED  0DA7               	rlf	??_I2C_Master_Init+3,f
  2398  04EE                     u660:
  2399  04EE  3EFF               	addlw	-1
  2400  04EF  1D03               	skipz
  2401  04F0  2CE9               	goto	u665
  2402  04F1  0827               	movf	??_I2C_Master_Init+3,w
  2403  04F2  00F3               	movwf	___lldiv@divisor+3
  2404  04F3  0826               	movf	??_I2C_Master_Init+2,w
  2405  04F4  00F2               	movwf	___lldiv@divisor+2
  2406  04F5  0825               	movf	??_I2C_Master_Init+1,w
  2407  04F6  00F1               	movwf	___lldiv@divisor+1
  2408  04F7  0824               	movf	??_I2C_Master_Init,w
  2409  04F8  00F0               	movwf	___lldiv@divisor
  2410  04F9  3000               	movlw	0
  2411  04FA  00F7               	movwf	___lldiv@dividend+3
  2412  04FB  307A               	movlw	122
  2413  04FC  00F6               	movwf	___lldiv@dividend+2
  2414  04FD  3012               	movlw	18
  2415  04FE  00F5               	movwf	___lldiv@dividend+1
  2416  04FF  3000               	movlw	0
  2417  0500  00F4               	movwf	___lldiv@dividend
  2418  0501  120A  118A  2568  120A  118A  	fcall	___lldiv
  2419  0506  0870               	movf	?___lldiv,w
  2420  0507  3EFF               	addlw	255
  2421  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2423  050A  0093               	movwf	19	;volatile
  2424  050B                     l1234:
  2425                           
  2426                           ;I2C.c: 21:     SSPSTAT = 0;
  2427  050B  0194               	clrf	20	;volatile
  2428  050C                     l1236:
  2429                           
  2430                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2431  050C  1587               	bsf	7,3	;volatile
  2432  050D                     l1238:
  2433                           
  2434                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2435  050D  1607               	bsf	7,4	;volatile
  2436  050E                     l93:
  2437  050E  0008               	return
  2438  050F                     __end_of_I2C_Master_Init:
  2439                           
  2440                           	psect	text16
  2441  0568                     __ptext16:	
  2442 ;; *************** function ___lldiv *****************
  2443 ;; Defined at:
  2444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  divisor         4    0[COMMON] unsigned long 
  2447 ;;  dividend        4    4[COMMON] unsigned long 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  quotient        4    9[COMMON] unsigned long 
  2450 ;;  counter         1   13[COMMON] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  4    0[COMMON] unsigned long 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         8       0       0       0       0
  2461 ;;      Locals:         5       0       0       0       0
  2462 ;;      Temps:          1       0       0       0       0
  2463 ;;      Totals:        14       0       0       0       0
  2464 ;;Total ram usage:       14 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_I2C_Master_Init
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function ___lldiv
  2475  0568                     ___lldiv:
  2476  0568                     l1204:	
  2477                           ;incstack = 0
  2478                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2479                           
  2480  0568  3000               	movlw	0
  2481  0569  00FC               	movwf	___lldiv@quotient+3
  2482  056A  3000               	movlw	0
  2483  056B  00FB               	movwf	___lldiv@quotient+2
  2484  056C  3000               	movlw	0
  2485  056D  00FA               	movwf	___lldiv@quotient+1
  2486  056E  3000               	movlw	0
  2487  056F  00F9               	movwf	___lldiv@quotient
  2488  0570  0873               	movf	___lldiv@divisor+3,w
  2489  0571  0472               	iorwf	___lldiv@divisor+2,w
  2490  0572  0471               	iorwf	___lldiv@divisor+1,w
  2491  0573  0470               	iorwf	___lldiv@divisor,w
  2492  0574  1903               	skipnz
  2493  0575  2D77               	goto	u591
  2494  0576  2D78               	goto	u590
  2495  0577                     u591:
  2496  0577  2DC5               	goto	l1224
  2497  0578                     u590:
  2498  0578                     l1206:
  2499  0578  01FD               	clrf	___lldiv@counter
  2500  0579  0AFD               	incf	___lldiv@counter,f
  2501  057A  2D88               	goto	l1210
  2502  057B                     l1208:
  2503  057B  3001               	movlw	1
  2504  057C  00F8               	movwf	??___lldiv
  2505  057D                     u605:
  2506  057D  1003               	clrc
  2507  057E  0DF0               	rlf	___lldiv@divisor,f
  2508  057F  0DF1               	rlf	___lldiv@divisor+1,f
  2509  0580  0DF2               	rlf	___lldiv@divisor+2,f
  2510  0581  0DF3               	rlf	___lldiv@divisor+3,f
  2511  0582  0BF8               	decfsz	??___lldiv,f
  2512  0583  2D7D               	goto	u605
  2513  0584  3001               	movlw	1
  2514  0585  00F8               	movwf	??___lldiv
  2515  0586  0878               	movf	??___lldiv,w
  2516  0587  07FD               	addwf	___lldiv@counter,f
  2517  0588                     l1210:
  2518  0588  1FF3               	btfss	___lldiv@divisor+3,7
  2519  0589  2D8B               	goto	u611
  2520  058A  2D8C               	goto	u610
  2521  058B                     u611:
  2522  058B  2D7B               	goto	l1208
  2523  058C                     u610:
  2524  058C                     l1212:
  2525  058C  3001               	movlw	1
  2526  058D  00F8               	movwf	??___lldiv
  2527  058E                     u625:
  2528  058E  1003               	clrc
  2529  058F  0DF9               	rlf	___lldiv@quotient,f
  2530  0590  0DFA               	rlf	___lldiv@quotient+1,f
  2531  0591  0DFB               	rlf	___lldiv@quotient+2,f
  2532  0592  0DFC               	rlf	___lldiv@quotient+3,f
  2533  0593  0BF8               	decfsz	??___lldiv,f
  2534  0594  2D8E               	goto	u625
  2535  0595                     l1214:
  2536  0595  0873               	movf	___lldiv@divisor+3,w
  2537  0596  0277               	subwf	___lldiv@dividend+3,w
  2538  0597  1D03               	skipz
  2539  0598  2DA3               	goto	u635
  2540  0599  0872               	movf	___lldiv@divisor+2,w
  2541  059A  0276               	subwf	___lldiv@dividend+2,w
  2542  059B  1D03               	skipz
  2543  059C  2DA3               	goto	u635
  2544  059D  0871               	movf	___lldiv@divisor+1,w
  2545  059E  0275               	subwf	___lldiv@dividend+1,w
  2546  059F  1D03               	skipz
  2547  05A0  2DA3               	goto	u635
  2548  05A1  0870               	movf	___lldiv@divisor,w
  2549  05A2  0274               	subwf	___lldiv@dividend,w
  2550  05A3                     u635:
  2551  05A3  1C03               	skipc
  2552  05A4  2DA6               	goto	u631
  2553  05A5  2DA7               	goto	u630
  2554  05A6                     u631:
  2555  05A6  2DB6               	goto	l1220
  2556  05A7                     u630:
  2557  05A7                     l1216:
  2558  05A7  0870               	movf	___lldiv@divisor,w
  2559  05A8  02F4               	subwf	___lldiv@dividend,f
  2560  05A9  0871               	movf	___lldiv@divisor+1,w
  2561  05AA  1C03               	skipc
  2562  05AB  0F71               	incfsz	___lldiv@divisor+1,w
  2563  05AC  02F5               	subwf	___lldiv@dividend+1,f
  2564  05AD  0872               	movf	___lldiv@divisor+2,w
  2565  05AE  1C03               	skipc
  2566  05AF  0F72               	incfsz	___lldiv@divisor+2,w
  2567  05B0  02F6               	subwf	___lldiv@dividend+2,f
  2568  05B1  0873               	movf	___lldiv@divisor+3,w
  2569  05B2  1C03               	skipc
  2570  05B3  0F73               	incfsz	___lldiv@divisor+3,w
  2571  05B4  02F7               	subwf	___lldiv@dividend+3,f
  2572  05B5                     l1218:
  2573  05B5  1479               	bsf	___lldiv@quotient,0
  2574  05B6                     l1220:
  2575  05B6  3001               	movlw	1
  2576  05B7                     u645:
  2577  05B7  1003               	clrc
  2578  05B8  0CF3               	rrf	___lldiv@divisor+3,f
  2579  05B9  0CF2               	rrf	___lldiv@divisor+2,f
  2580  05BA  0CF1               	rrf	___lldiv@divisor+1,f
  2581  05BB  0CF0               	rrf	___lldiv@divisor,f
  2582  05BC  3EFF               	addlw	-1
  2583  05BD  1D03               	skipz
  2584  05BE  2DB7               	goto	u645
  2585  05BF                     l1222:
  2586  05BF  3001               	movlw	1
  2587  05C0  02FD               	subwf	___lldiv@counter,f
  2588  05C1  1D03               	btfss	3,2
  2589  05C2  2DC4               	goto	u651
  2590  05C3  2DC5               	goto	u650
  2591  05C4                     u651:
  2592  05C4  2D8C               	goto	l1212
  2593  05C5                     u650:
  2594  05C5                     l1224:
  2595  05C5  087C               	movf	___lldiv@quotient+3,w
  2596  05C6  00F3               	movwf	?___lldiv+3
  2597  05C7  087B               	movf	___lldiv@quotient+2,w
  2598  05C8  00F2               	movwf	?___lldiv+2
  2599  05C9  087A               	movf	___lldiv@quotient+1,w
  2600  05CA  00F1               	movwf	?___lldiv+1
  2601  05CB  0879               	movf	___lldiv@quotient,w
  2602  05CC  00F0               	movwf	?___lldiv
  2603  05CD                     l326:
  2604  05CD  0008               	return
  2605  05CE                     __end_of___lldiv:
  2606  007E                     btemp	set	126	;btemp
  2607  007E                     wtemp0	set	126
  2608                           
  2609                           	psect	config
  2610                           
  2611                           ;Config register CONFIG1 @ 0x2007
  2612                           ;	Oscillator Selection bits
  2613                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2614                           ;	Watchdog Timer Enable bit
  2615                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2616                           ;	Power-up Timer Enable bit
  2617                           ;	PWRTE = OFF, PWRT disabled
  2618                           ;	RE3/MCLR pin function select bit
  2619                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2620                           ;	Code Protection bit
  2621                           ;	CP = OFF, Program memory code protection is disabled
  2622                           ;	Data Code Protection bit
  2623                           ;	CPD = OFF, Data memory code protection is disabled
  2624                           ;	Brown Out Reset Selection bits
  2625                           ;	BOREN = OFF, BOR disabled
  2626                           ;	Internal External Switchover bit
  2627                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2628                           ;	Fail-Safe Clock Monitor Enabled bit
  2629                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2630                           ;	Low Voltage Programming Enable bit
  2631                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2632                           ;	In-Circuit Debugger Mode bit
  2633                           ;	DEBUG = 0x1, unprogrammed default
  2634  2007                     	org	8199
  2635  2007  20D4               	dw	8404
  2636                           
  2637                           ;Config register CONFIG2 @ 0x2008
  2638                           ;	Brown-out Reset Selection bit
  2639                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2640                           ;	Flash Program Memory Self Write Enable bits
  2641                           ;	WRT = OFF, Write protection off
  2642  2008                     	org	8200
  2643  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SET_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _READ_RTC->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_SET_RTC
    _SET_RTC->_decimal_to_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    4665
                                              9 BANK0     12    12      0
                    _I2C_Master_Init
                           _READ_RTC
                            _SET_RTC
                          _UART_INIT
                          _UART_READ
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RTC                                              8     4      4    2407
                                              1 BANK0      8     4      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0     944
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _READ_RTC                                             2     2      0    1511
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _READ_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SET_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _UART_INIT
   _UART_READ
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 18:18:49 2021

                                _i 003D                                 l93 050E  
                               l96 0453                                 l99 045F  
                     ___awdiv@sign 0076                     _decimal_to_bcd 04A7  
                              l102 042B                                l111 0447  
                              l105 0422                                l201 0734  
                              l114 049E                                l115 04A1  
                              l116 04A6                                l108 0434  
                              l204 07F0                                l151 0448  
                              l144 0478                                l154 0452  
                              l148 043D                                l326 05CD  
                              l443 0634                                l198 04D6  
                              l456 0567                                _GIE 005F  
                              u400 05EF                                u401 05EE  
                              u420 0601                                u500 052A  
                              u421 0600                                u501 0529  
                              u415 05F3                                u360 0459  
                              u440 0612                                u520 053C  
                              u361 0458                                u441 0611  
                              u521 053B                                u610 058C  
                              u370 045F                                u530 0546  
                              u611 058B                                u371 045E  
                              u435 0602                                u531 0545  
                              u515 052E                                u460 0626  
                              u380 05D3                                u605 057D  
                              u461 0625                                u445 060E  
                              u381 05D2                                u630 05A7  
                              u470 062B                                u390 05DE  
                              u550 0559                                u631 05A6  
                              u471 062A                                u455 061A  
                              u391 05DD                                u551 0558  
                              u535 0542                                u560 055E  
                              u480 0514                                u625 058E  
                              u561 055D                                u545 054D  
                              u481 0513                                u650 05C5  
                              u570 049A                                u490 051F  
                              u651 05C4                                u635 05A3  
                              u571 0499                                u491 051E  
                              u660 04EE                                u645 05B7  
                              u717 07E9                                u590 0578  
                              u670 044E                                u591 0577  
                              u727 072F                                u671 044D  
                              u680 043B                                u665 04E9  
                              u585 04BD                                u681 043A  
                     ___awmod@sign 0076                               l1100 05E7  
                             l1110 05FD                               l1102 05E9  
                             l1120 0620                               l1112 0601  
                             l1104 05EF                               l1200 04AA  
                             l1210 0588                               l1114 0612  
                             l1106 05F2                               l1122 0626  
                             l1130 050F                               l1220 05B6  
                             l1212 058C                               l1204 0568  
                             l1124 062B                               l1116 0618  
                             l1108 05F9                               l1140 051F  
                             l1132 0510                               l1300 064A  
                             l1222 05BF                               l1214 0595  
                             l1206 0578                               l1230 04DB  
                             l1126 0630                               l1118 0619  
                             l1150 0538                               l1142 0524  
                             l1134 0514                               l1310 0651  
                             l1302 064B                               l1216 05A7  
                             l1208 057B                               l1224 05C5  
                             l1232 04DE                               l1152 053C  
                             l1144 052A                               l1160 0559  
                             l1136 0519                               l1240 0738  
                             l1320 0656                               l1312 0652  
                             l1304 064E                               l1218 05B5  
                             l1234 050B                               l1082 0453  
                             l1170 0428                               l1090 05D3  
                             l1162 055E                               l1154 0546  
                             l1146 052D                               l1138 051B  
                             l1242 07E1                               l1250 046D  
                             l1330 0680                               l1322 0656  
                             l1314 0652                               l1306 064F  
                             l1236 050C                               l1228 04D7  
                             l1084 0459                               l1172 041A  
                             l1180 043E                               l1260 072B  
                             l1092 05D8                               l1164 0563  
                             l1156 054C                               l1148 0534  
                             l1252 046F                               l1332 0685  
                             l1324 0656                               l1316 0656  
                             l1308 0650                               l1238 050D  
                             l1190 048F                               l1174 041F  
                             l1182 0443                               l1094 05DA  
                             l1086 05CE                               l1158 0553  
                             l1254 0471                               l1246 0460  
                             l1270 043B                               l1334 069A  
                             l1326 0663                               l1318 0656  
                             l1192 0494                               l1184 0479  
                             l1168 0423                               l1176 042C  
                             l1096 05DE                               l1088 05CF  
                             l1256 0475                               l1248 046A  
                             l1272 043C                               l1264 0448  
                             l1328 067B                               l1280 063C  
                             l1194 049A                               l1186 047E  
                             l1178 0431                               l1258 06A0  
                             l1098 05E3                               l1266 044E  
                             l1290 0643                               l1282 063D  
                             l1196 04A2                               l1188 0486  
                             l1268 0435                               l1292 0646  
                             l1284 063E                               l1276 0635  
                             l1294 0647                               l1286 063F  
                             l1278 063B                               l1296 0648  
                             l1288 0642                               l1298 0649  
                             _PEIE 005E                    __end_of_SET_RTC 07F1  
 __end_of_I2C_Master_RepeatedStart 0423                               _main 0635  
                             _hour 003A                               _year 0037  
                             btemp 007E                               start 0000  
           __end_of_decimal_to_bcd 04D7                   ?_I2C_Master_Init 0020  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                   __end_of_READ_RTC 0735  
                            ?_main 0070                    __end_of___awdiv 0635  
                  __end_of___awmod 0568                              _ANSEL 0188  
                  __end_of___lldiv 05CE                    ___awdiv@divisor 0070  
                  ___awdiv@counter 0075                              _RCREG 001A  
                            _RCSTA 0018                        ?_UART_WRITE 0070  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _TXREG 0019                              _TXSTA 0098  
               __size_of_UART_INIT 0019                 __size_of_UART_READ 0009  
                            _Start 0035                              _m_day 0039  
                            _month 0038                              status 0003  
                            wtemp0 007E                    __initialization 07F1  
                     __end_of_main 06A0                    ?_decimal_to_bcd 0070  
                           ??_main 0029                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
                        ??_SET_RTC 0025                 ??_I2C_Master_Write 0072  
                 ___awdiv@dividend 0072                             _ANSELH 0189  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
              __size_of_UART_WRITE 000B                  __end_of_UART_INIT 0479  
                __end_of_UART_READ 043E           _I2C_Master_RepeatedStart 041A  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lldiv 0078                   ___awdiv@quotient 0077  
                           _minute 003B                             _second 003C  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
                   UART_WRITE@data 0070            __end_of__initialization 07FC  
                        ?_READ_RTC 0070                     __pcstackCOMMON 0070  
                       __pbssBANK0 0035                         ??_READ_RTC 0076  
                       __pmaintext 0635                       ??_UART_WRITE 0072  
                          _SET_RTC 0735                            _SSPCON2 0091  
                          _SSPSTAT 0094                            _Bandera 0036  
                 ??_decimal_to_bcd 0079                 __end_of_UART_WRITE 0453  
                          ___awdiv 05CE                            ___awmod 050F  
                          ___lldiv 0568                            __ptext1 0448  
                          __ptext2 0435                            __ptext3 0460  
                          __ptext4 0735                            __ptext5 04A7  
                          __ptext6 050F                            __ptext7 05CE  
                          __ptext8 06A0                            __ptext9 043E  
                 ___awmod@dividend 0072           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 000D  
                      SET_RTC@hour 0021           __size_of_I2C_Master_Stop 0009  
                      SET_RTC@year 0024               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          _UART_INIT 0460  
                        _UART_READ 0435                          _TRISCbits 0087  
                        _TXSTAbits 0098                  __size_of_READ_RTC 0095  
                       ?_UART_INIT 0070                         ?_UART_READ 0070  
                      _BAUDCTLbits 0187                start_initialization 07F1  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
                        ___latbits 0002                      __pcstackBANK0 0020  
                         ?_SET_RTC 0021                   _I2C_Master_Start 0423  
                 _I2C_Master_Write 043E                           ?___awdiv 0070  
                         ?___awmod 0070                           ?___lldiv 0070  
                      ??_UART_INIT 0070                        ??_UART_READ 0070  
                         _READ_RTC 06A0                           _PIE1bits 008C  
                         _PIR1bits 000C                      SET_RTC@minute 0028  
              I2C_Master_Read@temp 0074                   __size_of_SET_RTC 00BC  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0067  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0066            __size_of_decimal_to_bcd 0030  
                  _I2C_Master_Init 04D7                    _I2C_Master_Read 0479  
                  _I2C_Master_Wait 0453                    _I2C_Master_Stop 042C  
                         __ptext10 042C                           __ptext11 0423  
                         __ptext12 041A                           __ptext13 0479  
                         __ptext14 0453                           __ptext15 04D7  
                         __ptext16 0568                      __size_of_main 006B  
                     SET_RTC@m_day 0022                       SET_RTC@month 0023  
             decimal_to_bcd@number 0020                           main@hour 0033  
         __end_of_I2C_Master_Start 042C           __end_of_I2C_Master_Write 0448  
                       _INTCONbits 000B                   ___lldiv@dividend 0074  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 050F  
          __end_of_I2C_Master_Read 04A7            __end_of_I2C_Master_Wait 0460  
          __end_of_I2C_Master_Stop 0435                         _UART_WRITE 0448  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                      _SSPCON2bits 0091                        main@Bandera 0032  
