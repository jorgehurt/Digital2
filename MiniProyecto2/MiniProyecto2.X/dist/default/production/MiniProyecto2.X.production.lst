

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 11:03:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0019                     _TXREG	set	25
   453  001A                     _RCREG	set	26
   454  0018                     _RCSTA	set	24
   455  000C                     _PIR1bits	set	12
   456  000B                     _INTCONbits	set	11
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  0063                     _SSPIF	set	99
   465  005E                     _PEIE	set	94
   466  005F                     _GIE	set	95
   467  0098                     _TXSTAbits	set	152
   468  0098                     _TXSTA	set	152
   469  0099                     _SPBRG	set	153
   470  009A                     _SPBRGH	set	154
   471  008C                     _PIE1bits	set	140
   472  0091                     _SSPCON2bits	set	145
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  0089                     _TRISE	set	137
   477  0087                     _TRISCbits	set	135
   478  0088                     _TRISD	set	136
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  008F                     _OSCCONbits	set	143
   482  0463                     _SSPIE	set	1123
   483  043C                     _TRISC4	set	1084
   484  043B                     _TRISC3	set	1083
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  07F1                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07F1                     __initialization:
   494                           
   495                           ; Clear objects allocated to BANK0
   496  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   497  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   498  07F3  01B3               	clrf	__pbssBANK0& (0+127)
   499  07F4  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   500  07F5  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   501  07F6  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   502  07F7  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   503  07F8  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   504  07F9  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   505  07FA  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   506  07FB  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   507  07FC                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  07FC                     __end_of__initialization:
   511  07FC  0183               	clrf	3
   512  07FD  120A  118A  2E22   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssBANK0
   515  0033                     __pbssBANK0:
   516  0033                     _Start:
   517  0033                     	ds	1
   518  0034                     _Bandera:
   519  0034                     	ds	1
   520  0035                     _year:
   521  0035                     	ds	1
   522  0036                     _month:
   523  0036                     	ds	1
   524  0037                     _m_day:
   525  0037                     	ds	1
   526  0038                     _hour:
   527  0038                     	ds	1
   528  0039                     _minute:
   529  0039                     	ds	1
   530  003A                     _second:
   531  003A                     	ds	1
   532  003B                     _i:
   533  003B                     	ds	1
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_UART_INIT:
   538  0070                     ??_UART_INIT:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_READ_RTC:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_UART_WRITE:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_UART_READ:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_UART_READ:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_I2C_Master_Wait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_I2C_Master_Start:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_I2C_Master_Start:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_Master_RepeatedStart:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_I2C_Master_RepeatedStart:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Write:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_decimal_to_bcd:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_I2C_Master_Read:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?___awdiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___awmod:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___lldiv:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     I2C_Master_Write@d:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     I2C_Master_Read@a:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     UART_WRITE@data:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___awdiv@divisor:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lldiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 4 bytes @ 0x0
   618  0070                     	ds	2
   619  0072                     ??_UART_WRITE:
   620  0072                     ??_I2C_Master_Write:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ??_I2C_Master_Read:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ___awdiv@dividend:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ___awmod@dividend:	
   630                           ; 2 bytes @ 0x2
   631                           
   632                           
   633                           ; 2 bytes @ 0x2
   634  0072                     	ds	2
   635  0074                     ??___awdiv:
   636  0074                     ??___awmod:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     I2C_Master_Read@temp:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ___lldiv@dividend:	
   643                           ; 2 bytes @ 0x4
   644                           
   645                           
   646                           ; 4 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ___awdiv@counter:
   649  0075                     ___awmod@counter:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 1 bytes @ 0x5
   654  0075                     	ds	1
   655  0076                     ??_READ_RTC:
   656  0076                     ___awdiv@sign:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     ___awmod@sign:	
   660                           ; 1 bytes @ 0x6
   661                           
   662                           
   663                           ; 1 bytes @ 0x6
   664  0076                     	ds	1
   665  0077                     ___awdiv@quotient:
   666                           
   667                           ; 2 bytes @ 0x7
   668  0077                     	ds	1
   669  0078                     ??___lldiv:
   670                           
   671                           ; 1 bytes @ 0x8
   672  0078                     	ds	1
   673  0079                     ??_decimal_to_bcd:
   674  0079                     ___lldiv@quotient:	
   675                           ; 1 bytes @ 0x9
   676                           
   677                           
   678                           ; 4 bytes @ 0x9
   679  0079                     	ds	4
   680  007D                     ___lldiv@counter:
   681                           
   682                           ; 1 bytes @ 0xD
   683  007D                     	ds	1
   684                           
   685                           	psect	cstackBANK0
   686  0020                     __pcstackBANK0:
   687  0020                     ?_I2C_Master_Init:
   688  0020                     decimal_to_bcd@number:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0020                     I2C_Master_Init@c:	
   692                           ; 1 bytes @ 0x0
   693                           
   694                           
   695                           ; 4 bytes @ 0x0
   696  0020                     	ds	1
   697  0021                     ?_SET_RTC:
   698  0021                     SET_RTC@hour:	
   699                           ; 1 bytes @ 0x1
   700                           
   701                           
   702                           ; 1 bytes @ 0x1
   703  0021                     	ds	1
   704  0022                     SET_RTC@m_day:
   705                           
   706                           ; 1 bytes @ 0x2
   707  0022                     	ds	1
   708  0023                     SET_RTC@month:
   709                           
   710                           ; 1 bytes @ 0x3
   711  0023                     	ds	1
   712  0024                     ??_I2C_Master_Init:
   713  0024                     SET_RTC@year:	
   714                           ; 1 bytes @ 0x4
   715                           
   716                           
   717                           ; 1 bytes @ 0x4
   718  0024                     	ds	1
   719  0025                     ??_SET_RTC:
   720                           
   721                           ; 1 bytes @ 0x5
   722  0025                     	ds	3
   723  0028                     SET_RTC@minute:
   724                           
   725                           ; 1 bytes @ 0x8
   726  0028                     	ds	1
   727  0029                     ??_main:
   728                           
   729                           ; 1 bytes @ 0x9
   730  0029                     	ds	7
   731  0030                     main@Bandera:
   732                           
   733                           ; 1 bytes @ 0x10
   734  0030                     	ds	1
   735  0031                     main@minute:
   736                           
   737                           ; 1 bytes @ 0x11
   738  0031                     	ds	1
   739  0032                     main@hour:
   740                           
   741                           ; 1 bytes @ 0x12
   742  0032                     	ds	1
   743                           
   744                           	psect	maintext
   745  0622                     __pmaintext:	
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 47 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  hour            1   18[BANK0 ] unsigned char 
   756 ;;  minute          1   17[BANK0 ] unsigned char 
   757 ;;  Bandera         1   16[BANK0 ] unsigned char 
   758 ;;  year            1    0        unsigned char 
   759 ;;  month           1    0        unsigned char 
   760 ;;  m_day           1    0        unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : B00/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       6       0       0       0
   772 ;;      Temps:          0       4       0       0       0
   773 ;;      Totals:         0      10       0       0       0
   774 ;;Total ram usage:       10 bytes
   775 ;; Hardware stack levels required when called:    3
   776 ;; This function calls:
   777 ;;		_I2C_Master_Init
   778 ;;		_READ_RTC
   779 ;;		_SET_RTC
   780 ;;		_UART_INIT
   781 ;;		_UART_READ
   782 ;;		_UART_WRITE
   783 ;; This function is called by:
   784 ;;		Startup code after reset
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _main
   790  0622                     _main:
   791  0622                     l1280:	
   792                           ;incstack = 0
   793                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   794                           
   795  0622  3070               	movlw	112
   796  0623  1683               	bsf	3,5	;RP0=1, select bank1
   797  0624  1303               	bcf	3,6	;RP1=0, select bank1
   798  0625  048F               	iorwf	15,f	;volatile
   799  0626                     l1282:
   800  0626  118F               	bcf	15,3	;volatile
   801  0627                     l1284:
   802  0627  110F               	bcf	15,2	;volatile
   803  0628                     l1286:
   804  0628  108F               	bcf	15,1	;volatile
   805  0629                     l1288:
   806  0629  140F               	bsf	15,0	;volatile
   807  062A                     l1290:
   808  062A  1683               	bsf	3,5	;RP0=1, select bank3
   809  062B  1703               	bsf	3,6	;RP1=1, select bank3
   810  062C  0188               	clrf	8	;volatile
   811  062D                     l1292:
   812  062D  0189               	clrf	9	;volatile
   813  062E                     l1294:
   814  062E  1683               	bsf	3,5	;RP0=1, select bank1
   815  062F  1303               	bcf	3,6	;RP1=0, select bank1
   816  0630  0185               	clrf	5	;volatile
   817  0631                     l1296:
   818  0631  0186               	clrf	6	;volatile
   819  0632                     l1298:
   820  0632  0188               	clrf	8	;volatile
   821  0633                     l1300:
   822  0633  1787               	bsf	7,7	;volatile
   823  0634                     l1302:
   824  0634  1307               	bcf	7,6	;volatile
   825  0635                     l1304:
   826  0635  0189               	clrf	9	;volatile
   827  0636                     l1306:
   828  0636  1283               	bcf	3,5	;RP0=0, select bank0
   829  0637  1303               	bcf	3,6	;RP1=0, select bank0
   830  0638  0185               	clrf	5	;volatile
   831  0639                     l1308:
   832  0639  0186               	clrf	6	;volatile
   833  063A                     l1310:
   834  063A  0187               	clrf	7	;volatile
   835  063B                     l1312:
   836  063B  0188               	clrf	8	;volatile
   837  063C                     l1314:
   838  063C  0189               	clrf	9	;volatile
   839  063D                     l1316:
   840  063D  302D               	movlw	45
   841  063E  00A9               	movwf	??_main
   842  063F  0829               	movf	??_main,w
   843  0640  00B1               	movwf	main@minute
   844  0641                     l1318:
   845  0641  3006               	movlw	6
   846  0642  00A9               	movwf	??_main
   847  0643  0829               	movf	??_main,w
   848  0644  00B2               	movwf	main@hour
   849  0645                     l1320:
   850  0645                     l1322:
   851  0645                     l1324:
   852  0645                     l1326:
   853  0645                     l1328:
   854  0645  3000               	movlw	0
   855  0646  00A3               	movwf	I2C_Master_Init@c+3
   856  0647  3001               	movlw	1
   857  0648  00A2               	movwf	I2C_Master_Init@c+2
   858  0649  3086               	movlw	134
   859  064A  00A1               	movwf	I2C_Master_Init@c+1
   860  064B  30A0               	movlw	160
   861  064C  00A0               	movwf	I2C_Master_Init@c
   862  064D  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Init
   863  0652                     l1330:
   864  0652  3006               	movlw	6
   865  0653  1283               	bcf	3,5	;RP0=0, select bank0
   866  0654  1303               	bcf	3,6	;RP1=0, select bank0
   867  0655  00A9               	movwf	??_main
   868  0656  0829               	movf	??_main,w
   869  0657  00A1               	movwf	SET_RTC@hour
   870  0658  3005               	movlw	5
   871  0659  00AA               	movwf	??_main+1
   872  065A  082A               	movf	??_main+1,w
   873  065B  00A2               	movwf	SET_RTC@m_day
   874  065C  3003               	movlw	3
   875  065D  00AB               	movwf	??_main+2
   876  065E  082B               	movf	??_main+2,w
   877  065F  00A3               	movwf	SET_RTC@month
   878  0660  3015               	movlw	21
   879  0661  00AC               	movwf	??_main+3
   880  0662  082C               	movf	??_main+3,w
   881  0663  00A4               	movwf	SET_RTC@year
   882  0664  302D               	movlw	45
   883  0665  120A  118A  2735  120A  118A  	fcall	_SET_RTC
   884  066A                     l1332:
   885  066A  120A  118A  244D  120A  118A  	fcall	_UART_INIT
   886  066F                     l1334:
   887  066F  120A  118A  26A0  120A  118A  	fcall	_READ_RTC
   888  0674                     l1336:
   889  0674  1283               	bcf	3,5	;RP0=0, select bank0
   890  0675  1303               	bcf	3,6	;RP1=0, select bank0
   891  0676  0831               	movf	main@minute,w
   892  0677  00A9               	movwf	??_main
   893  0678  01AA               	clrf	??_main+1
   894  0679  0829               	movf	??_main,w
   895  067A  00F0               	movwf	UART_WRITE@data
   896  067B  082A               	movf	??_main+1,w
   897  067C  00F1               	movwf	UART_WRITE@data+1
   898  067D  120A  118A  2435  120A  118A  	fcall	_UART_WRITE
   899  0682                     l1338:
   900  0682  1283               	bcf	3,5	;RP0=0, select bank0
   901  0683  1303               	bcf	3,6	;RP1=0, select bank0
   902  0684  0832               	movf	main@hour,w
   903  0685  00A9               	movwf	??_main
   904  0686  01AA               	clrf	??_main+1
   905  0687  0829               	movf	??_main,w
   906  0688  00F0               	movwf	UART_WRITE@data
   907  0689  082A               	movf	??_main+1,w
   908  068A  00F1               	movwf	UART_WRITE@data+1
   909  068B  120A  118A  2435  120A  118A  	fcall	_UART_WRITE
   910  0690                     l1340:
   911  0690  120A  118A  2422  120A  118A  	fcall	_UART_READ
   912  0695  1283               	bcf	3,5	;RP0=0, select bank0
   913  0696  1303               	bcf	3,6	;RP1=0, select bank0
   914  0697  00A9               	movwf	??_main
   915  0698  0829               	movf	??_main,w
   916  0699  00B0               	movwf	main@Bandera
   917  069A                     l1342:
   918  069A  0830               	movf	main@Bandera,w
   919  069B  0088               	movwf	8	;volatile
   920  069C  2E6F               	goto	l1334
   921  069D  120A  118A  2800   	ljmp	start
   922  06A0                     __end_of_main:
   923                           
   924                           	psect	text1
   925  0435                     __ptext1:	
   926 ;; *************** function _UART_WRITE *****************
   927 ;; Defined at:
   928 ;;		line 35 in file "eusart.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  data            2    0[COMMON] int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         2       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0
   945 ;;      Totals:         2       0       0       0       0
   946 ;;Total ram usage:        2 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;;		_UART_Write_Text
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _UART_WRITE
   958  0435                     _UART_WRITE:
   959  0435                     l1268:	
   960                           ;incstack = 0
   961                           ; Regs used in _UART_WRITE: [wreg]
   962                           
   963  0435                     l151:	
   964                           ;eusart.c: 36:   while(!TXSTAbits.TRMT);
   965                           
   966  0435  1683               	bsf	3,5	;RP0=1, select bank1
   967  0436  1303               	bcf	3,6	;RP1=0, select bank1
   968  0437  1C98               	btfss	24,1	;volatile
   969  0438  2C3A               	goto	u671
   970  0439  2C3B               	goto	u670
   971  043A                     u671:
   972  043A  2C35               	goto	l151
   973  043B                     u670:
   974  043B                     l1270:
   975                           
   976                           ;eusart.c: 37:   TXREG = data;
   977  043B  0870               	movf	UART_WRITE@data,w
   978  043C  1283               	bcf	3,5	;RP0=0, select bank0
   979  043D  1303               	bcf	3,6	;RP1=0, select bank0
   980  043E  0099               	movwf	25	;volatile
   981  043F                     l154:
   982  043F  0008               	return
   983  0440                     __end_of_UART_WRITE:
   984                           
   985                           	psect	text2
   986  0422                     __ptext2:	
   987 ;; *************** function _UART_READ *****************
   988 ;; Defined at:
   989 ;;		line 29 in file "eusart.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      unsigned char 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;;		_UART_Read_Text
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _UART_READ
  1019  0422                     _UART_READ:
  1020  0422                     l1272:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _UART_READ: [wreg]
  1023                           
  1024                           
  1025                           ;eusart.c: 30:     if(PIR1bits.RCIF==1){
  1026  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0424  1E8C               	btfss	12,5	;volatile
  1029  0425  2C27               	goto	u681
  1030  0426  2C28               	goto	u680
  1031  0427                     u681:
  1032  0427  2C2A               	goto	l148
  1033  0428                     u680:
  1034  0428                     l1274:
  1035                           
  1036                           ;eusart.c: 31:         PIR1bits.RCIF=0;
  1037  0428  128C               	bcf	12,5	;volatile
  1038  0429                     l1276:
  1039                           
  1040                           ;eusart.c: 32:         return RCREG;
  1041  0429  081A               	movf	26,w	;volatile
  1042  042A                     l148:
  1043  042A  0008               	return
  1044  042B                     __end_of_UART_READ:
  1045                           
  1046                           	psect	text3
  1047  044D                     __ptext3:	
  1048 ;; *************** function _UART_INIT *****************
  1049 ;; Defined at:
  1050 ;;		line 14 in file "eusart.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _UART_INIT
  1079  044D                     _UART_INIT:
  1080  044D                     l1250:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _UART_INIT: [wreg+status,2]
  1083                           
  1084                           
  1085                           ;eusart.c: 16:     INTCONbits.GIE = 1;
  1086  044D  178B               	bsf	11,7	;volatile
  1087                           
  1088                           ;eusart.c: 17:     INTCONbits.PEIE = 1;
  1089  044E  170B               	bsf	11,6	;volatile
  1090                           
  1091                           ;eusart.c: 18:     PIE1bits.RCIE = 1;
  1092  044F  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0450  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0451  168C               	bsf	12,5	;volatile
  1095                           
  1096                           ;eusart.c: 19:     PIE1bits.TXIE = 1;
  1097  0452  160C               	bsf	12,4	;volatile
  1098                           
  1099                           ;eusart.c: 21:     PIR1bits.RCIF = 0;
  1100  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0455  128C               	bcf	12,5	;volatile
  1103                           
  1104                           ;eusart.c: 22:     PIR1bits.TXIF = 0;
  1105  0456  120C               	bcf	12,4	;volatile
  1106  0457                     l1252:
  1107                           
  1108                           ;eusart.c: 23:     SPBRGH = 0;
  1109  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0459  019A               	clrf	26	;volatile
  1112  045A                     l1254:
  1113                           
  1114                           ;eusart.c: 24:     SPBRG = 25;
  1115  045A  3019               	movlw	25
  1116  045B  0099               	movwf	25	;volatile
  1117  045C                     l1256:
  1118                           
  1119                           ;eusart.c: 25:     TXSTA = 0b00100100;
  1120  045C  3024               	movlw	36
  1121  045D  0098               	movwf	24	;volatile
  1122  045E                     l1258:
  1123                           
  1124                           ;eusart.c: 26:     RCSTA = 0b10010000;
  1125  045E  3090               	movlw	144
  1126  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0461  0098               	movwf	24	;volatile
  1129  0462                     l1260:
  1130                           
  1131                           ;eusart.c: 27:     BAUDCTLbits.BRG16 = 0;
  1132  0462  1683               	bsf	3,5	;RP0=1, select bank3
  1133  0463  1703               	bsf	3,6	;RP1=1, select bank3
  1134  0464  1187               	bcf	7,3	;volatile
  1135  0465                     l144:
  1136  0465  0008               	return
  1137  0466                     __end_of_UART_INIT:
  1138                           
  1139                           	psect	text4
  1140  0735                     __ptext4:	
  1141 ;; *************** function _SET_RTC *****************
  1142 ;; Defined at:
  1143 ;;		line 49 in file "RTC.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  minute          1    wreg     unsigned char 
  1146 ;;  hour            1    1[BANK0 ] unsigned char 
  1147 ;;  m_day           1    2[BANK0 ] unsigned char 
  1148 ;;  month           1    3[BANK0 ] unsigned char 
  1149 ;;  year            1    4[BANK0 ] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  minute          1    8[BANK0 ] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      unsigned char 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       4       0       0       0
  1162 ;;      Locals:         0       1       0       0       0
  1163 ;;      Temps:          0       3       0       0       0
  1164 ;;      Totals:         0       8       0       0       0
  1165 ;;Total ram usage:        8 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		_I2C_Master_Start
  1170 ;;		_I2C_Master_Stop
  1171 ;;		_I2C_Master_Write
  1172 ;;		_decimal_to_bcd
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _SET_RTC
  1180  0735                     _SET_RTC:
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _SET_RTC: [wreg+status,2+status,0+pclath+cstack]
  1184                           ;SET_RTC@minute stored from wreg
  1185  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0737  00A8               	movwf	SET_RTC@minute
  1188  0738                     l1244:
  1189                           
  1190                           ;RTC.c: 51:     minute = decimal_to_bcd(minute);
  1191  0738  0828               	movf	SET_RTC@minute,w
  1192  0739  120A  118A  2494  120A  118A  	fcall	_decimal_to_bcd
  1193  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1194  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0740  00A5               	movwf	??_SET_RTC
  1196  0741  0825               	movf	??_SET_RTC,w
  1197  0742  00A8               	movwf	SET_RTC@minute
  1198                           
  1199                           ;RTC.c: 52:     hour = decimal_to_bcd(hour);
  1200  0743  0821               	movf	SET_RTC@hour,w
  1201  0744  120A  118A  2494  120A  118A  	fcall	_decimal_to_bcd
  1202  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1203  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1204  074B  00A5               	movwf	??_SET_RTC
  1205  074C  0825               	movf	??_SET_RTC,w
  1206  074D  00A1               	movwf	SET_RTC@hour
  1207                           
  1208                           ;RTC.c: 53:     m_day = decimal_to_bcd(m_day);
  1209  074E  0822               	movf	SET_RTC@m_day,w
  1210  074F  120A  118A  2494  120A  118A  	fcall	_decimal_to_bcd
  1211  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0756  00A5               	movwf	??_SET_RTC
  1214  0757  0825               	movf	??_SET_RTC,w
  1215  0758  00A2               	movwf	SET_RTC@m_day
  1216                           
  1217                           ;RTC.c: 54:     month = decimal_to_bcd(month);
  1218  0759  0823               	movf	SET_RTC@month,w
  1219  075A  120A  118A  2494  120A  118A  	fcall	_decimal_to_bcd
  1220  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0761  00A5               	movwf	??_SET_RTC
  1223  0762  0825               	movf	??_SET_RTC,w
  1224  0763  00A3               	movwf	SET_RTC@month
  1225                           
  1226                           ;RTC.c: 55:     year = decimal_to_bcd(year);
  1227  0764  0824               	movf	SET_RTC@year,w
  1228  0765  120A  118A  2494  120A  118A  	fcall	_decimal_to_bcd
  1229  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1230  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1231  076C  00A5               	movwf	??_SET_RTC
  1232  076D  0825               	movf	??_SET_RTC,w
  1233  076E  00A4               	movwf	SET_RTC@year
  1234                           
  1235                           ;RTC.c: 58:     I2C_Master_Start();
  1236  076F  120A  118A  2410  120A  118A  	fcall	_I2C_Master_Start
  1237                           
  1238                           ;RTC.c: 59:     I2C_Master_Write(0xD0);
  1239  0774  30D0               	movlw	208
  1240  0775  00F0               	movwf	I2C_Master_Write@d
  1241  0776  3000               	movlw	0
  1242  0777  00F1               	movwf	I2C_Master_Write@d+1
  1243  0778  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1244                           
  1245                           ;RTC.c: 60:     I2C_Master_Write(0);
  1246  077D  3000               	movlw	0
  1247  077E  00F0               	movwf	I2C_Master_Write@d
  1248  077F  00F1               	movwf	I2C_Master_Write@d+1
  1249  0780  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1250                           
  1251                           ;RTC.c: 61:     I2C_Master_Write(0);
  1252  0785  3000               	movlw	0
  1253  0786  00F0               	movwf	I2C_Master_Write@d
  1254  0787  00F1               	movwf	I2C_Master_Write@d+1
  1255  0788  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1256                           
  1257                           ;RTC.c: 62:     I2C_Master_Write(minute);
  1258  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1259  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1260  078F  0828               	movf	SET_RTC@minute,w
  1261  0790  00A5               	movwf	??_SET_RTC
  1262  0791  01A6               	clrf	??_SET_RTC+1
  1263  0792  0825               	movf	??_SET_RTC,w
  1264  0793  00F0               	movwf	I2C_Master_Write@d
  1265  0794  0826               	movf	??_SET_RTC+1,w
  1266  0795  00F1               	movwf	I2C_Master_Write@d+1
  1267  0796  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1268                           
  1269                           ;RTC.c: 63:     I2C_Master_Write(hour);
  1270  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1271  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1272  079D  0821               	movf	SET_RTC@hour,w
  1273  079E  00A5               	movwf	??_SET_RTC
  1274  079F  01A6               	clrf	??_SET_RTC+1
  1275  07A0  0825               	movf	??_SET_RTC,w
  1276  07A1  00F0               	movwf	I2C_Master_Write@d
  1277  07A2  0826               	movf	??_SET_RTC+1,w
  1278  07A3  00F1               	movwf	I2C_Master_Write@d+1
  1279  07A4  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1280                           
  1281                           ;RTC.c: 64:     I2C_Master_Write(1);
  1282  07A9  3001               	movlw	1
  1283  07AA  00F0               	movwf	I2C_Master_Write@d
  1284  07AB  3000               	movlw	0
  1285  07AC  00F1               	movwf	I2C_Master_Write@d+1
  1286  07AD  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1287                           
  1288                           ;RTC.c: 65:     I2C_Master_Write(m_day);
  1289  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1290  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1291  07B4  0822               	movf	SET_RTC@m_day,w
  1292  07B5  00A5               	movwf	??_SET_RTC
  1293  07B6  01A6               	clrf	??_SET_RTC+1
  1294  07B7  0825               	movf	??_SET_RTC,w
  1295  07B8  00F0               	movwf	I2C_Master_Write@d
  1296  07B9  0826               	movf	??_SET_RTC+1,w
  1297  07BA  00F1               	movwf	I2C_Master_Write@d+1
  1298  07BB  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1299                           
  1300                           ;RTC.c: 66:     I2C_Master_Write(month);
  1301  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1302  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1303  07C2  0823               	movf	SET_RTC@month,w
  1304  07C3  00A5               	movwf	??_SET_RTC
  1305  07C4  01A6               	clrf	??_SET_RTC+1
  1306  07C5  0825               	movf	??_SET_RTC,w
  1307  07C6  00F0               	movwf	I2C_Master_Write@d
  1308  07C7  0826               	movf	??_SET_RTC+1,w
  1309  07C8  00F1               	movwf	I2C_Master_Write@d+1
  1310  07C9  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1311                           
  1312                           ;RTC.c: 67:     I2C_Master_Write(year);
  1313  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1314  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1315  07D0  0824               	movf	SET_RTC@year,w
  1316  07D1  00A5               	movwf	??_SET_RTC
  1317  07D2  01A6               	clrf	??_SET_RTC+1
  1318  07D3  0825               	movf	??_SET_RTC,w
  1319  07D4  00F0               	movwf	I2C_Master_Write@d
  1320  07D5  0826               	movf	??_SET_RTC+1,w
  1321  07D6  00F1               	movwf	I2C_Master_Write@d+1
  1322  07D7  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1323                           
  1324                           ;RTC.c: 68:     I2C_Master_Stop();
  1325  07DC  120A  118A  2419  120A  118A  	fcall	_I2C_Master_Stop
  1326  07E1                     l1246:
  1327                           
  1328                           ;RTC.c: 70:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1329  07E1  3003               	movlw	3
  1330  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1331  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1332  07E4  00A7               	movwf	??_SET_RTC+2
  1333  07E5  3008               	movlw	8
  1334  07E6  00A6               	movwf	??_SET_RTC+1
  1335  07E7  3076               	movlw	118
  1336  07E8  00A5               	movwf	??_SET_RTC
  1337  07E9                     u717:
  1338  07E9  0BA5               	decfsz	??_SET_RTC,f
  1339  07EA  2FE9               	goto	u717
  1340  07EB  0BA6               	decfsz	??_SET_RTC+1,f
  1341  07EC  2FE9               	goto	u717
  1342  07ED  0BA7               	decfsz	??_SET_RTC+2,f
  1343  07EE  2FE9               	goto	u717
  1344  07EF  0000               	nop
  1345  07F0                     l204:
  1346  07F0  0008               	return
  1347  07F1                     __end_of_SET_RTC:
  1348                           
  1349                           	psect	text5
  1350  0494                     __ptext5:	
  1351 ;; *************** function _decimal_to_bcd *****************
  1352 ;; Defined at:
  1353 ;;		line 22 in file "RTC.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  number          1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  number          1    0[BANK0 ] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       1       0       0       0
  1369 ;;      Temps:          5       0       0       0       0
  1370 ;;      Totals:         5       1       0       0       0
  1371 ;;Total ram usage:        6 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		___awdiv
  1376 ;;		___awmod
  1377 ;; This function is called by:
  1378 ;;		_SET_RTC
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _decimal_to_bcd
  1384  0494                     _decimal_to_bcd:
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1388                           ;decimal_to_bcd@number stored from wreg
  1389  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0496  00A0               	movwf	decimal_to_bcd@number
  1392  0497                     l1204:
  1393                           
  1394                           ;RTC.c: 23:     return (((number / 10) << 4) + (number % 10));
  1395  0497  300A               	movlw	10
  1396  0498  00F0               	movwf	___awdiv@divisor
  1397  0499  3000               	movlw	0
  1398  049A  00F1               	movwf	___awdiv@divisor+1
  1399  049B  0820               	movf	decimal_to_bcd@number,w
  1400  049C  00F9               	movwf	??_decimal_to_bcd
  1401  049D  01FA               	clrf	??_decimal_to_bcd+1
  1402  049E  0879               	movf	??_decimal_to_bcd,w
  1403  049F  00F2               	movwf	___awdiv@dividend
  1404  04A0  087A               	movf	??_decimal_to_bcd+1,w
  1405  04A1  00F3               	movwf	___awdiv@dividend+1
  1406  04A2  120A  118A  25BB  120A  118A  	fcall	___awdiv
  1407  04A7  0870               	movf	?___awdiv,w
  1408  04A8  00FB               	movwf	??_decimal_to_bcd+2
  1409  04A9  3004               	movlw	4
  1410  04AA                     u585:
  1411  04AA  1003               	clrc
  1412  04AB  0DFB               	rlf	??_decimal_to_bcd+2,f
  1413  04AC  3EFF               	addlw	-1
  1414  04AD  1D03               	skipz
  1415  04AE  2CAA               	goto	u585
  1416  04AF  300A               	movlw	10
  1417  04B0  00F0               	movwf	___awmod@divisor
  1418  04B1  3000               	movlw	0
  1419  04B2  00F1               	movwf	___awmod@divisor+1
  1420  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1421  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1422  04B5  0820               	movf	decimal_to_bcd@number,w
  1423  04B6  00FC               	movwf	??_decimal_to_bcd+3
  1424  04B7  01FD               	clrf	??_decimal_to_bcd+4
  1425  04B8  087C               	movf	??_decimal_to_bcd+3,w
  1426  04B9  00F2               	movwf	___awmod@dividend
  1427  04BA  087D               	movf	??_decimal_to_bcd+4,w
  1428  04BB  00F3               	movwf	___awmod@dividend+1
  1429  04BC  120A  118A  24FC  120A  118A  	fcall	___awmod
  1430  04C1  0870               	movf	?___awmod,w
  1431  04C2  077B               	addwf	??_decimal_to_bcd+2,w
  1432  04C3                     l198:
  1433  04C3  0008               	return
  1434  04C4                     __end_of_decimal_to_bcd:
  1435                           
  1436                           	psect	text6
  1437  04FC                     __ptext6:	
  1438 ;; *************** function ___awmod *****************
  1439 ;; Defined at:
  1440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  divisor         2    0[COMMON] int 
  1443 ;;  dividend        2    2[COMMON] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  sign            1    6[COMMON] unsigned char 
  1446 ;;  counter         1    5[COMMON] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2    0[COMMON] int 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         4       0       0       0       0
  1457 ;;      Locals:         2       0       0       0       0
  1458 ;;      Temps:          1       0       0       0       0
  1459 ;;      Totals:         7       0       0       0       0
  1460 ;;Total ram usage:        7 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_decimal_to_bcd
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function ___awmod
  1471  04FC                     ___awmod:
  1472  04FC                     l1134:	
  1473                           ;incstack = 0
  1474                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1475                           
  1476  04FC  01F6               	clrf	___awmod@sign
  1477  04FD                     l1136:
  1478  04FD  1FF3               	btfss	___awmod@dividend+1,7
  1479  04FE  2D00               	goto	u481
  1480  04FF  2D01               	goto	u480
  1481  0500                     u481:
  1482  0500  2D08               	goto	l1142
  1483  0501                     u480:
  1484  0501                     l1138:
  1485  0501  09F2               	comf	___awmod@dividend,f
  1486  0502  09F3               	comf	___awmod@dividend+1,f
  1487  0503  0AF2               	incf	___awmod@dividend,f
  1488  0504  1903               	skipnz
  1489  0505  0AF3               	incf	___awmod@dividend+1,f
  1490  0506                     l1140:
  1491  0506  01F6               	clrf	___awmod@sign
  1492  0507  0AF6               	incf	___awmod@sign,f
  1493  0508                     l1142:
  1494  0508  1FF1               	btfss	___awmod@divisor+1,7
  1495  0509  2D0B               	goto	u491
  1496  050A  2D0C               	goto	u490
  1497  050B                     u491:
  1498  050B  2D11               	goto	l1146
  1499  050C                     u490:
  1500  050C                     l1144:
  1501  050C  09F0               	comf	___awmod@divisor,f
  1502  050D  09F1               	comf	___awmod@divisor+1,f
  1503  050E  0AF0               	incf	___awmod@divisor,f
  1504  050F  1903               	skipnz
  1505  0510  0AF1               	incf	___awmod@divisor+1,f
  1506  0511                     l1146:
  1507  0511  0870               	movf	___awmod@divisor,w
  1508  0512  0471               	iorwf	___awmod@divisor+1,w
  1509  0513  1903               	btfsc	3,2
  1510  0514  2D16               	goto	u501
  1511  0515  2D17               	goto	u500
  1512  0516                     u501:
  1513  0516  2D46               	goto	l1164
  1514  0517                     u500:
  1515  0517                     l1148:
  1516  0517  01F5               	clrf	___awmod@counter
  1517  0518  0AF5               	incf	___awmod@counter,f
  1518  0519  2D25               	goto	l1154
  1519  051A                     l1150:
  1520  051A  3001               	movlw	1
  1521  051B                     u515:
  1522  051B  1003               	clrc
  1523  051C  0DF0               	rlf	___awmod@divisor,f
  1524  051D  0DF1               	rlf	___awmod@divisor+1,f
  1525  051E  3EFF               	addlw	-1
  1526  051F  1D03               	skipz
  1527  0520  2D1B               	goto	u515
  1528  0521                     l1152:
  1529  0521  3001               	movlw	1
  1530  0522  00F4               	movwf	??___awmod
  1531  0523  0874               	movf	??___awmod,w
  1532  0524  07F5               	addwf	___awmod@counter,f
  1533  0525                     l1154:
  1534  0525  1FF1               	btfss	___awmod@divisor+1,7
  1535  0526  2D28               	goto	u521
  1536  0527  2D29               	goto	u520
  1537  0528                     u521:
  1538  0528  2D1A               	goto	l1150
  1539  0529                     u520:
  1540  0529                     l1156:
  1541  0529  0871               	movf	___awmod@divisor+1,w
  1542  052A  0273               	subwf	___awmod@dividend+1,w
  1543  052B  1D03               	skipz
  1544  052C  2D2F               	goto	u535
  1545  052D  0870               	movf	___awmod@divisor,w
  1546  052E  0272               	subwf	___awmod@dividend,w
  1547  052F                     u535:
  1548  052F  1C03               	skipc
  1549  0530  2D32               	goto	u531
  1550  0531  2D33               	goto	u530
  1551  0532                     u531:
  1552  0532  2D39               	goto	l1160
  1553  0533                     u530:
  1554  0533                     l1158:
  1555  0533  0870               	movf	___awmod@divisor,w
  1556  0534  02F2               	subwf	___awmod@dividend,f
  1557  0535  0871               	movf	___awmod@divisor+1,w
  1558  0536  1C03               	skipc
  1559  0537  03F3               	decf	___awmod@dividend+1,f
  1560  0538  02F3               	subwf	___awmod@dividend+1,f
  1561  0539                     l1160:
  1562  0539  3001               	movlw	1
  1563  053A                     u545:
  1564  053A  1003               	clrc
  1565  053B  0CF1               	rrf	___awmod@divisor+1,f
  1566  053C  0CF0               	rrf	___awmod@divisor,f
  1567  053D  3EFF               	addlw	-1
  1568  053E  1D03               	skipz
  1569  053F  2D3A               	goto	u545
  1570  0540                     l1162:
  1571  0540  3001               	movlw	1
  1572  0541  02F5               	subwf	___awmod@counter,f
  1573  0542  1D03               	btfss	3,2
  1574  0543  2D45               	goto	u551
  1575  0544  2D46               	goto	u550
  1576  0545                     u551:
  1577  0545  2D29               	goto	l1156
  1578  0546                     u550:
  1579  0546                     l1164:
  1580  0546  0876               	movf	___awmod@sign,w
  1581  0547  1903               	btfsc	3,2
  1582  0548  2D4A               	goto	u561
  1583  0549  2D4B               	goto	u560
  1584  054A                     u561:
  1585  054A  2D50               	goto	l1168
  1586  054B                     u560:
  1587  054B                     l1166:
  1588  054B  09F2               	comf	___awmod@dividend,f
  1589  054C  09F3               	comf	___awmod@dividend+1,f
  1590  054D  0AF2               	incf	___awmod@dividend,f
  1591  054E  1903               	skipnz
  1592  054F  0AF3               	incf	___awmod@dividend+1,f
  1593  0550                     l1168:
  1594  0550  0873               	movf	___awmod@dividend+1,w
  1595  0551  00F1               	movwf	?___awmod+1
  1596  0552  0872               	movf	___awmod@dividend,w
  1597  0553  00F0               	movwf	?___awmod
  1598  0554                     l456:
  1599  0554  0008               	return
  1600  0555                     __end_of___awmod:
  1601                           
  1602                           	psect	text7
  1603  05BB                     __ptext7:	
  1604 ;; *************** function ___awdiv *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         2    0[COMMON] int 
  1609 ;;  dividend        2    2[COMMON] int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        2    7[COMMON] int 
  1612 ;;  sign            1    6[COMMON] unsigned char 
  1613 ;;  counter         1    5[COMMON] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[COMMON] int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         4       0       0       0       0
  1624 ;;      Locals:         4       0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0
  1626 ;;      Totals:         9       0       0       0       0
  1627 ;;Total ram usage:        9 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_decimal_to_bcd
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function ___awdiv
  1638  05BB                     ___awdiv:
  1639  05BB                     l1090:	
  1640                           ;incstack = 0
  1641                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1642                           
  1643  05BB  01F6               	clrf	___awdiv@sign
  1644  05BC                     l1092:
  1645  05BC  1FF1               	btfss	___awdiv@divisor+1,7
  1646  05BD  2DBF               	goto	u381
  1647  05BE  2DC0               	goto	u380
  1648  05BF                     u381:
  1649  05BF  2DC7               	goto	l1098
  1650  05C0                     u380:
  1651  05C0                     l1094:
  1652  05C0  09F0               	comf	___awdiv@divisor,f
  1653  05C1  09F1               	comf	___awdiv@divisor+1,f
  1654  05C2  0AF0               	incf	___awdiv@divisor,f
  1655  05C3  1903               	skipnz
  1656  05C4  0AF1               	incf	___awdiv@divisor+1,f
  1657  05C5                     l1096:
  1658  05C5  01F6               	clrf	___awdiv@sign
  1659  05C6  0AF6               	incf	___awdiv@sign,f
  1660  05C7                     l1098:
  1661  05C7  1FF3               	btfss	___awdiv@dividend+1,7
  1662  05C8  2DCA               	goto	u391
  1663  05C9  2DCB               	goto	u390
  1664  05CA                     u391:
  1665  05CA  2DD4               	goto	l1104
  1666  05CB                     u390:
  1667  05CB                     l1100:
  1668  05CB  09F2               	comf	___awdiv@dividend,f
  1669  05CC  09F3               	comf	___awdiv@dividend+1,f
  1670  05CD  0AF2               	incf	___awdiv@dividend,f
  1671  05CE  1903               	skipnz
  1672  05CF  0AF3               	incf	___awdiv@dividend+1,f
  1673  05D0                     l1102:
  1674  05D0  3001               	movlw	1
  1675  05D1  00F4               	movwf	??___awdiv
  1676  05D2  0874               	movf	??___awdiv,w
  1677  05D3  06F6               	xorwf	___awdiv@sign,f
  1678  05D4                     l1104:
  1679  05D4  01F7               	clrf	___awdiv@quotient
  1680  05D5  01F8               	clrf	___awdiv@quotient+1
  1681  05D6                     l1106:
  1682  05D6  0870               	movf	___awdiv@divisor,w
  1683  05D7  0471               	iorwf	___awdiv@divisor+1,w
  1684  05D8  1903               	btfsc	3,2
  1685  05D9  2DDB               	goto	u401
  1686  05DA  2DDC               	goto	u400
  1687  05DB                     u401:
  1688  05DB  2E13               	goto	l1126
  1689  05DC                     u400:
  1690  05DC                     l1108:
  1691  05DC  01F5               	clrf	___awdiv@counter
  1692  05DD  0AF5               	incf	___awdiv@counter,f
  1693  05DE  2DEA               	goto	l1114
  1694  05DF                     l1110:
  1695  05DF  3001               	movlw	1
  1696  05E0                     u415:
  1697  05E0  1003               	clrc
  1698  05E1  0DF0               	rlf	___awdiv@divisor,f
  1699  05E2  0DF1               	rlf	___awdiv@divisor+1,f
  1700  05E3  3EFF               	addlw	-1
  1701  05E4  1D03               	skipz
  1702  05E5  2DE0               	goto	u415
  1703  05E6                     l1112:
  1704  05E6  3001               	movlw	1
  1705  05E7  00F4               	movwf	??___awdiv
  1706  05E8  0874               	movf	??___awdiv,w
  1707  05E9  07F5               	addwf	___awdiv@counter,f
  1708  05EA                     l1114:
  1709  05EA  1FF1               	btfss	___awdiv@divisor+1,7
  1710  05EB  2DED               	goto	u421
  1711  05EC  2DEE               	goto	u420
  1712  05ED                     u421:
  1713  05ED  2DDF               	goto	l1110
  1714  05EE                     u420:
  1715  05EE                     l1116:
  1716  05EE  3001               	movlw	1
  1717  05EF                     u435:
  1718  05EF  1003               	clrc
  1719  05F0  0DF7               	rlf	___awdiv@quotient,f
  1720  05F1  0DF8               	rlf	___awdiv@quotient+1,f
  1721  05F2  3EFF               	addlw	-1
  1722  05F3  1D03               	skipz
  1723  05F4  2DEF               	goto	u435
  1724  05F5  0871               	movf	___awdiv@divisor+1,w
  1725  05F6  0273               	subwf	___awdiv@dividend+1,w
  1726  05F7  1D03               	skipz
  1727  05F8  2DFB               	goto	u445
  1728  05F9  0870               	movf	___awdiv@divisor,w
  1729  05FA  0272               	subwf	___awdiv@dividend,w
  1730  05FB                     u445:
  1731  05FB  1C03               	skipc
  1732  05FC  2DFE               	goto	u441
  1733  05FD  2DFF               	goto	u440
  1734  05FE                     u441:
  1735  05FE  2E06               	goto	l1122
  1736  05FF                     u440:
  1737  05FF                     l1118:
  1738  05FF  0870               	movf	___awdiv@divisor,w
  1739  0600  02F2               	subwf	___awdiv@dividend,f
  1740  0601  0871               	movf	___awdiv@divisor+1,w
  1741  0602  1C03               	skipc
  1742  0603  03F3               	decf	___awdiv@dividend+1,f
  1743  0604  02F3               	subwf	___awdiv@dividend+1,f
  1744  0605                     l1120:
  1745  0605  1477               	bsf	___awdiv@quotient,0
  1746  0606                     l1122:
  1747  0606  3001               	movlw	1
  1748  0607                     u455:
  1749  0607  1003               	clrc
  1750  0608  0CF1               	rrf	___awdiv@divisor+1,f
  1751  0609  0CF0               	rrf	___awdiv@divisor,f
  1752  060A  3EFF               	addlw	-1
  1753  060B  1D03               	skipz
  1754  060C  2E07               	goto	u455
  1755  060D                     l1124:
  1756  060D  3001               	movlw	1
  1757  060E  02F5               	subwf	___awdiv@counter,f
  1758  060F  1D03               	btfss	3,2
  1759  0610  2E12               	goto	u461
  1760  0611  2E13               	goto	u460
  1761  0612                     u461:
  1762  0612  2DEE               	goto	l1116
  1763  0613                     u460:
  1764  0613                     l1126:
  1765  0613  0876               	movf	___awdiv@sign,w
  1766  0614  1903               	btfsc	3,2
  1767  0615  2E17               	goto	u471
  1768  0616  2E18               	goto	u470
  1769  0617                     u471:
  1770  0617  2E1D               	goto	l1130
  1771  0618                     u470:
  1772  0618                     l1128:
  1773  0618  09F7               	comf	___awdiv@quotient,f
  1774  0619  09F8               	comf	___awdiv@quotient+1,f
  1775  061A  0AF7               	incf	___awdiv@quotient,f
  1776  061B  1903               	skipnz
  1777  061C  0AF8               	incf	___awdiv@quotient+1,f
  1778  061D                     l1130:
  1779  061D  0878               	movf	___awdiv@quotient+1,w
  1780  061E  00F1               	movwf	?___awdiv+1
  1781  061F  0877               	movf	___awdiv@quotient,w
  1782  0620  00F0               	movwf	?___awdiv
  1783  0621                     l443:
  1784  0621  0008               	return
  1785  0622                     __end_of___awdiv:
  1786                           
  1787                           	psect	text8
  1788  06A0                     __ptext8:	
  1789 ;; *************** function _READ_RTC *****************
  1790 ;; Defined at:
  1791 ;;		line 29 in file "RTC.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      unsigned char 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0
  1808 ;;      Totals:         2       0       0       0       0
  1809 ;;Total ram usage:        2 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    2
  1812 ;; This function calls:
  1813 ;;		_I2C_Master_Read
  1814 ;;		_I2C_Master_RepeatedStart
  1815 ;;		_I2C_Master_Start
  1816 ;;		_I2C_Master_Stop
  1817 ;;		_I2C_Master_Write
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _READ_RTC
  1825  06A0                     _READ_RTC:
  1826  06A0                     l1262:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _READ_RTC: [wreg+status,2+status,0+pclath+cstack]
  1829                           
  1830                           
  1831                           ;RTC.c: 31:     I2C_Master_Start();
  1832  06A0  120A  118A  2410  120A  118A  	fcall	_I2C_Master_Start
  1833                           
  1834                           ;RTC.c: 32:     I2C_Master_Write(0xD0);
  1835  06A5  30D0               	movlw	208
  1836  06A6  00F0               	movwf	I2C_Master_Write@d
  1837  06A7  3000               	movlw	0
  1838  06A8  00F1               	movwf	I2C_Master_Write@d+1
  1839  06A9  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1840                           
  1841                           ;RTC.c: 33:     I2C_Master_Write(0);
  1842  06AE  3000               	movlw	0
  1843  06AF  00F0               	movwf	I2C_Master_Write@d
  1844  06B0  00F1               	movwf	I2C_Master_Write@d+1
  1845  06B1  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1846                           
  1847                           ;RTC.c: 34:     I2C_Master_RepeatedStart();
  1848  06B6  120A  118A  2407  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1849                           
  1850                           ;RTC.c: 35:     I2C_Master_Write(0xD1);
  1851  06BB  30D1               	movlw	209
  1852  06BC  00F0               	movwf	I2C_Master_Write@d
  1853  06BD  3000               	movlw	0
  1854  06BE  00F1               	movwf	I2C_Master_Write@d+1
  1855  06BF  120A  118A  242B  120A  118A  	fcall	_I2C_Master_Write
  1856                           
  1857                           ;RTC.c: 36:     second = I2C_Master_Read(1);
  1858  06C4  3001               	movlw	1
  1859  06C5  00F0               	movwf	I2C_Master_Read@a
  1860  06C6  3000               	movlw	0
  1861  06C7  00F1               	movwf	I2C_Master_Read@a+1
  1862  06C8  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1863  06CD  0870               	movf	?_I2C_Master_Read,w
  1864  06CE  00F6               	movwf	??_READ_RTC
  1865  06CF  0876               	movf	??_READ_RTC,w
  1866  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1867  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1868  06D2  00BA               	movwf	_second
  1869                           
  1870                           ;RTC.c: 37:     minute = I2C_Master_Read(1);
  1871  06D3  3001               	movlw	1
  1872  06D4  00F0               	movwf	I2C_Master_Read@a
  1873  06D5  3000               	movlw	0
  1874  06D6  00F1               	movwf	I2C_Master_Read@a+1
  1875  06D7  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1876  06DC  0870               	movf	?_I2C_Master_Read,w
  1877  06DD  00F6               	movwf	??_READ_RTC
  1878  06DE  0876               	movf	??_READ_RTC,w
  1879  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1880  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1881  06E1  00B9               	movwf	_minute
  1882                           
  1883                           ;RTC.c: 38:     hour = I2C_Master_Read(1);
  1884  06E2  3001               	movlw	1
  1885  06E3  00F0               	movwf	I2C_Master_Read@a
  1886  06E4  3000               	movlw	0
  1887  06E5  00F1               	movwf	I2C_Master_Read@a+1
  1888  06E6  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1889  06EB  0870               	movf	?_I2C_Master_Read,w
  1890  06EC  00F6               	movwf	??_READ_RTC
  1891  06ED  0876               	movf	??_READ_RTC,w
  1892  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1893  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1894  06F0  00B8               	movwf	_hour
  1895                           
  1896                           ;RTC.c: 39:     I2C_Master_Read(1);
  1897  06F1  3001               	movlw	1
  1898  06F2  00F0               	movwf	I2C_Master_Read@a
  1899  06F3  3000               	movlw	0
  1900  06F4  00F1               	movwf	I2C_Master_Read@a+1
  1901  06F5  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1902                           
  1903                           ;RTC.c: 40:     m_day = I2C_Master_Read(1);
  1904  06FA  3001               	movlw	1
  1905  06FB  00F0               	movwf	I2C_Master_Read@a
  1906  06FC  3000               	movlw	0
  1907  06FD  00F1               	movwf	I2C_Master_Read@a+1
  1908  06FE  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1909  0703  0870               	movf	?_I2C_Master_Read,w
  1910  0704  00F6               	movwf	??_READ_RTC
  1911  0705  0876               	movf	??_READ_RTC,w
  1912  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0708  00B7               	movwf	_m_day
  1915                           
  1916                           ;RTC.c: 41:     month = I2C_Master_Read(1);
  1917  0709  3001               	movlw	1
  1918  070A  00F0               	movwf	I2C_Master_Read@a
  1919  070B  3000               	movlw	0
  1920  070C  00F1               	movwf	I2C_Master_Read@a+1
  1921  070D  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1922  0712  0870               	movf	?_I2C_Master_Read,w
  1923  0713  00F6               	movwf	??_READ_RTC
  1924  0714  0876               	movf	??_READ_RTC,w
  1925  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0717  00B6               	movwf	_month
  1928                           
  1929                           ;RTC.c: 42:     year = I2C_Master_Read(0);
  1930  0718  3000               	movlw	0
  1931  0719  00F0               	movwf	I2C_Master_Read@a
  1932  071A  00F1               	movwf	I2C_Master_Read@a+1
  1933  071B  120A  118A  2466  120A  118A  	fcall	_I2C_Master_Read
  1934  0720  0870               	movf	?_I2C_Master_Read,w
  1935  0721  00F6               	movwf	??_READ_RTC
  1936  0722  0876               	movf	??_READ_RTC,w
  1937  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0725  00B5               	movwf	_year
  1940                           
  1941                           ;RTC.c: 43:     I2C_Master_Stop();
  1942  0726  120A  118A  2419  120A  118A  	fcall	_I2C_Master_Stop
  1943  072B                     l1264:
  1944                           
  1945                           ;RTC.c: 44:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1946  072B  3082               	movlw	130
  1947  072C  00F7               	movwf	??_READ_RTC+1
  1948  072D  30DD               	movlw	221
  1949  072E  00F6               	movwf	??_READ_RTC
  1950  072F                     u727:
  1951  072F  0BF6               	decfsz	??_READ_RTC,f
  1952  0730  2F2F               	goto	u727
  1953  0731  0BF7               	decfsz	??_READ_RTC+1,f
  1954  0732  2F2F               	goto	u727
  1955  0733  2F34               	nop2
  1956  0734                     l201:
  1957  0734  0008               	return
  1958  0735                     __end_of_READ_RTC:
  1959                           
  1960                           	psect	text9
  1961  042B                     __ptext9:	
  1962 ;; *************** function _I2C_Master_Write *****************
  1963 ;; Defined at:
  1964 ;;		line 65 in file "I2C.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  d               2    0[COMMON] unsigned int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         2       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         2       0       0       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    1
  1985 ;; This function calls:
  1986 ;;		_I2C_Master_Wait
  1987 ;; This function is called by:
  1988 ;;		_READ_RTC
  1989 ;;		_SET_RTC
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _I2C_Master_Write
  1995  042B                     _I2C_Master_Write:
  1996  042B                     l1184:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1999                           
  2000                           
  2001                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2002  042B  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2003  0430                     l1186:
  2004                           
  2005                           ;I2C.c: 68:     SSPBUF = d;
  2006  0430  0870               	movf	I2C_Master_Write@d,w
  2007  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0433  0093               	movwf	19	;volatile
  2010  0434                     l111:
  2011  0434  0008               	return
  2012  0435                     __end_of_I2C_Master_Write:
  2013                           
  2014                           	psect	text10
  2015  0419                     __ptext10:	
  2016 ;; *************** function _I2C_Master_Stop *****************
  2017 ;; Defined at:
  2018 ;;		line 55 in file "I2C.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    1
  2039 ;; This function calls:
  2040 ;;		_I2C_Master_Wait
  2041 ;; This function is called by:
  2042 ;;		_READ_RTC
  2043 ;;		_SET_RTC
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _I2C_Master_Stop
  2049  0419                     _I2C_Master_Stop:
  2050  0419                     l1180:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2053                           
  2054                           
  2055                           ;I2C.c: 57:     I2C_Master_Wait();
  2056  0419  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2057  041E                     l1182:
  2058                           
  2059                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2060  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2061  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0420  1511               	bsf	17,2	;volatile
  2063  0421                     l108:
  2064  0421  0008               	return
  2065  0422                     __end_of_I2C_Master_Stop:
  2066                           
  2067                           	psect	text11
  2068  0410                     __ptext11:	
  2069 ;; *************** function _I2C_Master_Start *****************
  2070 ;; Defined at:
  2071 ;;		line 39 in file "I2C.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		_I2C_Master_Wait
  2094 ;; This function is called by:
  2095 ;;		_READ_RTC
  2096 ;;		_SET_RTC
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _I2C_Master_Start
  2102  0410                     _I2C_Master_Start:
  2103  0410                     l1172:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2106                           
  2107                           
  2108                           ;I2C.c: 41:     I2C_Master_Wait();
  2109  0410  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2110  0415                     l1174:
  2111                           
  2112                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2113  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0417  1411               	bsf	17,0	;volatile
  2116  0418                     l102:
  2117  0418  0008               	return
  2118  0419                     __end_of_I2C_Master_Start:
  2119                           
  2120                           	psect	text12
  2121  0407                     __ptext12:	
  2122 ;; *************** function _I2C_Master_RepeatedStart *****************
  2123 ;; Defined at:
  2124 ;;		line 47 in file "I2C.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    1
  2145 ;; This function calls:
  2146 ;;		_I2C_Master_Wait
  2147 ;; This function is called by:
  2148 ;;		_READ_RTC
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _I2C_Master_RepeatedStart
  2154  0407                     _I2C_Master_RepeatedStart:
  2155  0407                     l1176:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2158                           
  2159                           
  2160                           ;I2C.c: 49:     I2C_Master_Wait();
  2161  0407  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2162  040C                     l1178:
  2163                           
  2164                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2165  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2166  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2167  040E  1491               	bsf	17,1	;volatile
  2168  040F                     l105:
  2169  040F  0008               	return
  2170  0410                     __end_of_I2C_Master_RepeatedStart:
  2171                           
  2172                           	psect	text13
  2173  0466                     __ptext13:	
  2174 ;; *************** function _I2C_Master_Read *****************
  2175 ;; Defined at:
  2176 ;;		line 74 in file "I2C.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  a               2    0[COMMON] unsigned short 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  temp            2    4[COMMON] unsigned short 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2    0[COMMON] unsigned short 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, pclath, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         2       0       0       0       0
  2191 ;;      Locals:         2       0       0       0       0
  2192 ;;      Temps:          2       0       0       0       0
  2193 ;;      Totals:         6       0       0       0       0
  2194 ;;Total ram usage:        6 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    1
  2197 ;; This function calls:
  2198 ;;		_I2C_Master_Wait
  2199 ;; This function is called by:
  2200 ;;		_READ_RTC
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _I2C_Master_Read
  2206  0466                     _I2C_Master_Read:
  2207  0466                     l1188:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2210                           
  2211                           
  2212                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2213  0466  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2214  046B                     l1190:
  2215                           
  2216                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2217  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2218  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2219  046D  1591               	bsf	17,3	;volatile
  2220                           
  2221                           ;I2C.c: 79:     I2C_Master_Wait();
  2222  046E  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2223  0473                     l1192:
  2224                           
  2225                           ;I2C.c: 80:     temp = SSPBUF;
  2226  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0475  0813               	movf	19,w	;volatile
  2229  0476  00F2               	movwf	??_I2C_Master_Read
  2230  0477  01F3               	clrf	??_I2C_Master_Read+1
  2231  0478  0872               	movf	??_I2C_Master_Read,w
  2232  0479  00F4               	movwf	I2C_Master_Read@temp
  2233  047A  0873               	movf	??_I2C_Master_Read+1,w
  2234  047B  00F5               	movwf	I2C_Master_Read@temp+1
  2235  047C                     l1194:
  2236                           
  2237                           ;I2C.c: 81:     I2C_Master_Wait();
  2238  047C  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Wait
  2239  0481                     l1196:
  2240                           
  2241                           ;I2C.c: 82:     if(a == 1){
  2242  0481  0370               	decf	I2C_Master_Read@a,w
  2243  0482  0471               	iorwf	I2C_Master_Read@a+1,w
  2244  0483  1D03               	btfss	3,2
  2245  0484  2C86               	goto	u571
  2246  0485  2C87               	goto	u570
  2247  0486                     u571:
  2248  0486  2C8B               	goto	l114
  2249  0487                     u570:
  2250  0487                     l1198:
  2251                           
  2252                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2253  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0489  1291               	bcf	17,5	;volatile
  2256                           
  2257                           ;I2C.c: 84:     }else{
  2258  048A  2C8E               	goto	l115
  2259  048B                     l114:
  2260                           
  2261                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2262  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2263  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2264  048D  1691               	bsf	17,5	;volatile
  2265  048E                     l115:	
  2266                           ;I2C.c: 86:     }
  2267                           
  2268                           
  2269                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2270  048E  1611               	bsf	17,4	;volatile
  2271  048F                     l1200:
  2272                           
  2273                           ;I2C.c: 88:     return temp;
  2274  048F  0875               	movf	I2C_Master_Read@temp+1,w
  2275  0490  00F1               	movwf	?_I2C_Master_Read+1
  2276  0491  0874               	movf	I2C_Master_Read@temp,w
  2277  0492  00F0               	movwf	?_I2C_Master_Read
  2278  0493                     l116:
  2279  0493  0008               	return
  2280  0494                     __end_of_I2C_Master_Read:
  2281                           
  2282                           	psect	text14
  2283  0440                     __ptext14:	
  2284 ;; *************** function _I2C_Master_Wait *****************
  2285 ;; Defined at:
  2286 ;;		line 32 in file "I2C.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0
  2303 ;;      Totals:         0       0       0       0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_I2C_Master_Start
  2310 ;;		_I2C_Master_RepeatedStart
  2311 ;;		_I2C_Master_Stop
  2312 ;;		_I2C_Master_Write
  2313 ;;		_I2C_Master_Read
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _I2C_Master_Wait
  2319  0440                     _I2C_Master_Wait:
  2320  0440                     l1086:	
  2321                           ;incstack = 0
  2322                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2323                           
  2324  0440                     l96:	
  2325                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2326                           
  2327  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0442  1914               	btfsc	20,2	;volatile
  2330  0443  2C45               	goto	u361
  2331  0444  2C46               	goto	u360
  2332  0445                     u361:
  2333  0445  2C40               	goto	l96
  2334  0446                     u360:
  2335  0446                     l1088:
  2336  0446  0811               	movf	17,w	;volatile
  2337  0447  391F               	andlw	31
  2338  0448  1D03               	btfss	3,2
  2339  0449  2C4B               	goto	u371
  2340  044A  2C4C               	goto	u370
  2341  044B                     u371:
  2342  044B  2C40               	goto	l96
  2343  044C                     u370:
  2344  044C                     l99:
  2345  044C  0008               	return
  2346  044D                     __end_of_I2C_Master_Wait:
  2347                           
  2348                           	psect	text15
  2349  04C4                     __ptext15:	
  2350 ;; *************** function _I2C_Master_Init *****************
  2351 ;; Defined at:
  2352 ;;		line 16 in file "I2C.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  c               4    0[BANK0 ] const unsigned long 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         0       4       0       0       0
  2367 ;;      Locals:         0       0       0       0       0
  2368 ;;      Temps:          0       4       0       0       0
  2369 ;;      Totals:         0       8       0       0       0
  2370 ;;Total ram usage:        8 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    1
  2373 ;; This function calls:
  2374 ;;		___lldiv
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _I2C_Master_Init
  2382  04C4                     _I2C_Master_Init:
  2383  04C4                     l1232:	
  2384                           ;incstack = 0
  2385                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2386                           
  2387                           
  2388                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2389  04C4  3028               	movlw	40
  2390  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2391  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2392  04C7  0094               	movwf	20	;volatile
  2393  04C8                     l1234:
  2394                           
  2395                           ;I2C.c: 19:     SSPCON2 = 0;
  2396  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2397  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2398  04CA  0191               	clrf	17	;volatile
  2399  04CB                     l1236:
  2400                           
  2401                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2402  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2403  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2404  04CD  0820               	movf	I2C_Master_Init@c,w
  2405  04CE  00A4               	movwf	??_I2C_Master_Init
  2406  04CF  0821               	movf	I2C_Master_Init@c+1,w
  2407  04D0  00A5               	movwf	??_I2C_Master_Init+1
  2408  04D1  0822               	movf	I2C_Master_Init@c+2,w
  2409  04D2  00A6               	movwf	??_I2C_Master_Init+2
  2410  04D3  0823               	movf	I2C_Master_Init@c+3,w
  2411  04D4  00A7               	movwf	??_I2C_Master_Init+3
  2412  04D5  3002               	movlw	2
  2413  04D6                     u665:
  2414  04D6  1003               	clrc
  2415  04D7  0DA4               	rlf	??_I2C_Master_Init,f
  2416  04D8  0DA5               	rlf	??_I2C_Master_Init+1,f
  2417  04D9  0DA6               	rlf	??_I2C_Master_Init+2,f
  2418  04DA  0DA7               	rlf	??_I2C_Master_Init+3,f
  2419  04DB                     u660:
  2420  04DB  3EFF               	addlw	-1
  2421  04DC  1D03               	skipz
  2422  04DD  2CD6               	goto	u665
  2423  04DE  0827               	movf	??_I2C_Master_Init+3,w
  2424  04DF  00F3               	movwf	___lldiv@divisor+3
  2425  04E0  0826               	movf	??_I2C_Master_Init+2,w
  2426  04E1  00F2               	movwf	___lldiv@divisor+2
  2427  04E2  0825               	movf	??_I2C_Master_Init+1,w
  2428  04E3  00F1               	movwf	___lldiv@divisor+1
  2429  04E4  0824               	movf	??_I2C_Master_Init,w
  2430  04E5  00F0               	movwf	___lldiv@divisor
  2431  04E6  3000               	movlw	0
  2432  04E7  00F7               	movwf	___lldiv@dividend+3
  2433  04E8  307A               	movlw	122
  2434  04E9  00F6               	movwf	___lldiv@dividend+2
  2435  04EA  3012               	movlw	18
  2436  04EB  00F5               	movwf	___lldiv@dividend+1
  2437  04EC  3000               	movlw	0
  2438  04ED  00F4               	movwf	___lldiv@dividend
  2439  04EE  120A  118A  2555  120A  118A  	fcall	___lldiv
  2440  04F3  0870               	movf	?___lldiv,w
  2441  04F4  3EFF               	addlw	255
  2442  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2443  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2444  04F7  0093               	movwf	19	;volatile
  2445  04F8                     l1238:
  2446                           
  2447                           ;I2C.c: 21:     SSPSTAT = 0;
  2448  04F8  0194               	clrf	20	;volatile
  2449  04F9                     l1240:
  2450                           
  2451                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2452  04F9  1587               	bsf	7,3	;volatile
  2453  04FA                     l1242:
  2454                           
  2455                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2456  04FA  1607               	bsf	7,4	;volatile
  2457  04FB                     l93:
  2458  04FB  0008               	return
  2459  04FC                     __end_of_I2C_Master_Init:
  2460                           
  2461                           	psect	text16
  2462  0555                     __ptext16:	
  2463 ;; *************** function ___lldiv *****************
  2464 ;; Defined at:
  2465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  divisor         4    0[COMMON] unsigned long 
  2468 ;;  dividend        4    4[COMMON] unsigned long 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  quotient        4    9[COMMON] unsigned long 
  2471 ;;  counter         1   13[COMMON] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  4    0[COMMON] unsigned long 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         8       0       0       0       0
  2482 ;;      Locals:         5       0       0       0       0
  2483 ;;      Temps:          1       0       0       0       0
  2484 ;;      Totals:        14       0       0       0       0
  2485 ;;Total ram usage:       14 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_I2C_Master_Init
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function ___lldiv
  2496  0555                     ___lldiv:
  2497  0555                     l1208:	
  2498                           ;incstack = 0
  2499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2500                           
  2501  0555  3000               	movlw	0
  2502  0556  00FC               	movwf	___lldiv@quotient+3
  2503  0557  3000               	movlw	0
  2504  0558  00FB               	movwf	___lldiv@quotient+2
  2505  0559  3000               	movlw	0
  2506  055A  00FA               	movwf	___lldiv@quotient+1
  2507  055B  3000               	movlw	0
  2508  055C  00F9               	movwf	___lldiv@quotient
  2509  055D  0873               	movf	___lldiv@divisor+3,w
  2510  055E  0472               	iorwf	___lldiv@divisor+2,w
  2511  055F  0471               	iorwf	___lldiv@divisor+1,w
  2512  0560  0470               	iorwf	___lldiv@divisor,w
  2513  0561  1903               	skipnz
  2514  0562  2D64               	goto	u591
  2515  0563  2D65               	goto	u590
  2516  0564                     u591:
  2517  0564  2DB2               	goto	l1228
  2518  0565                     u590:
  2519  0565                     l1210:
  2520  0565  01FD               	clrf	___lldiv@counter
  2521  0566  0AFD               	incf	___lldiv@counter,f
  2522  0567  2D75               	goto	l1214
  2523  0568                     l1212:
  2524  0568  3001               	movlw	1
  2525  0569  00F8               	movwf	??___lldiv
  2526  056A                     u605:
  2527  056A  1003               	clrc
  2528  056B  0DF0               	rlf	___lldiv@divisor,f
  2529  056C  0DF1               	rlf	___lldiv@divisor+1,f
  2530  056D  0DF2               	rlf	___lldiv@divisor+2,f
  2531  056E  0DF3               	rlf	___lldiv@divisor+3,f
  2532  056F  0BF8               	decfsz	??___lldiv,f
  2533  0570  2D6A               	goto	u605
  2534  0571  3001               	movlw	1
  2535  0572  00F8               	movwf	??___lldiv
  2536  0573  0878               	movf	??___lldiv,w
  2537  0574  07FD               	addwf	___lldiv@counter,f
  2538  0575                     l1214:
  2539  0575  1FF3               	btfss	___lldiv@divisor+3,7
  2540  0576  2D78               	goto	u611
  2541  0577  2D79               	goto	u610
  2542  0578                     u611:
  2543  0578  2D68               	goto	l1212
  2544  0579                     u610:
  2545  0579                     l1216:
  2546  0579  3001               	movlw	1
  2547  057A  00F8               	movwf	??___lldiv
  2548  057B                     u625:
  2549  057B  1003               	clrc
  2550  057C  0DF9               	rlf	___lldiv@quotient,f
  2551  057D  0DFA               	rlf	___lldiv@quotient+1,f
  2552  057E  0DFB               	rlf	___lldiv@quotient+2,f
  2553  057F  0DFC               	rlf	___lldiv@quotient+3,f
  2554  0580  0BF8               	decfsz	??___lldiv,f
  2555  0581  2D7B               	goto	u625
  2556  0582                     l1218:
  2557  0582  0873               	movf	___lldiv@divisor+3,w
  2558  0583  0277               	subwf	___lldiv@dividend+3,w
  2559  0584  1D03               	skipz
  2560  0585  2D90               	goto	u635
  2561  0586  0872               	movf	___lldiv@divisor+2,w
  2562  0587  0276               	subwf	___lldiv@dividend+2,w
  2563  0588  1D03               	skipz
  2564  0589  2D90               	goto	u635
  2565  058A  0871               	movf	___lldiv@divisor+1,w
  2566  058B  0275               	subwf	___lldiv@dividend+1,w
  2567  058C  1D03               	skipz
  2568  058D  2D90               	goto	u635
  2569  058E  0870               	movf	___lldiv@divisor,w
  2570  058F  0274               	subwf	___lldiv@dividend,w
  2571  0590                     u635:
  2572  0590  1C03               	skipc
  2573  0591  2D93               	goto	u631
  2574  0592  2D94               	goto	u630
  2575  0593                     u631:
  2576  0593  2DA3               	goto	l1224
  2577  0594                     u630:
  2578  0594                     l1220:
  2579  0594  0870               	movf	___lldiv@divisor,w
  2580  0595  02F4               	subwf	___lldiv@dividend,f
  2581  0596  0871               	movf	___lldiv@divisor+1,w
  2582  0597  1C03               	skipc
  2583  0598  0F71               	incfsz	___lldiv@divisor+1,w
  2584  0599  02F5               	subwf	___lldiv@dividend+1,f
  2585  059A  0872               	movf	___lldiv@divisor+2,w
  2586  059B  1C03               	skipc
  2587  059C  0F72               	incfsz	___lldiv@divisor+2,w
  2588  059D  02F6               	subwf	___lldiv@dividend+2,f
  2589  059E  0873               	movf	___lldiv@divisor+3,w
  2590  059F  1C03               	skipc
  2591  05A0  0F73               	incfsz	___lldiv@divisor+3,w
  2592  05A1  02F7               	subwf	___lldiv@dividend+3,f
  2593  05A2                     l1222:
  2594  05A2  1479               	bsf	___lldiv@quotient,0
  2595  05A3                     l1224:
  2596  05A3  3001               	movlw	1
  2597  05A4                     u645:
  2598  05A4  1003               	clrc
  2599  05A5  0CF3               	rrf	___lldiv@divisor+3,f
  2600  05A6  0CF2               	rrf	___lldiv@divisor+2,f
  2601  05A7  0CF1               	rrf	___lldiv@divisor+1,f
  2602  05A8  0CF0               	rrf	___lldiv@divisor,f
  2603  05A9  3EFF               	addlw	-1
  2604  05AA  1D03               	skipz
  2605  05AB  2DA4               	goto	u645
  2606  05AC                     l1226:
  2607  05AC  3001               	movlw	1
  2608  05AD  02FD               	subwf	___lldiv@counter,f
  2609  05AE  1D03               	btfss	3,2
  2610  05AF  2DB1               	goto	u651
  2611  05B0  2DB2               	goto	u650
  2612  05B1                     u651:
  2613  05B1  2D79               	goto	l1216
  2614  05B2                     u650:
  2615  05B2                     l1228:
  2616  05B2  087C               	movf	___lldiv@quotient+3,w
  2617  05B3  00F3               	movwf	?___lldiv+3
  2618  05B4  087B               	movf	___lldiv@quotient+2,w
  2619  05B5  00F2               	movwf	?___lldiv+2
  2620  05B6  087A               	movf	___lldiv@quotient+1,w
  2621  05B7  00F1               	movwf	?___lldiv+1
  2622  05B8  0879               	movf	___lldiv@quotient,w
  2623  05B9  00F0               	movwf	?___lldiv
  2624  05BA                     l326:
  2625  05BA  0008               	return
  2626  05BB                     __end_of___lldiv:
  2627  007E                     btemp	set	126	;btemp
  2628  007E                     wtemp0	set	126
  2629                           
  2630                           	psect	config
  2631                           
  2632                           ;Config register CONFIG1 @ 0x2007
  2633                           ;	Oscillator Selection bits
  2634                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2635                           ;	Watchdog Timer Enable bit
  2636                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2637                           ;	Power-up Timer Enable bit
  2638                           ;	PWRTE = OFF, PWRT disabled
  2639                           ;	RE3/MCLR pin function select bit
  2640                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2641                           ;	Code Protection bit
  2642                           ;	CP = OFF, Program memory code protection is disabled
  2643                           ;	Data Code Protection bit
  2644                           ;	CPD = OFF, Data memory code protection is disabled
  2645                           ;	Brown Out Reset Selection bits
  2646                           ;	BOREN = OFF, BOR disabled
  2647                           ;	Internal External Switchover bit
  2648                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2649                           ;	Fail-Safe Clock Monitor Enabled bit
  2650                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2651                           ;	Low Voltage Programming Enable bit
  2652                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2653                           ;	In-Circuit Debugger Mode bit
  2654                           ;	DEBUG = 0x1, unprogrammed default
  2655  2007                     	org	8199
  2656  2007  20D4               	dw	8404
  2657                           
  2658                           ;Config register CONFIG2 @ 0x2008
  2659                           ;	Brown-out Reset Selection bit
  2660                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2661                           ;	Flash Program Memory Self Write Enable bits
  2662                           ;	WRT = OFF, Write protection off
  2663  2008                     	org	8200
  2664  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SET_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _READ_RTC->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_SET_RTC
    _SET_RTC->_decimal_to_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4763
                                              9 BANK0     10    10      0
                    _I2C_Master_Init
                           _READ_RTC
                            _SET_RTC
                          _UART_INIT
                          _UART_READ
                         _UART_WRITE
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RTC                                              8     4      4    2407
                                              1 BANK0      8     4      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0     944
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _READ_RTC                                             2     2      0    1511
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _READ_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SET_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _UART_INIT
   _UART_READ
   _UART_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 11:03:46 2021

                                _i 003B                                 l93 04FB  
                               l96 0440                                 l99 044C  
                     ___awdiv@sign 0076                     _decimal_to_bcd 0494  
                              l102 0418                                l111 0434  
                              l105 040F                                l201 0734  
                              l114 048B                                l115 048E  
                              l116 0493                                l108 0421  
                              l204 07F0                                l151 0435  
                              l144 0465                                l154 043F  
                              l148 042A                                l326 05BA  
                              l443 0621                                l198 04C3  
                              l456 0554                                _GIE 005F  
                              u400 05DC                                u401 05DB  
                              u420 05EE                                u500 0517  
                              u421 05ED                                u501 0516  
                              u415 05E0                                u360 0446  
                              u440 05FF                                u520 0529  
                              u361 0445                                u441 05FE  
                              u521 0528                                u610 0579  
                              u370 044C                                u530 0533  
                              u611 0578                                u371 044B  
                              u435 05EF                                u531 0532  
                              u515 051B                                u460 0613  
                              u380 05C0                                u605 056A  
                              u461 0612                                u445 05FB  
                              u381 05BF                                u630 0594  
                              u470 0618                                u390 05CB  
                              u550 0546                                u631 0593  
                              u471 0617                                u455 0607  
                              u391 05CA                                u551 0545  
                              u535 052F                                u560 054B  
                              u480 0501                                u625 057B  
                              u561 054A                                u545 053A  
                              u481 0500                                u650 05B2  
                              u570 0487                                u490 050C  
                              u651 05B1                                u635 0590  
                              u571 0486                                u491 050B  
                              u660 04DB                                u645 05A4  
                              u717 07E9                                u590 0565  
                              u670 043B                                u591 0564  
                              u727 072F                                u671 043A  
                              u680 0428                                u665 04D6  
                              u585 04AA                                u681 0427  
                     ___awmod@sign 0076                               l1100 05CB  
                             l1110 05DF                               l1102 05D0  
                             l1200 048F                               l1120 0605  
                             l1112 05E6                               l1104 05D4  
                             l1210 0565                               l1130 061D  
                             l1122 0606                               l1114 05EA  
                             l1106 05D6                               l1220 0594  
                             l1212 0568                               l1124 060D  
                             l1116 05EE                               l1108 05DC  
                             l1140 0506                               l1204 0497  
                             l1300 0633                               l1222 05A2  
                             l1214 0575                               l1118 05FF  
                             l1126 0613                               l1150 051A  
                             l1142 0508                               l1134 04FC  
                             l1310 063A                               l1302 0634  
                             l1224 05A3                               l1216 0579  
                             l1208 0555                               l1240 04F9  
                             l1232 04C4                               l1128 0618  
                             l1160 0539                               l1152 0521  
                             l1144 050C                               l1136 04FD  
                             l1320 0645                               l1312 063B  
                             l1304 0635                               l1226 05AC  
                             l1218 0582                               l1242 04FA  
                             l1234 04C8                               l1090 05BB  
                             l1162 0540                               l1154 0525  
                             l1146 0511                               l1138 0501  
                             l1250 044D                               l1330 0652  
                             l1322 0645                               l1314 063C  
                             l1306 0636                               l1228 05B2  
                             l1236 04CB                               l1172 0410  
                             l1180 0419                               l1092 05BC  
                             l1156 0529                               l1148 0517  
                             l1164 0546                               l1244 0738  
                             l1260 0462                               l1252 0457  
                             l1340 0690                               l1332 066A  
                             l1324 0645                               l1316 063D  
                             l1308 0639                               l1238 04F8  
                             l1086 0440                               l1190 046B  
                             l1174 0415                               l1182 041E  
                             l1262 06A0                               l1094 05C0  
                             l1166 054B                               l1158 0533  
                             l1246 07E1                               l1254 045A  
                             l1270 043B                               l1342 069A  
                             l1334 066F                               l1326 0645  
                             l1318 0641                               l1088 0446  
                             l1192 0473                               l1176 0407  
                             l1184 042B                               l1264 072B  
                             l1096 05C5                               l1168 0550  
                             l1256 045C                               l1272 0422  
                             l1336 0674                               l1328 0645  
                             l1280 0622                               l1194 047C  
                             l1178 040C                               l1186 0430  
                             l1098 05C7                               l1258 045E  
                             l1274 0428                               l1338 0682  
                             l1290 062A                               l1282 0626  
                             l1196 0481                               l1188 0466  
                             l1276 0429                               l1268 0435  
                             l1292 062D                               l1284 0627  
                             l1198 0487                               l1294 062E  
                             l1286 0628                               l1296 0631  
                             l1288 0629                               l1298 0632  
                             _PEIE 005E                    __end_of_SET_RTC 07F1  
 __end_of_I2C_Master_RepeatedStart 0410                               _main 0622  
                             _hour 0038                               _year 0035  
                             btemp 007E                               start 0000  
           __end_of_decimal_to_bcd 04C4                   ?_I2C_Master_Init 0020  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                   __end_of_READ_RTC 0735  
                            ?_main 0070                    __end_of___awdiv 0622  
                  __end_of___awmod 0555                              _ANSEL 0188  
                  __end_of___lldiv 05BB                    ___awdiv@divisor 0070  
                  ___awdiv@counter 0075                              _RCREG 001A  
                            _RCSTA 0018                        ?_UART_WRITE 0070  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _TXREG 0019                              _TXSTA 0098  
               __size_of_UART_INIT 0019                 __size_of_UART_READ 0009  
                            _Start 0033                              _m_day 0037  
                            _month 0036                              status 0003  
                            wtemp0 007E                    __initialization 07F1  
                     __end_of_main 06A0                    ?_decimal_to_bcd 0070  
                           ??_main 0029                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
                        ??_SET_RTC 0025                 ??_I2C_Master_Write 0072  
                 ___awdiv@dividend 0072                             _ANSELH 0189  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
              __size_of_UART_WRITE 000B                  __end_of_UART_INIT 0466  
                __end_of_UART_READ 042B           _I2C_Master_RepeatedStart 0407  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lldiv 0078                   ___awdiv@quotient 0077  
                           _minute 0039                             _second 003A  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
                   UART_WRITE@data 0070            __end_of__initialization 07FC  
                        ?_READ_RTC 0070                     __pcstackCOMMON 0070  
                       __pbssBANK0 0033                         ??_READ_RTC 0076  
                       __pmaintext 0622                       ??_UART_WRITE 0072  
                          _SET_RTC 0735                            _SSPCON2 0091  
                          _SSPSTAT 0094                            _Bandera 0034  
                 ??_decimal_to_bcd 0079                 __end_of_UART_WRITE 0440  
                          ___awdiv 05BB                            ___awmod 04FC  
                          ___lldiv 0555                            __ptext1 0435  
                          __ptext2 0422                            __ptext3 044D  
                          __ptext4 0735                            __ptext5 0494  
                          __ptext6 04FC                            __ptext7 05BB  
                          __ptext8 06A0                            __ptext9 042B  
                 ___awmod@dividend 0072           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 000D  
                      SET_RTC@hour 0021           __size_of_I2C_Master_Stop 0009  
                      SET_RTC@year 0024               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Init@c 0020  
                 I2C_Master_Read@a 0070                          _UART_INIT 044D  
                        _UART_READ 0422                          _TRISCbits 0087  
                        _TXSTAbits 0098                         main@minute 0031  
                __size_of_READ_RTC 0095                         ?_UART_INIT 0070  
                       ?_UART_READ 0070                        _BAUDCTLbits 0187  
              start_initialization 07F1                  ??_I2C_Master_Init 0024  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                          ___latbits 0002  
                    __pcstackBANK0 0020                           ?_SET_RTC 0021  
                 _I2C_Master_Start 0410                   _I2C_Master_Write 042B  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 0070                        ??_UART_INIT 0070  
                      ??_UART_READ 0070                           _READ_RTC 06A0  
                         _PIE1bits 008C                           _PIR1bits 000C  
                    SET_RTC@minute 0028                I2C_Master_Read@temp 0074  
                 __size_of_SET_RTC 00BC  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0067                   __size_of___awmod 0059  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0066  
          __size_of_decimal_to_bcd 0030                    _I2C_Master_Init 04C4  
                  _I2C_Master_Read 0466                    _I2C_Master_Wait 0440  
                  _I2C_Master_Stop 0419                           __ptext10 0419  
                         __ptext11 0410                           __ptext12 0407  
                         __ptext13 0466                           __ptext14 0440  
                         __ptext15 04C4                           __ptext16 0555  
                    __size_of_main 007E                       SET_RTC@m_day 0022  
                     SET_RTC@month 0023               decimal_to_bcd@number 0020  
                         main@hour 0032           __end_of_I2C_Master_Start 0419  
         __end_of_I2C_Master_Write 0435                         _INTCONbits 000B  
                 ___lldiv@dividend 0074                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 04FC            __end_of_I2C_Master_Read 0494  
          __end_of_I2C_Master_Wait 044D            __end_of_I2C_Master_Stop 0422  
                       _UART_WRITE 0435                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                        _SSPCON2bits 0091  
                      main@Bandera 0030  
