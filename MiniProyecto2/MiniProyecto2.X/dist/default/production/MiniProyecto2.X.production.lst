

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 20:01:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	nvBANK0
   455  0035                     __pnvBANK0:
   456  0035                     _year:
   457  0035                     	ds	1
   458  0036                     _month:
   459  0036                     	ds	1
   460  0037                     _m_day:
   461  0037                     	ds	1
   462  0038                     _hour:
   463  0038                     	ds	1
   464  0039                     _minute:
   465  0039                     	ds	1
   466  0013                     _SSPBUF	set	19
   467  0014                     _SSPCON	set	20
   468  001A                     _RCREG	set	26
   469  0019                     _TXREG	set	25
   470  0018                     _RCSTA	set	24
   471  000C                     _PIR1bits	set	12
   472  000B                     _INTCONbits	set	11
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0063                     _SSPIF	set	99
   479  005E                     _PEIE	set	94
   480  005F                     _GIE	set	95
   481  0098                     _TXSTAbits	set	152
   482  0091                     _SSPCON2bits	set	145
   483  0087                     _TRISCbits	set	135
   484  0094                     _SSPSTAT	set	148
   485  0093                     _SSPADD	set	147
   486  0091                     _SSPCON2	set	145
   487  0098                     _TXSTA	set	152
   488  0099                     _SPBRG	set	153
   489  009A                     _SPBRGH	set	154
   490  008C                     _PIE1bits	set	140
   491  0089                     _TRISE	set	137
   492  0087                     _TRISC	set	135
   493  0088                     _TRISD	set	136
   494  0086                     _TRISB	set	134
   495  0085                     _TRISA	set	133
   496  008F                     _OSCCONbits	set	143
   497  0463                     _SSPIE	set	1123
   498  043C                     _TRISC4	set	1084
   499  043B                     _TRISC3	set	1083
   500  0187                     _BAUDCTLbits	set	391
   501  0189                     _ANSELH	set	393
   502  0188                     _ANSEL	set	392
   503                           
   504                           	psect	cinit
   505  000F                     start_initialization:	
   506                           ; #config settings
   507                           
   508  000F                     __initialization:
   509                           
   510                           ; Clear objects allocated to COMMON
   511  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   512  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   513                           
   514                           ; Clear objects allocated to BANK0
   515  0011  1283               	bcf	3,5	;RP0=0, select bank0
   516  0012  1303               	bcf	3,6	;RP1=0, select bank0
   517  0013  01BA               	clrf	__pbssBANK0& (0+127)
   518  0014  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   519  0015                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  0015                     __end_of__initialization:
   523  0015  0183               	clrf	3
   524  0016  120A  118A  28D5   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssCOMMON
   527  0079                     __pbssCOMMON:
   528  0079                     _Start:
   529  0079                     	ds	1
   530  007A                     _i:
   531  007A                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  003A                     __pbssBANK0:
   535  003A                     _Bandera:
   536  003A                     	ds	1
   537  003B                     _second:
   538  003B                     	ds	1
   539                           
   540                           	psect	cstackCOMMON
   541  0070                     __pcstackCOMMON:
   542  0070                     ?_READ_RTC:
   543  0070                     ?_main:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_ISR:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_ISR:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_I2C_Master_Wait:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_I2C_Master_Start:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_I2C_Master_RepeatedStart:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_I2C_Master_Stop:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_decimal_to_bcd:	
   565                           ; 1 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569  0070                     	ds	3
   570  0073                     ??_I2C_Master_Wait:
   571  0073                     ??_I2C_Master_Start:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  0073                     ??_I2C_Master_RepeatedStart:	
   575                           ; 1 bytes @ 0x3
   576                           
   577  0073                     ??_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x3
   579                           
   580  0073                     ?_I2C_Master_Write:	
   581                           ; 1 bytes @ 0x3
   582                           
   583  0073                     ??___lldiv:	
   584                           ; 1 bytes @ 0x3
   585                           
   586  0073                     ?_I2C_Master_Read:	
   587                           ; 1 bytes @ 0x3
   588                           
   589  0073                     ?___awdiv:	
   590                           ; 2 bytes @ 0x3
   591                           
   592  0073                     ?___awmod:	
   593                           ; 2 bytes @ 0x3
   594                           
   595  0073                     I2C_Master_Write@d:	
   596                           ; 2 bytes @ 0x3
   597                           
   598  0073                     I2C_Master_Read@a:	
   599                           ; 2 bytes @ 0x3
   600                           
   601  0073                     ___awdiv@divisor:	
   602                           ; 2 bytes @ 0x3
   603                           
   604  0073                     ___awmod@divisor:	
   605                           ; 2 bytes @ 0x3
   606                           
   607                           
   608                           ; 2 bytes @ 0x3
   609  0073                     	ds	1
   610  0074                     ___lldiv@quotient:
   611                           
   612                           ; 4 bytes @ 0x4
   613  0074                     	ds	1
   614  0075                     ??_I2C_Master_Write:
   615  0075                     ??_I2C_Master_Read:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ___awdiv@dividend:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ___awmod@dividend:	
   622                           ; 2 bytes @ 0x5
   623                           
   624                           
   625                           ; 2 bytes @ 0x5
   626  0075                     	ds	2
   627  0077                     ??___awdiv:
   628  0077                     ??___awmod:	
   629                           ; 1 bytes @ 0x7
   630                           
   631  0077                     I2C_Master_Read@temp:	
   632                           ; 1 bytes @ 0x7
   633                           
   634                           
   635                           ; 2 bytes @ 0x7
   636  0077                     	ds	1
   637  0078                     decimal_to_bcd@number:
   638  0078                     ___lldiv@counter:	
   639                           ; 1 bytes @ 0x8
   640                           
   641                           
   642                           ; 1 bytes @ 0x8
   643  0078                     	ds	1
   644                           
   645                           	psect	cstackBANK0
   646  0020                     __pcstackBANK0:
   647  0020                     ??_READ_RTC:
   648  0020                     ?___lldiv:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0020                     ___awdiv@counter:	
   652                           ; 4 bytes @ 0x0
   653                           
   654  0020                     ___awmod@counter:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0020                     ___lldiv@divisor:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 4 bytes @ 0x0
   662  0020                     	ds	1
   663  0021                     ___awdiv@sign:
   664  0021                     ___awmod@sign:	
   665                           ; 1 bytes @ 0x1
   666                           
   667                           
   668                           ; 1 bytes @ 0x1
   669  0021                     	ds	1
   670  0022                     ___awdiv@quotient:
   671                           
   672                           ; 2 bytes @ 0x2
   673  0022                     	ds	2
   674  0024                     ??_decimal_to_bcd:
   675  0024                     ___lldiv@dividend:	
   676                           ; 1 bytes @ 0x4
   677                           
   678                           
   679                           ; 4 bytes @ 0x4
   680  0024                     	ds	4
   681  0028                     ?_I2C_Master_Init:
   682  0028                     I2C_Master_Init@c:	
   683                           ; 1 bytes @ 0x8
   684                           
   685                           
   686                           ; 4 bytes @ 0x8
   687  0028                     	ds	1
   688  0029                     ?_SET_RTC:
   689  0029                     SET_RTC@hour:	
   690                           ; 1 bytes @ 0x9
   691                           
   692                           
   693                           ; 1 bytes @ 0x9
   694  0029                     	ds	1
   695  002A                     SET_RTC@m_day:
   696                           
   697                           ; 1 bytes @ 0xA
   698  002A                     	ds	1
   699  002B                     SET_RTC@month:
   700                           
   701                           ; 1 bytes @ 0xB
   702  002B                     	ds	1
   703  002C                     ??_I2C_Master_Init:
   704  002C                     SET_RTC@year:	
   705                           ; 1 bytes @ 0xC
   706                           
   707                           
   708                           ; 1 bytes @ 0xC
   709  002C                     	ds	1
   710  002D                     ??_SET_RTC:
   711                           
   712                           ; 1 bytes @ 0xD
   713  002D                     	ds	3
   714  0030                     SET_RTC@minute:
   715                           
   716                           ; 1 bytes @ 0x10
   717  0030                     	ds	1
   718  0031                     ??_main:
   719                           
   720                           ; 1 bytes @ 0x11
   721  0031                     	ds	4
   722                           
   723                           	psect	maintext
   724  00D5                     __pmaintext:	
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 47 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : B00/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       4       0       0       0
   747 ;;      Totals:         0       4       0       0       0
   748 ;;Total ram usage:        4 bytes
   749 ;; Hardware stack levels required when called:    4
   750 ;; This function calls:
   751 ;;		_I2C_Master_Init
   752 ;;		_READ_RTC
   753 ;;		_SET_RTC
   754 ;; This function is called by:
   755 ;;		Startup code after reset
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _main
   761  00D5                     _main:
   762  00D5                     l1480:	
   763                           ;incstack = 0
   764                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   765                           
   766                           
   767                           ;main.c: 50:     while (1) {
   768  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   769  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   770  00D7  080F               	movf	15,w	;volatile
   771  00D8  398F               	andlw	-113
   772  00D9  3860               	iorlw	96
   773  00DA  008F               	movwf	15	;volatile
   774  00DB                     l1482:
   775                           
   776                           ;main.c: 51:         READ_RTC();
   777  00DB  118F               	bcf	15,3	;volatile
   778  00DC                     l1484:
   779                           
   780                           ;main.c: 52:         TXREG=second;
   781  00DC  110F               	bcf	15,2	;volatile
   782  00DD                     l1486:
   783                           
   784                           ;main.c: 53:         _delay((unsigned long)((20)*(4000000/4000.0)));
   785  00DD  108F               	bcf	15,1	;volatile
   786  00DE                     l1488:
   787                           
   788                           ;main.c: 54:         _delay((unsigned long)((20)*(4000000/4000.0)));
   789  00DE  140F               	bsf	15,0	;volatile
   790  00DF                     l1490:
   791                           
   792                           ;main.c: 57: }
   793  00DF  1683               	bsf	3,5	;RP0=1, select bank3
   794  00E0  1703               	bsf	3,6	;RP1=1, select bank3
   795  00E1  0188               	clrf	8	;volatile
   796  00E2                     l1492:
   797                           
   798                           ;main.c: 58: 
   799  00E2  0189               	clrf	9	;volatile
   800  00E3                     l1494:
   801                           
   802                           ;main.c: 59:  void __attribute__((picinterrupt(("")))) ISR(void) {
   803  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   804  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   805  00E5  0185               	clrf	5	;volatile
   806  00E6                     l1496:
   807                           
   808                           ;main.c: 60:     if(PIR1bits.RCIF==1){
   809  00E6  0186               	clrf	6	;volatile
   810  00E7                     l1498:
   811                           
   812                           ;main.c: 61:         PIR1bits.RCIF=0;
   813  00E7  0188               	clrf	8	;volatile
   814  00E8                     l1500:
   815                           
   816                           ;main.c: 62:         Bandera = RCREG;
   817  00E8  30D8               	movlw	216
   818  00E9  0087               	movwf	7	;volatile
   819  00EA                     l1502:
   820                           
   821                           ;main.c: 63:         return;
   822  00EA  0189               	clrf	9	;volatile
   823  00EB                     l1504:
   824                           
   825                           ;main.c: 64:     }
   826  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   827  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   828  00ED  0185               	clrf	5	;volatile
   829  00EE                     l1506:
   830                           
   831                           ;main.c: 65:  }
   832  00EE  0186               	clrf	6	;volatile
   833  00EF                     l1508:
   834  00EF  0187               	clrf	7	;volatile
   835  00F0                     l1510:
   836  00F0  0188               	clrf	8	;volatile
   837  00F1                     l1512:
   838  00F1  0189               	clrf	9	;volatile
   839  00F2                     l1514:
   840  00F2  302D               	movlw	45
   841  00F3  00B1               	movwf	??_main
   842  00F4  0831               	movf	??_main,w
   843  00F5  00B9               	movwf	_minute
   844  00F6                     l1516:
   845  00F6  3008               	movlw	8
   846  00F7  00B1               	movwf	??_main
   847  00F8  0831               	movf	??_main,w
   848  00F9  00B8               	movwf	_hour
   849  00FA                     l1518:
   850  00FA  3005               	movlw	5
   851  00FB  00B1               	movwf	??_main
   852  00FC  0831               	movf	??_main,w
   853  00FD  00B7               	movwf	_m_day
   854  00FE                     l1520:
   855  00FE  3003               	movlw	3
   856  00FF  00B1               	movwf	??_main
   857  0100  0831               	movf	??_main,w
   858  0101  00B6               	movwf	_month
   859  0102                     l1522:
   860  0102  3015               	movlw	21
   861  0103  00B1               	movwf	??_main
   862  0104  0831               	movf	??_main,w
   863  0105  00B5               	movwf	_year
   864  0106                     l1524:
   865  0106  01BA               	clrf	_Bandera
   866  0107                     l1526:
   867  0107  178B               	bsf	11,7	;volatile
   868  0108                     l1528:
   869  0108  170B               	bsf	11,6	;volatile
   870  0109                     l1530:
   871  0109  1683               	bsf	3,5	;RP0=1, select bank1
   872  010A  1303               	bcf	3,6	;RP1=0, select bank1
   873  010B  168C               	bsf	12,5	;volatile
   874  010C                     l1532:
   875  010C  1283               	bcf	3,5	;RP0=0, select bank0
   876  010D  1303               	bcf	3,6	;RP1=0, select bank0
   877  010E  128C               	bcf	12,5	;volatile
   878  010F                     l1534:
   879  010F  120C               	bcf	12,4	;volatile
   880  0110                     l1536:
   881  0110  1683               	bsf	3,5	;RP0=1, select bank1
   882  0111  1303               	bcf	3,6	;RP1=0, select bank1
   883  0112  019A               	clrf	26	;volatile
   884  0113                     l1538:
   885  0113  3019               	movlw	25
   886  0114  0099               	movwf	25	;volatile
   887  0115                     l1540:
   888  0115  3024               	movlw	36
   889  0116  0098               	movwf	24	;volatile
   890  0117                     l1542:
   891  0117  3090               	movlw	144
   892  0118  1283               	bcf	3,5	;RP0=0, select bank0
   893  0119  1303               	bcf	3,6	;RP1=0, select bank0
   894  011A  0098               	movwf	24	;volatile
   895  011B                     l1544:
   896  011B  1683               	bsf	3,5	;RP0=1, select bank3
   897  011C  1703               	bsf	3,6	;RP1=1, select bank3
   898  011D  1187               	bcf	7,3	;volatile
   899  011E                     l1546:
   900  011E  3000               	movlw	0
   901  011F  1283               	bcf	3,5	;RP0=0, select bank0
   902  0120  1303               	bcf	3,6	;RP1=0, select bank0
   903  0121  00AB               	movwf	I2C_Master_Init@c+3
   904  0122  3001               	movlw	1
   905  0123  00AA               	movwf	I2C_Master_Init@c+2
   906  0124  3086               	movlw	134
   907  0125  00A9               	movwf	I2C_Master_Init@c+1
   908  0126  30A0               	movlw	160
   909  0127  00A8               	movwf	I2C_Master_Init@c
   910  0128  120A  118A  232E  120A  118A  	fcall	_I2C_Master_Init
   911  012D                     l1548:
   912  012D  1283               	bcf	3,5	;RP0=0, select bank0
   913  012E  1303               	bcf	3,6	;RP1=0, select bank0
   914  012F  0838               	movf	_hour,w
   915  0130  00B1               	movwf	??_main
   916  0131  0831               	movf	??_main,w
   917  0132  00A9               	movwf	SET_RTC@hour
   918  0133  0837               	movf	_m_day,w
   919  0134  00B2               	movwf	??_main+1
   920  0135  0832               	movf	??_main+1,w
   921  0136  00AA               	movwf	SET_RTC@m_day
   922  0137  0836               	movf	_month,w
   923  0138  00B3               	movwf	??_main+2
   924  0139  0833               	movf	??_main+2,w
   925  013A  00AB               	movwf	SET_RTC@month
   926  013B  0835               	movf	_year,w
   927  013C  00B4               	movwf	??_main+3
   928  013D  0834               	movf	??_main+3,w
   929  013E  00AC               	movwf	SET_RTC@year
   930  013F  0839               	movf	_minute,w
   931  0140  120A  118A  2019  120A  118A  	fcall	_SET_RTC
   932  0145                     l1550:
   933  0145  120A  118A  216C  120A  118A  	fcall	_READ_RTC
   934  014A                     l1552:
   935  014A  1283               	bcf	3,5	;RP0=0, select bank0
   936  014B  1303               	bcf	3,6	;RP1=0, select bank0
   937  014C  083B               	movf	_second,w
   938  014D  0099               	movwf	25	;volatile
   939  014E                     l1554:
   940  014E  301A               	movlw	26
   941  014F  1283               	bcf	3,5	;RP0=0, select bank0
   942  0150  1303               	bcf	3,6	;RP1=0, select bank0
   943  0151  00B2               	movwf	??_main+1
   944  0152  30F7               	movlw	247
   945  0153  00B1               	movwf	??_main
   946  0154                     u877:
   947  0154  0BB1               	decfsz	??_main,f
   948  0155  2954               	goto	u877
   949  0156  0BB2               	decfsz	??_main+1,f
   950  0157  2954               	goto	u877
   951  0158  2959               	nop2
   952  0159                     l1556:
   953  0159  301A               	movlw	26
   954  015A  1283               	bcf	3,5	;RP0=0, select bank0
   955  015B  1303               	bcf	3,6	;RP1=0, select bank0
   956  015C  00B2               	movwf	??_main+1
   957  015D  30F7               	movlw	247
   958  015E  00B1               	movwf	??_main
   959  015F                     u887:
   960  015F  0BB1               	decfsz	??_main,f
   961  0160  295F               	goto	u887
   962  0161  0BB2               	decfsz	??_main+1,f
   963  0162  295F               	goto	u887
   964  0163  2964               	nop2
   965  0164                     l1558:
   966  0164  1283               	bcf	3,5	;RP0=0, select bank0
   967  0165  1303               	bcf	3,6	;RP1=0, select bank0
   968  0166  083A               	movf	_Bandera,w
   969  0167  0088               	movwf	8	;volatile
   970  0168  2945               	goto	l1550
   971  0169  120A  118A  280C   	ljmp	start
   972  016C                     __end_of_main:
   973                           
   974                           	psect	text1
   975  0019                     __ptext1:	
   976 ;; *************** function _SET_RTC *****************
   977 ;; Defined at:
   978 ;;		line 49 in file "RTC.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  minute          1    wreg     unsigned char 
   981 ;;  hour            1    9[BANK0 ] unsigned char 
   982 ;;  m_day           1   10[BANK0 ] unsigned char 
   983 ;;  month           1   11[BANK0 ] unsigned char 
   984 ;;  year            1   12[BANK0 ] unsigned char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  minute          1   16[BANK0 ] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      unsigned char 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       4       0       0       0
   997 ;;      Locals:         0       1       0       0       0
   998 ;;      Temps:          0       3       0       0       0
   999 ;;      Totals:         0       8       0       0       0
  1000 ;;Total ram usage:        8 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    3
  1003 ;; This function calls:
  1004 ;;		_I2C_Master_Start
  1005 ;;		_I2C_Master_Stop
  1006 ;;		_I2C_Master_Write
  1007 ;;		_decimal_to_bcd
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _SET_RTC
  1015  0019                     _SET_RTC:
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _SET_RTC: [wreg+status,2+status,0+pclath+cstack]
  1019                           ;SET_RTC@minute stored from wreg
  1020  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1021  001A  1303               	bcf	3,6	;RP1=0, select bank0
  1022  001B  00B0               	movwf	SET_RTC@minute
  1023  001C                     l1468:
  1024                           
  1025                           ;RTC.c: 51:     minute = decimal_to_bcd(minute);
  1026  001C  0830               	movf	SET_RTC@minute,w
  1027  001D  120A  118A  2368  120A  118A  	fcall	_decimal_to_bcd
  1028  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0024  00AD               	movwf	??_SET_RTC
  1031  0025  082D               	movf	??_SET_RTC,w
  1032  0026  00B0               	movwf	SET_RTC@minute
  1033                           
  1034                           ;RTC.c: 52:     hour = decimal_to_bcd(hour);
  1035  0027  0829               	movf	SET_RTC@hour,w
  1036  0028  120A  118A  2368  120A  118A  	fcall	_decimal_to_bcd
  1037  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1038  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1039  002F  00AD               	movwf	??_SET_RTC
  1040  0030  082D               	movf	??_SET_RTC,w
  1041  0031  00A9               	movwf	SET_RTC@hour
  1042                           
  1043                           ;RTC.c: 53:     m_day = decimal_to_bcd(m_day);
  1044  0032  082A               	movf	SET_RTC@m_day,w
  1045  0033  120A  118A  2368  120A  118A  	fcall	_decimal_to_bcd
  1046  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1048  003A  00AD               	movwf	??_SET_RTC
  1049  003B  082D               	movf	??_SET_RTC,w
  1050  003C  00AA               	movwf	SET_RTC@m_day
  1051                           
  1052                           ;RTC.c: 54:     month = decimal_to_bcd(month);
  1053  003D  082B               	movf	SET_RTC@month,w
  1054  003E  120A  118A  2368  120A  118A  	fcall	_decimal_to_bcd
  1055  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0045  00AD               	movwf	??_SET_RTC
  1058  0046  082D               	movf	??_SET_RTC,w
  1059  0047  00AB               	movwf	SET_RTC@month
  1060                           
  1061                           ;RTC.c: 55:     year = decimal_to_bcd(year);
  1062  0048  082C               	movf	SET_RTC@year,w
  1063  0049  120A  118A  2368  120A  118A  	fcall	_decimal_to_bcd
  1064  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1065  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0050  00AD               	movwf	??_SET_RTC
  1067  0051  082D               	movf	??_SET_RTC,w
  1068  0052  00AC               	movwf	SET_RTC@year
  1069                           
  1070                           ;RTC.c: 58:     I2C_Master_Start();
  1071  0053  120A  118A  23FA  120A  118A  	fcall	_I2C_Master_Start
  1072                           
  1073                           ;RTC.c: 59:     I2C_Master_Write(0xD0);
  1074  0058  30D0               	movlw	208
  1075  0059  00F3               	movwf	I2C_Master_Write@d
  1076  005A  3000               	movlw	0
  1077  005B  00F4               	movwf	I2C_Master_Write@d+1
  1078  005C  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1079                           
  1080                           ;RTC.c: 60:     I2C_Master_Write(0);
  1081  0061  3000               	movlw	0
  1082  0062  00F3               	movwf	I2C_Master_Write@d
  1083  0063  00F4               	movwf	I2C_Master_Write@d+1
  1084  0064  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1085                           
  1086                           ;RTC.c: 61:     I2C_Master_Write(0);
  1087  0069  3000               	movlw	0
  1088  006A  00F3               	movwf	I2C_Master_Write@d
  1089  006B  00F4               	movwf	I2C_Master_Write@d+1
  1090  006C  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1091                           
  1092                           ;RTC.c: 62:     I2C_Master_Write(minute);
  1093  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0073  0830               	movf	SET_RTC@minute,w
  1096  0074  00AD               	movwf	??_SET_RTC
  1097  0075  01AE               	clrf	??_SET_RTC+1
  1098  0076  082D               	movf	??_SET_RTC,w
  1099  0077  00F3               	movwf	I2C_Master_Write@d
  1100  0078  082E               	movf	??_SET_RTC+1,w
  1101  0079  00F4               	movwf	I2C_Master_Write@d+1
  1102  007A  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1103                           
  1104                           ;RTC.c: 63:     I2C_Master_Write(hour);
  1105  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0081  0829               	movf	SET_RTC@hour,w
  1108  0082  00AD               	movwf	??_SET_RTC
  1109  0083  01AE               	clrf	??_SET_RTC+1
  1110  0084  082D               	movf	??_SET_RTC,w
  1111  0085  00F3               	movwf	I2C_Master_Write@d
  1112  0086  082E               	movf	??_SET_RTC+1,w
  1113  0087  00F4               	movwf	I2C_Master_Write@d+1
  1114  0088  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1115                           
  1116                           ;RTC.c: 64:     I2C_Master_Write(1);
  1117  008D  3001               	movlw	1
  1118  008E  00F3               	movwf	I2C_Master_Write@d
  1119  008F  3000               	movlw	0
  1120  0090  00F4               	movwf	I2C_Master_Write@d+1
  1121  0091  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1122                           
  1123                           ;RTC.c: 65:     I2C_Master_Write(m_day);
  1124  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0098  082A               	movf	SET_RTC@m_day,w
  1127  0099  00AD               	movwf	??_SET_RTC
  1128  009A  01AE               	clrf	??_SET_RTC+1
  1129  009B  082D               	movf	??_SET_RTC,w
  1130  009C  00F3               	movwf	I2C_Master_Write@d
  1131  009D  082E               	movf	??_SET_RTC+1,w
  1132  009E  00F4               	movwf	I2C_Master_Write@d+1
  1133  009F  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1134                           
  1135                           ;RTC.c: 66:     I2C_Master_Write(month);
  1136  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00A6  082B               	movf	SET_RTC@month,w
  1139  00A7  00AD               	movwf	??_SET_RTC
  1140  00A8  01AE               	clrf	??_SET_RTC+1
  1141  00A9  082D               	movf	??_SET_RTC,w
  1142  00AA  00F3               	movwf	I2C_Master_Write@d
  1143  00AB  082E               	movf	??_SET_RTC+1,w
  1144  00AC  00F4               	movwf	I2C_Master_Write@d+1
  1145  00AD  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1146                           
  1147                           ;RTC.c: 67:     I2C_Master_Write(year);
  1148  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1150  00B4  082C               	movf	SET_RTC@year,w
  1151  00B5  00AD               	movwf	??_SET_RTC
  1152  00B6  01AE               	clrf	??_SET_RTC+1
  1153  00B7  082D               	movf	??_SET_RTC,w
  1154  00B8  00F3               	movwf	I2C_Master_Write@d
  1155  00B9  082E               	movf	??_SET_RTC+1,w
  1156  00BA  00F4               	movwf	I2C_Master_Write@d+1
  1157  00BB  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1158                           
  1159                           ;RTC.c: 68:     I2C_Master_Stop();
  1160  00C0  120A  118A  23F1  120A  118A  	fcall	_I2C_Master_Stop
  1161  00C5                     l1470:
  1162                           
  1163                           ;RTC.c: 70:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1164  00C5  3003               	movlw	3
  1165  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00C8  00AF               	movwf	??_SET_RTC+2
  1168  00C9  3008               	movlw	8
  1169  00CA  00AE               	movwf	??_SET_RTC+1
  1170  00CB  3076               	movlw	118
  1171  00CC  00AD               	movwf	??_SET_RTC
  1172  00CD                     u897:
  1173  00CD  0BAD               	decfsz	??_SET_RTC,f
  1174  00CE  28CD               	goto	u897
  1175  00CF  0BAE               	decfsz	??_SET_RTC+1,f
  1176  00D0  28CD               	goto	u897
  1177  00D1  0BAF               	decfsz	??_SET_RTC+2,f
  1178  00D2  28CD               	goto	u897
  1179  00D3  0000               	nop
  1180  00D4                     l226:
  1181  00D4  0008               	return
  1182  00D5                     __end_of_SET_RTC:
  1183                           
  1184                           	psect	text2
  1185  0368                     __ptext2:	
  1186 ;; *************** function _decimal_to_bcd *****************
  1187 ;; Defined at:
  1188 ;;		line 22 in file "RTC.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  number          1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  number          1    8[COMMON] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0
  1204 ;;      Temps:          0       5       0       0       0
  1205 ;;      Totals:         1       5       0       0       0
  1206 ;;Total ram usage:        6 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    2
  1209 ;; This function calls:
  1210 ;;		___awdiv
  1211 ;;		___awmod
  1212 ;; This function is called by:
  1213 ;;		_SET_RTC
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _decimal_to_bcd
  1219  0368                     _decimal_to_bcd:
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1223                           ;decimal_to_bcd@number stored from wreg
  1224  0368  00F8               	movwf	decimal_to_bcd@number
  1225  0369                     l1428:
  1226                           
  1227                           ;RTC.c: 23:     return (((number / 10) << 4) + (number % 10));
  1228  0369  300A               	movlw	10
  1229  036A  00F3               	movwf	___awdiv@divisor
  1230  036B  3000               	movlw	0
  1231  036C  00F4               	movwf	___awdiv@divisor+1
  1232  036D  0878               	movf	decimal_to_bcd@number,w
  1233  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0370  00A4               	movwf	??_decimal_to_bcd
  1236  0371  01A5               	clrf	??_decimal_to_bcd+1
  1237  0372  0824               	movf	??_decimal_to_bcd,w
  1238  0373  00F5               	movwf	___awdiv@dividend
  1239  0374  0825               	movf	??_decimal_to_bcd+1,w
  1240  0375  00F6               	movwf	___awdiv@dividend+1
  1241  0376  120A  118A  2202  120A  118A  	fcall	___awdiv
  1242  037B  0873               	movf	?___awdiv,w
  1243  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1244  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1245  037E  00A6               	movwf	??_decimal_to_bcd+2
  1246  037F  3004               	movlw	4
  1247  0380                     u785:
  1248  0380  1003               	clrc
  1249  0381  0DA6               	rlf	??_decimal_to_bcd+2,f
  1250  0382  3EFF               	addlw	-1
  1251  0383  1D03               	skipz
  1252  0384  2B80               	goto	u785
  1253  0385  300A               	movlw	10
  1254  0386  00F3               	movwf	___awmod@divisor
  1255  0387  3000               	movlw	0
  1256  0388  00F4               	movwf	___awmod@divisor+1
  1257  0389  0878               	movf	decimal_to_bcd@number,w
  1258  038A  00A7               	movwf	??_decimal_to_bcd+3
  1259  038B  01A8               	clrf	??_decimal_to_bcd+4
  1260  038C  0827               	movf	??_decimal_to_bcd+3,w
  1261  038D  00F5               	movwf	___awmod@dividend
  1262  038E  0828               	movf	??_decimal_to_bcd+4,w
  1263  038F  00F6               	movwf	___awmod@dividend+1
  1264  0390  120A  118A  22D3  120A  118A  	fcall	___awmod
  1265  0395  0873               	movf	?___awmod,w
  1266  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0398  0726               	addwf	??_decimal_to_bcd+2,w
  1269  0399                     l220:
  1270  0399  0008               	return
  1271  039A                     __end_of_decimal_to_bcd:
  1272                           
  1273                           	psect	text3
  1274  02D3                     __ptext3:	
  1275 ;; *************** function ___awmod *****************
  1276 ;; Defined at:
  1277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  divisor         2    3[COMMON] int 
  1280 ;;  dividend        2    5[COMMON] int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  sign            1    1[BANK0 ] unsigned char 
  1283 ;;  counter         1    0[BANK0 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  2    3[COMMON] int 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         4       0       0       0       0
  1294 ;;      Locals:         0       2       0       0       0
  1295 ;;      Temps:          1       0       0       0       0
  1296 ;;      Totals:         5       2       0       0       0
  1297 ;;Total ram usage:        7 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_decimal_to_bcd
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function ___awmod
  1309  02D3                     ___awmod:
  1310  02D3                     l1390:	
  1311                           ;incstack = 0
  1312                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1313                           
  1314  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1315  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1316  02D5  01A1               	clrf	___awmod@sign
  1317  02D6                     l1392:
  1318  02D6  1FF6               	btfss	___awmod@dividend+1,7
  1319  02D7  2AD9               	goto	u691
  1320  02D8  2ADA               	goto	u690
  1321  02D9                     u691:
  1322  02D9  2AE1               	goto	l1398
  1323  02DA                     u690:
  1324  02DA                     l1394:
  1325  02DA  09F5               	comf	___awmod@dividend,f
  1326  02DB  09F6               	comf	___awmod@dividend+1,f
  1327  02DC  0AF5               	incf	___awmod@dividend,f
  1328  02DD  1903               	skipnz
  1329  02DE  0AF6               	incf	___awmod@dividend+1,f
  1330  02DF                     l1396:
  1331  02DF  01A1               	clrf	___awmod@sign
  1332  02E0  0AA1               	incf	___awmod@sign,f
  1333  02E1                     l1398:
  1334  02E1  1FF4               	btfss	___awmod@divisor+1,7
  1335  02E2  2AE4               	goto	u701
  1336  02E3  2AE5               	goto	u700
  1337  02E4                     u701:
  1338  02E4  2AEA               	goto	l1402
  1339  02E5                     u700:
  1340  02E5                     l1400:
  1341  02E5  09F3               	comf	___awmod@divisor,f
  1342  02E6  09F4               	comf	___awmod@divisor+1,f
  1343  02E7  0AF3               	incf	___awmod@divisor,f
  1344  02E8  1903               	skipnz
  1345  02E9  0AF4               	incf	___awmod@divisor+1,f
  1346  02EA                     l1402:
  1347  02EA  0873               	movf	___awmod@divisor,w
  1348  02EB  0474               	iorwf	___awmod@divisor+1,w
  1349  02EC  1903               	btfsc	3,2
  1350  02ED  2AEF               	goto	u711
  1351  02EE  2AF0               	goto	u710
  1352  02EF                     u711:
  1353  02EF  2B1F               	goto	l1420
  1354  02F0                     u710:
  1355  02F0                     l1404:
  1356  02F0  01A0               	clrf	___awmod@counter
  1357  02F1  0AA0               	incf	___awmod@counter,f
  1358  02F2  2AFE               	goto	l1410
  1359  02F3                     l1406:
  1360  02F3  3001               	movlw	1
  1361  02F4                     u725:
  1362  02F4  1003               	clrc
  1363  02F5  0DF3               	rlf	___awmod@divisor,f
  1364  02F6  0DF4               	rlf	___awmod@divisor+1,f
  1365  02F7  3EFF               	addlw	-1
  1366  02F8  1D03               	skipz
  1367  02F9  2AF4               	goto	u725
  1368  02FA                     l1408:
  1369  02FA  3001               	movlw	1
  1370  02FB  00F7               	movwf	??___awmod
  1371  02FC  0877               	movf	??___awmod,w
  1372  02FD  07A0               	addwf	___awmod@counter,f
  1373  02FE                     l1410:
  1374  02FE  1FF4               	btfss	___awmod@divisor+1,7
  1375  02FF  2B01               	goto	u731
  1376  0300  2B02               	goto	u730
  1377  0301                     u731:
  1378  0301  2AF3               	goto	l1406
  1379  0302                     u730:
  1380  0302                     l1412:
  1381  0302  0874               	movf	___awmod@divisor+1,w
  1382  0303  0276               	subwf	___awmod@dividend+1,w
  1383  0304  1D03               	skipz
  1384  0305  2B08               	goto	u745
  1385  0306  0873               	movf	___awmod@divisor,w
  1386  0307  0275               	subwf	___awmod@dividend,w
  1387  0308                     u745:
  1388  0308  1C03               	skipc
  1389  0309  2B0B               	goto	u741
  1390  030A  2B0C               	goto	u740
  1391  030B                     u741:
  1392  030B  2B12               	goto	l1416
  1393  030C                     u740:
  1394  030C                     l1414:
  1395  030C  0873               	movf	___awmod@divisor,w
  1396  030D  02F5               	subwf	___awmod@dividend,f
  1397  030E  0874               	movf	___awmod@divisor+1,w
  1398  030F  1C03               	skipc
  1399  0310  03F6               	decf	___awmod@dividend+1,f
  1400  0311  02F6               	subwf	___awmod@dividend+1,f
  1401  0312                     l1416:
  1402  0312  3001               	movlw	1
  1403  0313                     u755:
  1404  0313  1003               	clrc
  1405  0314  0CF4               	rrf	___awmod@divisor+1,f
  1406  0315  0CF3               	rrf	___awmod@divisor,f
  1407  0316  3EFF               	addlw	-1
  1408  0317  1D03               	skipz
  1409  0318  2B13               	goto	u755
  1410  0319                     l1418:
  1411  0319  3001               	movlw	1
  1412  031A  02A0               	subwf	___awmod@counter,f
  1413  031B  1D03               	btfss	3,2
  1414  031C  2B1E               	goto	u761
  1415  031D  2B1F               	goto	u760
  1416  031E                     u761:
  1417  031E  2B02               	goto	l1412
  1418  031F                     u760:
  1419  031F                     l1420:
  1420  031F  0821               	movf	___awmod@sign,w
  1421  0320  1903               	btfsc	3,2
  1422  0321  2B23               	goto	u771
  1423  0322  2B24               	goto	u770
  1424  0323                     u771:
  1425  0323  2B29               	goto	l1424
  1426  0324                     u770:
  1427  0324                     l1422:
  1428  0324  09F5               	comf	___awmod@dividend,f
  1429  0325  09F6               	comf	___awmod@dividend+1,f
  1430  0326  0AF5               	incf	___awmod@dividend,f
  1431  0327  1903               	skipnz
  1432  0328  0AF6               	incf	___awmod@dividend+1,f
  1433  0329                     l1424:
  1434  0329  0876               	movf	___awmod@dividend+1,w
  1435  032A  00F4               	movwf	?___awmod+1
  1436  032B  0875               	movf	___awmod@dividend,w
  1437  032C  00F3               	movwf	?___awmod
  1438  032D                     l478:
  1439  032D  0008               	return
  1440  032E                     __end_of___awmod:
  1441                           
  1442                           	psect	text4
  1443  0202                     __ptext4:	
  1444 ;; *************** function ___awdiv *****************
  1445 ;; Defined at:
  1446 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  divisor         2    3[COMMON] int 
  1449 ;;  dividend        2    5[COMMON] int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  quotient        2    2[BANK0 ] int 
  1452 ;;  sign            1    1[BANK0 ] unsigned char 
  1453 ;;  counter         1    0[BANK0 ] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2    3[COMMON] int 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         4       0       0       0       0
  1464 ;;      Locals:         0       4       0       0       0
  1465 ;;      Temps:          1       0       0       0       0
  1466 ;;      Totals:         5       4       0       0       0
  1467 ;;Total ram usage:        9 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_decimal_to_bcd
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function ___awdiv
  1479  0202                     ___awdiv:
  1480  0202                     l1136:	
  1481                           ;incstack = 0
  1482                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1483                           
  1484  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0204  01A1               	clrf	___awdiv@sign
  1487  0205                     l1138:
  1488  0205  1FF4               	btfss	___awdiv@divisor+1,7
  1489  0206  2A08               	goto	u391
  1490  0207  2A09               	goto	u390
  1491  0208                     u391:
  1492  0208  2A10               	goto	l1144
  1493  0209                     u390:
  1494  0209                     l1140:
  1495  0209  09F3               	comf	___awdiv@divisor,f
  1496  020A  09F4               	comf	___awdiv@divisor+1,f
  1497  020B  0AF3               	incf	___awdiv@divisor,f
  1498  020C  1903               	skipnz
  1499  020D  0AF4               	incf	___awdiv@divisor+1,f
  1500  020E                     l1142:
  1501  020E  01A1               	clrf	___awdiv@sign
  1502  020F  0AA1               	incf	___awdiv@sign,f
  1503  0210                     l1144:
  1504  0210  1FF6               	btfss	___awdiv@dividend+1,7
  1505  0211  2A13               	goto	u401
  1506  0212  2A14               	goto	u400
  1507  0213                     u401:
  1508  0213  2A1D               	goto	l1150
  1509  0214                     u400:
  1510  0214                     l1146:
  1511  0214  09F5               	comf	___awdiv@dividend,f
  1512  0215  09F6               	comf	___awdiv@dividend+1,f
  1513  0216  0AF5               	incf	___awdiv@dividend,f
  1514  0217  1903               	skipnz
  1515  0218  0AF6               	incf	___awdiv@dividend+1,f
  1516  0219                     l1148:
  1517  0219  3001               	movlw	1
  1518  021A  00F7               	movwf	??___awdiv
  1519  021B  0877               	movf	??___awdiv,w
  1520  021C  06A1               	xorwf	___awdiv@sign,f
  1521  021D                     l1150:
  1522  021D  01A2               	clrf	___awdiv@quotient
  1523  021E  01A3               	clrf	___awdiv@quotient+1
  1524  021F                     l1152:
  1525  021F  0873               	movf	___awdiv@divisor,w
  1526  0220  0474               	iorwf	___awdiv@divisor+1,w
  1527  0221  1903               	btfsc	3,2
  1528  0222  2A24               	goto	u411
  1529  0223  2A25               	goto	u410
  1530  0224                     u411:
  1531  0224  2A5C               	goto	l1172
  1532  0225                     u410:
  1533  0225                     l1154:
  1534  0225  01A0               	clrf	___awdiv@counter
  1535  0226  0AA0               	incf	___awdiv@counter,f
  1536  0227  2A33               	goto	l1160
  1537  0228                     l1156:
  1538  0228  3001               	movlw	1
  1539  0229                     u425:
  1540  0229  1003               	clrc
  1541  022A  0DF3               	rlf	___awdiv@divisor,f
  1542  022B  0DF4               	rlf	___awdiv@divisor+1,f
  1543  022C  3EFF               	addlw	-1
  1544  022D  1D03               	skipz
  1545  022E  2A29               	goto	u425
  1546  022F                     l1158:
  1547  022F  3001               	movlw	1
  1548  0230  00F7               	movwf	??___awdiv
  1549  0231  0877               	movf	??___awdiv,w
  1550  0232  07A0               	addwf	___awdiv@counter,f
  1551  0233                     l1160:
  1552  0233  1FF4               	btfss	___awdiv@divisor+1,7
  1553  0234  2A36               	goto	u431
  1554  0235  2A37               	goto	u430
  1555  0236                     u431:
  1556  0236  2A28               	goto	l1156
  1557  0237                     u430:
  1558  0237                     l1162:
  1559  0237  3001               	movlw	1
  1560  0238                     u445:
  1561  0238  1003               	clrc
  1562  0239  0DA2               	rlf	___awdiv@quotient,f
  1563  023A  0DA3               	rlf	___awdiv@quotient+1,f
  1564  023B  3EFF               	addlw	-1
  1565  023C  1D03               	skipz
  1566  023D  2A38               	goto	u445
  1567  023E  0874               	movf	___awdiv@divisor+1,w
  1568  023F  0276               	subwf	___awdiv@dividend+1,w
  1569  0240  1D03               	skipz
  1570  0241  2A44               	goto	u455
  1571  0242  0873               	movf	___awdiv@divisor,w
  1572  0243  0275               	subwf	___awdiv@dividend,w
  1573  0244                     u455:
  1574  0244  1C03               	skipc
  1575  0245  2A47               	goto	u451
  1576  0246  2A48               	goto	u450
  1577  0247                     u451:
  1578  0247  2A4F               	goto	l1168
  1579  0248                     u450:
  1580  0248                     l1164:
  1581  0248  0873               	movf	___awdiv@divisor,w
  1582  0249  02F5               	subwf	___awdiv@dividend,f
  1583  024A  0874               	movf	___awdiv@divisor+1,w
  1584  024B  1C03               	skipc
  1585  024C  03F6               	decf	___awdiv@dividend+1,f
  1586  024D  02F6               	subwf	___awdiv@dividend+1,f
  1587  024E                     l1166:
  1588  024E  1422               	bsf	___awdiv@quotient,0
  1589  024F                     l1168:
  1590  024F  3001               	movlw	1
  1591  0250                     u465:
  1592  0250  1003               	clrc
  1593  0251  0CF4               	rrf	___awdiv@divisor+1,f
  1594  0252  0CF3               	rrf	___awdiv@divisor,f
  1595  0253  3EFF               	addlw	-1
  1596  0254  1D03               	skipz
  1597  0255  2A50               	goto	u465
  1598  0256                     l1170:
  1599  0256  3001               	movlw	1
  1600  0257  02A0               	subwf	___awdiv@counter,f
  1601  0258  1D03               	btfss	3,2
  1602  0259  2A5B               	goto	u471
  1603  025A  2A5C               	goto	u470
  1604  025B                     u471:
  1605  025B  2A37               	goto	l1162
  1606  025C                     u470:
  1607  025C                     l1172:
  1608  025C  0821               	movf	___awdiv@sign,w
  1609  025D  1903               	btfsc	3,2
  1610  025E  2A60               	goto	u481
  1611  025F  2A61               	goto	u480
  1612  0260                     u481:
  1613  0260  2A66               	goto	l1176
  1614  0261                     u480:
  1615  0261                     l1174:
  1616  0261  09A2               	comf	___awdiv@quotient,f
  1617  0262  09A3               	comf	___awdiv@quotient+1,f
  1618  0263  0AA2               	incf	___awdiv@quotient,f
  1619  0264  1903               	skipnz
  1620  0265  0AA3               	incf	___awdiv@quotient+1,f
  1621  0266                     l1176:
  1622  0266  0823               	movf	___awdiv@quotient+1,w
  1623  0267  00F4               	movwf	?___awdiv+1
  1624  0268  0822               	movf	___awdiv@quotient,w
  1625  0269  00F3               	movwf	?___awdiv
  1626  026A                     l465:
  1627  026A  0008               	return
  1628  026B                     __end_of___awdiv:
  1629                           
  1630                           	psect	text5
  1631  016C                     __ptext5:	
  1632 ;; *************** function _READ_RTC *****************
  1633 ;; Defined at:
  1634 ;;		line 29 in file "RTC.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      unsigned char 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       2       0       0       0
  1651 ;;      Totals:         0       2       0       0       0
  1652 ;;Total ram usage:        2 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    3
  1655 ;; This function calls:
  1656 ;;		_I2C_Master_Read
  1657 ;;		_I2C_Master_RepeatedStart
  1658 ;;		_I2C_Master_Start
  1659 ;;		_I2C_Master_Stop
  1660 ;;		_I2C_Master_Write
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _READ_RTC
  1668  016C                     _READ_RTC:
  1669  016C                     l1474:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _READ_RTC: [wreg+status,2+status,0+pclath+cstack]
  1672                           
  1673                           
  1674                           ;RTC.c: 31:     I2C_Master_Start();
  1675  016C  120A  118A  23FA  120A  118A  	fcall	_I2C_Master_Start
  1676                           
  1677                           ;RTC.c: 32:     I2C_Master_Write(0xD0);
  1678  0171  30D0               	movlw	208
  1679  0172  00F3               	movwf	I2C_Master_Write@d
  1680  0173  3000               	movlw	0
  1681  0174  00F4               	movwf	I2C_Master_Write@d+1
  1682  0175  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1683                           
  1684                           ;RTC.c: 33:     I2C_Master_Write(0);
  1685  017A  3000               	movlw	0
  1686  017B  00F3               	movwf	I2C_Master_Write@d
  1687  017C  00F4               	movwf	I2C_Master_Write@d+1
  1688  017D  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1689                           
  1690                           ;RTC.c: 34:     I2C_Master_RepeatedStart();
  1691  0182  120A  118A  2403  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1692                           
  1693                           ;RTC.c: 35:     I2C_Master_Write(0xD1);
  1694  0187  30D1               	movlw	209
  1695  0188  00F3               	movwf	I2C_Master_Write@d
  1696  0189  3000               	movlw	0
  1697  018A  00F4               	movwf	I2C_Master_Write@d+1
  1698  018B  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Write
  1699                           
  1700                           ;RTC.c: 36:     second = I2C_Master_Read(1);
  1701  0190  3001               	movlw	1
  1702  0191  00F3               	movwf	I2C_Master_Read@a
  1703  0192  3000               	movlw	0
  1704  0193  00F4               	movwf	I2C_Master_Read@a+1
  1705  0194  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1706  0199  0873               	movf	?_I2C_Master_Read,w
  1707  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1708  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1709  019C  00A0               	movwf	??_READ_RTC
  1710  019D  0820               	movf	??_READ_RTC,w
  1711  019E  00BB               	movwf	_second
  1712                           
  1713                           ;RTC.c: 37:     minute = I2C_Master_Read(1);
  1714  019F  3001               	movlw	1
  1715  01A0  00F3               	movwf	I2C_Master_Read@a
  1716  01A1  3000               	movlw	0
  1717  01A2  00F4               	movwf	I2C_Master_Read@a+1
  1718  01A3  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1719  01A8  0873               	movf	?_I2C_Master_Read,w
  1720  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1721  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1722  01AB  00A0               	movwf	??_READ_RTC
  1723  01AC  0820               	movf	??_READ_RTC,w
  1724  01AD  00B9               	movwf	_minute
  1725                           
  1726                           ;RTC.c: 38:     hour = I2C_Master_Read(1);
  1727  01AE  3001               	movlw	1
  1728  01AF  00F3               	movwf	I2C_Master_Read@a
  1729  01B0  3000               	movlw	0
  1730  01B1  00F4               	movwf	I2C_Master_Read@a+1
  1731  01B2  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1732  01B7  0873               	movf	?_I2C_Master_Read,w
  1733  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1734  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1735  01BA  00A0               	movwf	??_READ_RTC
  1736  01BB  0820               	movf	??_READ_RTC,w
  1737  01BC  00B8               	movwf	_hour
  1738                           
  1739                           ;RTC.c: 39:     I2C_Master_Read(1);
  1740  01BD  3001               	movlw	1
  1741  01BE  00F3               	movwf	I2C_Master_Read@a
  1742  01BF  3000               	movlw	0
  1743  01C0  00F4               	movwf	I2C_Master_Read@a+1
  1744  01C1  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1745                           
  1746                           ;RTC.c: 40:     m_day = I2C_Master_Read(1);
  1747  01C6  3001               	movlw	1
  1748  01C7  00F3               	movwf	I2C_Master_Read@a
  1749  01C8  3000               	movlw	0
  1750  01C9  00F4               	movwf	I2C_Master_Read@a+1
  1751  01CA  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1752  01CF  0873               	movf	?_I2C_Master_Read,w
  1753  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1754  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1755  01D2  00A0               	movwf	??_READ_RTC
  1756  01D3  0820               	movf	??_READ_RTC,w
  1757  01D4  00B7               	movwf	_m_day
  1758                           
  1759                           ;RTC.c: 41:     month = I2C_Master_Read(1);
  1760  01D5  3001               	movlw	1
  1761  01D6  00F3               	movwf	I2C_Master_Read@a
  1762  01D7  3000               	movlw	0
  1763  01D8  00F4               	movwf	I2C_Master_Read@a+1
  1764  01D9  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1765  01DE  0873               	movf	?_I2C_Master_Read,w
  1766  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1767  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1768  01E1  00A0               	movwf	??_READ_RTC
  1769  01E2  0820               	movf	??_READ_RTC,w
  1770  01E3  00B6               	movwf	_month
  1771                           
  1772                           ;RTC.c: 42:     year = I2C_Master_Read(0);
  1773  01E4  3000               	movlw	0
  1774  01E5  00F3               	movwf	I2C_Master_Read@a
  1775  01E6  00F4               	movwf	I2C_Master_Read@a+1
  1776  01E7  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
  1777  01EC  0873               	movf	?_I2C_Master_Read,w
  1778  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1779  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1780  01EF  00A0               	movwf	??_READ_RTC
  1781  01F0  0820               	movf	??_READ_RTC,w
  1782  01F1  00B5               	movwf	_year
  1783                           
  1784                           ;RTC.c: 43:     I2C_Master_Stop();
  1785  01F2  120A  118A  23F1  120A  118A  	fcall	_I2C_Master_Stop
  1786  01F7                     l1476:
  1787                           
  1788                           ;RTC.c: 44:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1789  01F7  3082               	movlw	130
  1790  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1791  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1792  01FA  00A1               	movwf	??_READ_RTC+1
  1793  01FB  30DD               	movlw	221
  1794  01FC  00A0               	movwf	??_READ_RTC
  1795  01FD                     u907:
  1796  01FD  0BA0               	decfsz	??_READ_RTC,f
  1797  01FE  29FD               	goto	u907
  1798  01FF  0BA1               	decfsz	??_READ_RTC+1,f
  1799  0200  29FD               	goto	u907
  1800  0201                     l223:
  1801  0201  0008               	return
  1802  0202                     __end_of_READ_RTC:
  1803                           
  1804                           	psect	text6
  1805  03E7                     __ptext6:	
  1806 ;; *************** function _I2C_Master_Write *****************
  1807 ;; Defined at:
  1808 ;;		line 65 in file "I2C.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  d               2    3[COMMON] unsigned int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, pclath, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         2       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         2       0       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    2
  1829 ;; This function calls:
  1830 ;;		_I2C_Master_Wait
  1831 ;; This function is called by:
  1832 ;;		_READ_RTC
  1833 ;;		_SET_RTC
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _I2C_Master_Write
  1839  03E7                     _I2C_Master_Write:
  1840  03E7                     l1230:	
  1841                           ;incstack = 0
  1842                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1843                           
  1844                           
  1845                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1846  03E7  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  1847  03EC                     l1232:
  1848                           
  1849                           ;I2C.c: 68:     SSPBUF = d;
  1850  03EC  0873               	movf	I2C_Master_Write@d,w
  1851  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1852  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1853  03EF  0093               	movwf	19	;volatile
  1854  03F0                     l133:
  1855  03F0  0008               	return
  1856  03F1                     __end_of_I2C_Master_Write:
  1857                           
  1858                           	psect	text7
  1859  03F1                     __ptext7:	
  1860 ;; *************** function _I2C_Master_Stop *****************
  1861 ;; Defined at:
  1862 ;;		line 55 in file "I2C.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		_I2C_Master_Wait
  1885 ;; This function is called by:
  1886 ;;		_READ_RTC
  1887 ;;		_SET_RTC
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _I2C_Master_Stop
  1893  03F1                     _I2C_Master_Stop:
  1894  03F1                     l1226:	
  1895                           ;incstack = 0
  1896                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1897                           
  1898                           
  1899                           ;I2C.c: 57:     I2C_Master_Wait();
  1900  03F1  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  1901  03F6                     l1228:
  1902                           
  1903                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1904  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  1905  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  1906  03F8  1511               	bsf	17,2	;volatile
  1907  03F9                     l130:
  1908  03F9  0008               	return
  1909  03FA                     __end_of_I2C_Master_Stop:
  1910                           
  1911                           	psect	text8
  1912  03FA                     __ptext8:	
  1913 ;; *************** function _I2C_Master_Start *****************
  1914 ;; Defined at:
  1915 ;;		line 39 in file "I2C.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		_I2C_Master_Wait
  1938 ;; This function is called by:
  1939 ;;		_READ_RTC
  1940 ;;		_SET_RTC
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _I2C_Master_Start
  1946  03FA                     _I2C_Master_Start:
  1947  03FA                     l1218:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1950                           
  1951                           
  1952                           ;I2C.c: 41:     I2C_Master_Wait();
  1953  03FA  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  1954  03FF                     l1220:
  1955                           
  1956                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1957  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0401  1411               	bsf	17,0	;volatile
  1960  0402                     l124:
  1961  0402  0008               	return
  1962  0403                     __end_of_I2C_Master_Start:
  1963                           
  1964                           	psect	text9
  1965  0403                     __ptext9:	
  1966 ;; *************** function _I2C_Master_RepeatedStart *****************
  1967 ;; Defined at:
  1968 ;;		line 47 in file "I2C.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    2
  1989 ;; This function calls:
  1990 ;;		_I2C_Master_Wait
  1991 ;; This function is called by:
  1992 ;;		_READ_RTC
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _I2C_Master_RepeatedStart
  1998  0403                     _I2C_Master_RepeatedStart:
  1999  0403                     l1222:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2002                           
  2003                           
  2004                           ;I2C.c: 49:     I2C_Master_Wait();
  2005  0403  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  2006  0408                     l1224:
  2007                           
  2008                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2009  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0409  1303               	bcf	3,6	;RP1=0, select bank1
  2011  040A  1491               	bsf	17,1	;volatile
  2012  040B                     l127:
  2013  040B  0008               	return
  2014  040C                     __end_of_I2C_Master_RepeatedStart:
  2015                           
  2016                           	psect	text10
  2017  039A                     __ptext10:	
  2018 ;; *************** function _I2C_Master_Read *****************
  2019 ;; Defined at:
  2020 ;;		line 74 in file "I2C.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  a               2    3[COMMON] unsigned short 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  temp            2    7[COMMON] unsigned short 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    3[COMMON] unsigned short 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         2       0       0       0       0
  2035 ;;      Locals:         2       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0
  2037 ;;      Totals:         6       0       0       0       0
  2038 ;;Total ram usage:        6 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    2
  2041 ;; This function calls:
  2042 ;;		_I2C_Master_Wait
  2043 ;; This function is called by:
  2044 ;;		_READ_RTC
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _I2C_Master_Read
  2050  039A                     _I2C_Master_Read:
  2051  039A                     l1234:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2054                           
  2055                           
  2056                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2057  039A  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  2058  039F                     l1236:
  2059                           
  2060                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2061  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2062  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2063  03A1  1591               	bsf	17,3	;volatile
  2064                           
  2065                           ;I2C.c: 79:     I2C_Master_Wait();
  2066  03A2  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  2067  03A7                     l1238:
  2068                           
  2069                           ;I2C.c: 80:     temp = SSPBUF;
  2070  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2071  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2072  03A9  0813               	movf	19,w	;volatile
  2073  03AA  00F5               	movwf	??_I2C_Master_Read
  2074  03AB  01F6               	clrf	??_I2C_Master_Read+1
  2075  03AC  0875               	movf	??_I2C_Master_Read,w
  2076  03AD  00F7               	movwf	I2C_Master_Read@temp
  2077  03AE  0876               	movf	??_I2C_Master_Read+1,w
  2078  03AF  00F8               	movwf	I2C_Master_Read@temp+1
  2079  03B0                     l1240:
  2080                           
  2081                           ;I2C.c: 81:     I2C_Master_Wait();
  2082  03B0  120A  118A  23DA  120A  118A  	fcall	_I2C_Master_Wait
  2083  03B5                     l1242:
  2084                           
  2085                           ;I2C.c: 82:     if(a == 1){
  2086  03B5  0373               	decf	I2C_Master_Read@a,w
  2087  03B6  0474               	iorwf	I2C_Master_Read@a+1,w
  2088  03B7  1D03               	btfss	3,2
  2089  03B8  2BBA               	goto	u581
  2090  03B9  2BBB               	goto	u580
  2091  03BA                     u581:
  2092  03BA  2BBF               	goto	l136
  2093  03BB                     u580:
  2094  03BB                     l1244:
  2095                           
  2096                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2097  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2098  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2099  03BD  1291               	bcf	17,5	;volatile
  2100                           
  2101                           ;I2C.c: 84:     }else{
  2102  03BE  2BC2               	goto	l137
  2103  03BF                     l136:
  2104                           
  2105                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2106  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2107  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2108  03C1  1691               	bsf	17,5	;volatile
  2109  03C2                     l137:	
  2110                           ;I2C.c: 86:     }
  2111                           
  2112                           
  2113                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2114  03C2  1611               	bsf	17,4	;volatile
  2115  03C3                     l1246:
  2116                           
  2117                           ;I2C.c: 88:     return temp;
  2118  03C3  0878               	movf	I2C_Master_Read@temp+1,w
  2119  03C4  00F4               	movwf	?_I2C_Master_Read+1
  2120  03C5  0877               	movf	I2C_Master_Read@temp,w
  2121  03C6  00F3               	movwf	?_I2C_Master_Read
  2122  03C7                     l138:
  2123  03C7  0008               	return
  2124  03C8                     __end_of_I2C_Master_Read:
  2125                           
  2126                           	psect	text11
  2127  03DA                     __ptext11:	
  2128 ;; *************** function _I2C_Master_Wait *****************
  2129 ;; Defined at:
  2130 ;;		line 32 in file "I2C.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_I2C_Master_Start
  2155 ;;		_I2C_Master_RepeatedStart
  2156 ;;		_I2C_Master_Stop
  2157 ;;		_I2C_Master_Write
  2158 ;;		_I2C_Master_Read
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _I2C_Master_Wait
  2164  03DA                     _I2C_Master_Wait:
  2165  03DA                     l1132:	
  2166                           ;incstack = 0
  2167                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2168                           
  2169  03DA                     l118:	
  2170                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2171                           
  2172  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2173  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2174  03DC  1914               	btfsc	20,2	;volatile
  2175  03DD  2BDF               	goto	u371
  2176  03DE  2BE0               	goto	u370
  2177  03DF                     u371:
  2178  03DF  2BDA               	goto	l118
  2179  03E0                     u370:
  2180  03E0                     l1134:
  2181  03E0  0811               	movf	17,w	;volatile
  2182  03E1  391F               	andlw	31
  2183  03E2  1D03               	btfss	3,2
  2184  03E3  2BE5               	goto	u381
  2185  03E4  2BE6               	goto	u380
  2186  03E5                     u381:
  2187  03E5  2BDA               	goto	l118
  2188  03E6                     u380:
  2189  03E6                     l121:
  2190  03E6  0008               	return
  2191  03E7                     __end_of_I2C_Master_Wait:
  2192                           
  2193                           	psect	text12
  2194  032E                     __ptext12:	
  2195 ;; *************** function _I2C_Master_Init *****************
  2196 ;; Defined at:
  2197 ;;		line 16 in file "I2C.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  c               4    8[BANK0 ] const unsigned long 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       4       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       4       0       0       0
  2214 ;;      Totals:         0       8       0       0       0
  2215 ;;Total ram usage:        8 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		___lldiv
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _I2C_Master_Init
  2227  032E                     _I2C_Master_Init:
  2228  032E                     l1456:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2231                           
  2232                           
  2233                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2234  032E  3028               	movlw	40
  2235  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0331  0094               	movwf	20	;volatile
  2238  0332                     l1458:
  2239                           
  2240                           ;I2C.c: 19:     SSPCON2 = 0;
  2241  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0334  0191               	clrf	17	;volatile
  2244  0335                     l1460:
  2245                           
  2246                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2247  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0337  0828               	movf	I2C_Master_Init@c,w
  2250  0338  00AC               	movwf	??_I2C_Master_Init
  2251  0339  0829               	movf	I2C_Master_Init@c+1,w
  2252  033A  00AD               	movwf	??_I2C_Master_Init+1
  2253  033B  082A               	movf	I2C_Master_Init@c+2,w
  2254  033C  00AE               	movwf	??_I2C_Master_Init+2
  2255  033D  082B               	movf	I2C_Master_Init@c+3,w
  2256  033E  00AF               	movwf	??_I2C_Master_Init+3
  2257  033F  3002               	movlw	2
  2258  0340                     u865:
  2259  0340  1003               	clrc
  2260  0341  0DAC               	rlf	??_I2C_Master_Init,f
  2261  0342  0DAD               	rlf	??_I2C_Master_Init+1,f
  2262  0343  0DAE               	rlf	??_I2C_Master_Init+2,f
  2263  0344  0DAF               	rlf	??_I2C_Master_Init+3,f
  2264  0345                     u860:
  2265  0345  3EFF               	addlw	-1
  2266  0346  1D03               	skipz
  2267  0347  2B40               	goto	u865
  2268  0348  082F               	movf	??_I2C_Master_Init+3,w
  2269  0349  00A3               	movwf	___lldiv@divisor+3
  2270  034A  082E               	movf	??_I2C_Master_Init+2,w
  2271  034B  00A2               	movwf	___lldiv@divisor+2
  2272  034C  082D               	movf	??_I2C_Master_Init+1,w
  2273  034D  00A1               	movwf	___lldiv@divisor+1
  2274  034E  082C               	movf	??_I2C_Master_Init,w
  2275  034F  00A0               	movwf	___lldiv@divisor
  2276  0350  3000               	movlw	0
  2277  0351  00A7               	movwf	___lldiv@dividend+3
  2278  0352  307A               	movlw	122
  2279  0353  00A6               	movwf	___lldiv@dividend+2
  2280  0354  3012               	movlw	18
  2281  0355  00A5               	movwf	___lldiv@dividend+1
  2282  0356  3000               	movlw	0
  2283  0357  00A4               	movwf	___lldiv@dividend
  2284  0358  120A  118A  226B  120A  118A  	fcall	___lldiv
  2285  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2286  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2287  035F  0820               	movf	?___lldiv,w
  2288  0360  3EFF               	addlw	255
  2289  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0363  0093               	movwf	19	;volatile
  2292  0364                     l1462:
  2293                           
  2294                           ;I2C.c: 21:     SSPSTAT = 0;
  2295  0364  0194               	clrf	20	;volatile
  2296  0365                     l1464:
  2297                           
  2298                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2299  0365  1587               	bsf	7,3	;volatile
  2300  0366                     l1466:
  2301                           
  2302                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2303  0366  1607               	bsf	7,4	;volatile
  2304  0367                     l115:
  2305  0367  0008               	return
  2306  0368                     __end_of_I2C_Master_Init:
  2307                           
  2308                           	psect	text13
  2309  026B                     __ptext13:	
  2310 ;; *************** function ___lldiv *****************
  2311 ;; Defined at:
  2312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  divisor         4    0[BANK0 ] unsigned long 
  2315 ;;  dividend        4    4[BANK0 ] unsigned long 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  quotient        4    4[COMMON] unsigned long 
  2318 ;;  counter         1    8[COMMON] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  4    0[BANK0 ] unsigned long 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       8       0       0       0
  2329 ;;      Locals:         5       0       0       0       0
  2330 ;;      Temps:          1       0       0       0       0
  2331 ;;      Totals:         6       8       0       0       0
  2332 ;;Total ram usage:       14 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_I2C_Master_Init
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function ___lldiv
  2344  026B                     ___lldiv:
  2345  026B                     l1432:	
  2346                           ;incstack = 0
  2347                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2348                           
  2349  026B  3000               	movlw	0
  2350  026C  00F7               	movwf	___lldiv@quotient+3
  2351  026D  3000               	movlw	0
  2352  026E  00F6               	movwf	___lldiv@quotient+2
  2353  026F  3000               	movlw	0
  2354  0270  00F5               	movwf	___lldiv@quotient+1
  2355  0271  3000               	movlw	0
  2356  0272  00F4               	movwf	___lldiv@quotient
  2357  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0275  0823               	movf	___lldiv@divisor+3,w
  2360  0276  0422               	iorwf	___lldiv@divisor+2,w
  2361  0277  0421               	iorwf	___lldiv@divisor+1,w
  2362  0278  0420               	iorwf	___lldiv@divisor,w
  2363  0279  1903               	skipnz
  2364  027A  2A7C               	goto	u791
  2365  027B  2A7D               	goto	u790
  2366  027C                     u791:
  2367  027C  2ACA               	goto	l1452
  2368  027D                     u790:
  2369  027D                     l1434:
  2370  027D  01F8               	clrf	___lldiv@counter
  2371  027E  0AF8               	incf	___lldiv@counter,f
  2372  027F  2A8D               	goto	l1438
  2373  0280                     l1436:
  2374  0280  3001               	movlw	1
  2375  0281  00F3               	movwf	??___lldiv
  2376  0282                     u805:
  2377  0282  1003               	clrc
  2378  0283  0DA0               	rlf	___lldiv@divisor,f
  2379  0284  0DA1               	rlf	___lldiv@divisor+1,f
  2380  0285  0DA2               	rlf	___lldiv@divisor+2,f
  2381  0286  0DA3               	rlf	___lldiv@divisor+3,f
  2382  0287  0BF3               	decfsz	??___lldiv,f
  2383  0288  2A82               	goto	u805
  2384  0289  3001               	movlw	1
  2385  028A  00F3               	movwf	??___lldiv
  2386  028B  0873               	movf	??___lldiv,w
  2387  028C  07F8               	addwf	___lldiv@counter,f
  2388  028D                     l1438:
  2389  028D  1FA3               	btfss	___lldiv@divisor+3,7
  2390  028E  2A90               	goto	u811
  2391  028F  2A91               	goto	u810
  2392  0290                     u811:
  2393  0290  2A80               	goto	l1436
  2394  0291                     u810:
  2395  0291                     l1440:
  2396  0291  3001               	movlw	1
  2397  0292  00F3               	movwf	??___lldiv
  2398  0293                     u825:
  2399  0293  1003               	clrc
  2400  0294  0DF4               	rlf	___lldiv@quotient,f
  2401  0295  0DF5               	rlf	___lldiv@quotient+1,f
  2402  0296  0DF6               	rlf	___lldiv@quotient+2,f
  2403  0297  0DF7               	rlf	___lldiv@quotient+3,f
  2404  0298  0BF3               	decfsz	??___lldiv,f
  2405  0299  2A93               	goto	u825
  2406  029A                     l1442:
  2407  029A  0823               	movf	___lldiv@divisor+3,w
  2408  029B  0227               	subwf	___lldiv@dividend+3,w
  2409  029C  1D03               	skipz
  2410  029D  2AA8               	goto	u835
  2411  029E  0822               	movf	___lldiv@divisor+2,w
  2412  029F  0226               	subwf	___lldiv@dividend+2,w
  2413  02A0  1D03               	skipz
  2414  02A1  2AA8               	goto	u835
  2415  02A2  0821               	movf	___lldiv@divisor+1,w
  2416  02A3  0225               	subwf	___lldiv@dividend+1,w
  2417  02A4  1D03               	skipz
  2418  02A5  2AA8               	goto	u835
  2419  02A6  0820               	movf	___lldiv@divisor,w
  2420  02A7  0224               	subwf	___lldiv@dividend,w
  2421  02A8                     u835:
  2422  02A8  1C03               	skipc
  2423  02A9  2AAB               	goto	u831
  2424  02AA  2AAC               	goto	u830
  2425  02AB                     u831:
  2426  02AB  2ABB               	goto	l1448
  2427  02AC                     u830:
  2428  02AC                     l1444:
  2429  02AC  0820               	movf	___lldiv@divisor,w
  2430  02AD  02A4               	subwf	___lldiv@dividend,f
  2431  02AE  0821               	movf	___lldiv@divisor+1,w
  2432  02AF  1C03               	skipc
  2433  02B0  0F21               	incfsz	___lldiv@divisor+1,w
  2434  02B1  02A5               	subwf	___lldiv@dividend+1,f
  2435  02B2  0822               	movf	___lldiv@divisor+2,w
  2436  02B3  1C03               	skipc
  2437  02B4  0F22               	incfsz	___lldiv@divisor+2,w
  2438  02B5  02A6               	subwf	___lldiv@dividend+2,f
  2439  02B6  0823               	movf	___lldiv@divisor+3,w
  2440  02B7  1C03               	skipc
  2441  02B8  0F23               	incfsz	___lldiv@divisor+3,w
  2442  02B9  02A7               	subwf	___lldiv@dividend+3,f
  2443  02BA                     l1446:
  2444  02BA  1474               	bsf	___lldiv@quotient,0
  2445  02BB                     l1448:
  2446  02BB  3001               	movlw	1
  2447  02BC                     u845:
  2448  02BC  1003               	clrc
  2449  02BD  0CA3               	rrf	___lldiv@divisor+3,f
  2450  02BE  0CA2               	rrf	___lldiv@divisor+2,f
  2451  02BF  0CA1               	rrf	___lldiv@divisor+1,f
  2452  02C0  0CA0               	rrf	___lldiv@divisor,f
  2453  02C1  3EFF               	addlw	-1
  2454  02C2  1D03               	skipz
  2455  02C3  2ABC               	goto	u845
  2456  02C4                     l1450:
  2457  02C4  3001               	movlw	1
  2458  02C5  02F8               	subwf	___lldiv@counter,f
  2459  02C6  1D03               	btfss	3,2
  2460  02C7  2AC9               	goto	u851
  2461  02C8  2ACA               	goto	u850
  2462  02C9                     u851:
  2463  02C9  2A91               	goto	l1440
  2464  02CA                     u850:
  2465  02CA                     l1452:
  2466  02CA  0877               	movf	___lldiv@quotient+3,w
  2467  02CB  00A3               	movwf	?___lldiv+3
  2468  02CC  0876               	movf	___lldiv@quotient+2,w
  2469  02CD  00A2               	movwf	?___lldiv+2
  2470  02CE  0875               	movf	___lldiv@quotient+1,w
  2471  02CF  00A1               	movwf	?___lldiv+1
  2472  02D0  0874               	movf	___lldiv@quotient,w
  2473  02D1  00A0               	movwf	?___lldiv
  2474  02D2                     l348:
  2475  02D2  0008               	return
  2476  02D3                     __end_of___lldiv:
  2477                           
  2478                           	psect	text14
  2479  03C8                     __ptext14:	
  2480 ;; *************** function _ISR *****************
  2481 ;; Defined at:
  2482 ;;		line 106 in file "main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          3       0       0       0       0
  2499 ;;      Totals:         3       0       0       0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		Interrupt level 1
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _ISR
  2511  03C8                     _ISR:
  2512  03C8                     i1l1382:
  2513  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2514  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2515  03CA  1E8C               	btfss	12,5	;volatile
  2516  03CB  2BCD               	goto	u68_21
  2517  03CC  2BCE               	goto	u68_20
  2518  03CD                     u68_21:
  2519  03CD  2BD3               	goto	i1l86
  2520  03CE                     u68_20:
  2521  03CE                     i1l1384:
  2522  03CE  128C               	bcf	12,5	;volatile
  2523  03CF                     i1l1386:
  2524  03CF  081A               	movf	26,w	;volatile
  2525  03D0  00F0               	movwf	??_ISR
  2526  03D1  0870               	movf	??_ISR,w
  2527  03D2  00BA               	movwf	_Bandera
  2528  03D3                     i1l86:
  2529  03D3  0872               	movf	??_ISR+2,w
  2530  03D4  008A               	movwf	10
  2531  03D5  0E71               	swapf	??_ISR+1,w
  2532  03D6  0083               	movwf	3
  2533  03D7  0EFE               	swapf	btemp,f
  2534  03D8  0E7E               	swapf	btemp,w
  2535  03D9  0009               	retfie
  2536  03DA                     __end_of_ISR:
  2537  007E                     btemp	set	126	;btemp
  2538  007E                     wtemp0	set	126
  2539                           
  2540                           	psect	intentry
  2541  0004                     __pintentry:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _ISR: [wreg]
  2544                           
  2545  0004                     interrupt_function:
  2546  007E                     saved_w	set	btemp
  2547  0004  00FE               	movwf	btemp
  2548  0005  0E03               	swapf	3,w
  2549  0006  00F1               	movwf	??_ISR+1
  2550  0007  080A               	movf	10,w
  2551  0008  00F2               	movwf	??_ISR+2
  2552  0009  120A  118A  2BC8   	ljmp	_ISR
  2553                           
  2554                           	psect	config
  2555                           
  2556                           ;Config register CONFIG1 @ 0x2007
  2557                           ;	Oscillator Selection bits
  2558                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2559                           ;	Watchdog Timer Enable bit
  2560                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2561                           ;	Power-up Timer Enable bit
  2562                           ;	PWRTE = OFF, PWRT disabled
  2563                           ;	RE3/MCLR pin function select bit
  2564                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2565                           ;	Code Protection bit
  2566                           ;	CP = OFF, Program memory code protection is disabled
  2567                           ;	Data Code Protection bit
  2568                           ;	CPD = OFF, Data memory code protection is disabled
  2569                           ;	Brown Out Reset Selection bits
  2570                           ;	BOREN = OFF, BOR disabled
  2571                           ;	Internal External Switchover bit
  2572                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2573                           ;	Fail-Safe Clock Monitor Enabled bit
  2574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2575                           ;	Low Voltage Programming Enable bit
  2576                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2577                           ;	In-Circuit Debugger Mode bit
  2578                           ;	DEBUG = 0x1, unprogrammed default
  2579  2007                     	org	8199
  2580  2007  20D4               	dw	8404
  2581                           
  2582                           ;Config register CONFIG2 @ 0x2008
  2583                           ;	Brown-out Reset Selection bit
  2584                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2585                           ;	Flash Program Memory Self Write Enable bits
  2586                           ;	WRT = OFF, Write protection off
  2587  2008                     	org	8200
  2588  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     21      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SET_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _decimal_to_bcd->___awmod
    _READ_RTC->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SET_RTC
    _SET_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4799
                                             17 BANK0      4     4      0
                    _I2C_Master_Init
                           _READ_RTC
                            _SET_RTC
 ---------------------------------------------------------------------------------
 (1) _SET_RTC                                              8     4      4    2746
                                              9 BANK0      8     4      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1127
                                              8 COMMON     1     1      0
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _READ_RTC                                             2     2      0    1511
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _READ_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SET_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 20:01:46 2021

                                _i 007A                       ___awdiv@sign 0021  
                   _decimal_to_bcd 0368                                l121 03E6  
                              l130 03F9                                l115 0367  
                              l124 0402                                l220 0399  
                              l133 03F0                                l118 03DA  
                              l127 040B                                l223 0201  
                              l136 03BF                                l137 03C2  
                              l138 03C7                                l226 00D4  
                              l348 02D2                                l465 026A  
                              l478 032D                                _GIE 005F  
                              u400 0214                                u401 0213  
                              u410 0225                                u411 0224  
                              u430 0237                                u431 0236  
                              u425 0229                                u370 03E0  
                              u450 0248                                u371 03DF  
                              u451 0247                                u380 03E6  
                              u700 02E5                                _ISR 03C8  
                              u381 03E5                                u445 0238  
                              u701 02E4                                u470 025C  
                              u390 0209                                u710 02F0  
                              u471 025B                                u455 0244  
                              u391 0208                                u711 02EF  
                              u480 0261                                u481 0260  
                              u465 0250                                u810 0291  
                              u730 0302                                u811 0290  
                              u731 0301                                u580 03BB  
                              u740 030C                                u805 0282  
                              u581 03BA                                u741 030B  
                              u725 02F4                                u830 02AC  
                              u831 02AB                                u760 031F  
                              u825 0293                                u761 031E  
                              u745 0308                                u850 02CA  
                              u770 0324                                u690 02DA  
                              u851 02C9                                u835 02A8  
                              u907 01FD                                u771 0323  
                              u755 0313                                u691 02D9  
                              u860 0345                                u845 02BC  
                              u790 027D                                u791 027C  
                              u865 0340                                u785 0380  
                              u877 0154                                u887 015F  
                              u897 00CD                       ___awmod@sign 0021  
                             ?_ISR 0070                               l1132 03DA  
                             l1220 03FF                               l1140 0209  
                             l1134 03E0                               l1222 0403  
                             l1230 03E7                               l1150 021D  
                             l1142 020E                               l1240 03B0  
                             l1224 0408                               l1232 03EC  
                             l1160 0233                               l1152 021F  
                             l1144 0210                               l1136 0202  
                             l1400 02E5                               l1242 03B5  
                             l1234 039A                               l1218 03FA  
                             l1226 03F1                               l1170 0256  
                             l1162 0237                               l1154 0225  
                             l1146 0214                               l1138 0205  
                             l1410 02FE                               l1402 02EA  
                             l1244 03BB                               l1236 039F  
                             l1228 03F6                               l1164 0248  
                             l1156 0228                               l1172 025C  
                             l1148 0219                               l1412 0302  
                             l1404 02F0                               l1420 031F  
                             l1500 00E8                               l1246 03C3  
                             l1238 03A7                               l1174 0261  
                             l1166 024E                               l1158 022F  
                             l1422 0324                               l1414 030C  
                             l1406 02F3                               l1510 00F0  
                             l1502 00EA                               l1440 0291  
                             l1432 026B                               l1176 0266  
                             l1168 024F                               l1424 0329  
                             l1416 0312                               l1408 02FA  
                             l1520 00FE                               l1512 00F1  
                             l1504 00EB                               l1450 02C4  
                             l1442 029A                               l1434 027D  
                             l1418 0319                               l1530 0109  
                             l1522 0102                               l1514 00F2  
                             l1506 00EE                               l1444 02AC  
                             l1436 0280                               l1452 02CA  
                             l1460 0335                               l1428 0369  
                             l1540 0115                               l1532 010C  
                             l1524 0106                               l1516 00F6  
                             l1508 00EF                               l1446 02BA  
                             l1438 028D                               l1462 0364  
                             l1390 02D3                               l1470 00C5  
                             l1550 0145                               l1542 0117  
                             l1534 010F                               l1526 0107  
                             l1518 00FA                               l1448 02BB  
                             l1464 0365                               l1456 032E  
                             l1392 02D6                               l1552 014A  
                             l1544 011B                               l1536 0110  
                             l1528 0108                               l1480 00D5  
                             l1466 0366                               l1458 0332  
                             l1474 016C                               l1394 02DA  
                             l1554 014E                               l1546 011E  
                             l1538 0113                               l1490 00DF  
                             l1482 00DB                               l1476 01F7  
                             l1396 02DF                               l1468 001C  
                             l1556 0159                               l1548 012D  
                             l1492 00E2                               l1484 00DC  
                             l1398 02E1                               l1558 0164  
                             l1494 00E3                               l1486 00DD  
                             l1496 00E6                               l1488 00DE  
                             l1498 00E7                               _PEIE 005E  
                             i1l86 03D3                    __end_of_SET_RTC 00D5  
 __end_of_I2C_Master_RepeatedStart 040C                               _main 00D5  
                             _hour 0038                               _year 0035  
                             btemp 007E                               start 000C  
                            ??_ISR 0070             __end_of_decimal_to_bcd 039A  
                 ?_I2C_Master_Init 0028                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                 __end_of_READ_RTC 0202                              ?_main 0070  
                  __end_of___awdiv 026B                    __end_of___awmod 032E  
                            _ANSEL 0188                    __end_of___lldiv 02D3  
                  ___awdiv@divisor 0073                    ___awdiv@counter 0020  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              u68_20 03CE  
                            u68_21 03CD                              _TXREG 0019  
                            _TXSTA 0098                              _Start 0079  
                            _m_day 0037                              _month 0036  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 016C                    ?_decimal_to_bcd 0070  
                           ??_main 0031                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
                        ??_SET_RTC 002D                 ??_I2C_Master_Write 0075  
                 ___awdiv@dividend 0075                             _ANSELH 0189  
                           i1l1382 03C8                             i1l1384 03CE  
                           i1l1386 03CF                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0403  
                        ??___awdiv 0077                          ??___awmod 0077  
                        ??___lldiv 0073                   ___awdiv@quotient 0022  
                           _minute 0039                             _second 003B  
                  ___awmod@divisor 0073                    ___awmod@counter 0020  
                           saved_w 007E            __end_of__initialization 0015  
                        ?_READ_RTC 0070                     __pcstackCOMMON 0070  
                       __pbssBANK0 003A                         ??_READ_RTC 0020  
                       __pmaintext 00D5                         __pintentry 0004  
                          _SET_RTC 0019                            _SSPCON2 0091  
                          _SSPSTAT 0094                            _Bandera 003A  
                 ??_decimal_to_bcd 0024                            ___awdiv 0202  
                          ___awmod 02D3                            ___lldiv 026B  
                          __ptext1 0019                            __ptext2 0368  
                          __ptext3 02D3                            __ptext4 0202  
                          __ptext5 016C                            __ptext6 03E7  
                          __ptext7 03F1                            __ptext8 03FA  
                          __ptext9 0403                       __size_of_ISR 0012  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 000D  
                      SET_RTC@hour 0029           __size_of_I2C_Master_Stop 0009  
                      SET_RTC@year 002C               end_of_initialization 0015  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0020  
                  ___lldiv@counter 0078                   I2C_Master_Init@c 0028  
                 I2C_Master_Read@a 0073                          _TRISCbits 0087  
                        _TXSTAbits 0098                  __size_of_READ_RTC 0096  
                      _BAUDCTLbits 0187                start_initialization 000F  
                      __end_of_ISR 03DA                  ??_I2C_Master_Init 002C  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                        __pbssCOMMON 0079  
                        ___latbits 0002                      __pcstackBANK0 0020  
                         ?_SET_RTC 0029                          __pnvBANK0 0035  
                 _I2C_Master_Start 03FA                   _I2C_Master_Write 03E7  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 0020                  interrupt_function 0004  
                         _READ_RTC 016C                           _PIE1bits 008C  
                         _PIR1bits 000C                      SET_RTC@minute 0030  
              I2C_Master_Read@temp 0077                   __size_of_SET_RTC 00BC  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068            __size_of_decimal_to_bcd 0032  
                  _I2C_Master_Init 032E                    _I2C_Master_Read 039A  
                  _I2C_Master_Wait 03DA                    _I2C_Master_Stop 03F1  
                         __ptext10 039A                           __ptext11 03DA  
                         __ptext12 032E                           __ptext13 026B  
                         __ptext14 03C8                      __size_of_main 0097  
                     SET_RTC@m_day 002A                       SET_RTC@month 002B  
             decimal_to_bcd@number 0078           __end_of_I2C_Master_Start 0403  
         __end_of_I2C_Master_Write 03F1                         _INTCONbits 000B  
                         intlevel1 0000                   ___lldiv@dividend 0024  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 0368  
          __end_of_I2C_Master_Read 03C8            __end_of_I2C_Master_Wait 03E7  
          __end_of_I2C_Master_Stop 03FA                   ___lldiv@quotient 0074  
                I2C_Master_Write@d 0073                        _SSPCON2bits 0091  
