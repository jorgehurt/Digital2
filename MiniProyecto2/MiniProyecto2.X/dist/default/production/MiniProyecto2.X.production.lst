

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 16:59:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0019                     _TXREG	set	25
   452  001A                     _RCREG	set	26
   453  0018                     _RCSTA	set	24
   454  000C                     _PIR1bits	set	12
   455  000B                     _INTCONbits	set	11
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCON	set	20
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0006                     _PORTB	set	6
   462  0005                     _PORTA	set	5
   463  0063                     _SSPIF	set	99
   464  005E                     _PEIE	set	94
   465  005F                     _GIE	set	95
   466  0098                     _TXSTAbits	set	152
   467  0098                     _TXSTA	set	152
   468  0099                     _SPBRG	set	153
   469  009A                     _SPBRGH	set	154
   470  008C                     _PIE1bits	set	140
   471  0091                     _SSPCON2bits	set	145
   472  0094                     _SSPSTAT	set	148
   473  0093                     _SSPADD	set	147
   474  0091                     _SSPCON2	set	145
   475  0089                     _TRISE	set	137
   476  0087                     _TRISCbits	set	135
   477  0088                     _TRISD	set	136
   478  0086                     _TRISB	set	134
   479  0085                     _TRISA	set	133
   480  008F                     _OSCCONbits	set	143
   481  0463                     _SSPIE	set	1123
   482  043C                     _TRISC4	set	1084
   483  043B                     _TRISC3	set	1083
   484  0187                     _BAUDCTLbits	set	391
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487                           
   488                           	psect	cinit
   489  07F1                     start_initialization:	
   490                           ; #config settings
   491                           
   492  07F1                     __initialization:
   493                           
   494                           ; Clear objects allocated to BANK0
   495  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   496  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   497  07F3  01B3               	clrf	__pbssBANK0& (0+127)
   498  07F4  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   499  07F5  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   500  07F6  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   501  07F7  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   502  07F8  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   503  07F9  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   504  07FA  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   505  07FB  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   506  07FC                     end_of_initialization:	
   507                           ;End of C runtime variable initialization code
   508                           
   509  07FC                     __end_of__initialization:
   510  07FC  0183               	clrf	3
   511  07FD  120A  118A  2D79   	ljmp	_main	;jump to C main() function
   512                           
   513                           	psect	bssBANK0
   514  0033                     __pbssBANK0:
   515  0033                     _Start:
   516  0033                     	ds	1
   517  0034                     _Bandera:
   518  0034                     	ds	1
   519  0035                     _year:
   520  0035                     	ds	1
   521  0036                     _month:
   522  0036                     	ds	1
   523  0037                     _m_day:
   524  0037                     	ds	1
   525  0038                     _hour:
   526  0038                     	ds	1
   527  0039                     _minute:
   528  0039                     	ds	1
   529  003A                     _second:
   530  003A                     	ds	1
   531  003B                     _i:
   532  003B                     	ds	1
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:
   536  0070                     ?_UART_INIT:
   537  0070                     ??_UART_INIT:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_READ_RTC:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_UART_READ:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_UART_READ:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_main:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_I2C_Master_Wait:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ??_I2C_Master_Wait:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_I2C_Master_Start:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ??_I2C_Master_Start:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_I2C_Master_RepeatedStart:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_I2C_Master_RepeatedStart:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_I2C_Master_Stop:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_I2C_Master_Stop:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Master_Write:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_decimal_to_bcd:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_I2C_Master_Read:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?___awdiv:	
   586                           ; 2 bytes @ 0x0
   587                           
   588  0070                     ?___awmod:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0070                     ?___lldiv:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0070                     I2C_Master_Write@d:	
   595                           ; 4 bytes @ 0x0
   596                           
   597  0070                     I2C_Master_Read@a:	
   598                           ; 2 bytes @ 0x0
   599                           
   600  0070                     ___awdiv@divisor:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0070                     ___awmod@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0070                     ___lldiv@divisor:	
   607                           ; 2 bytes @ 0x0
   608                           
   609                           
   610                           ; 4 bytes @ 0x0
   611  0070                     	ds	2
   612  0072                     ??_I2C_Master_Write:
   613  0072                     ??_I2C_Master_Read:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     ___awdiv@dividend:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ___awmod@dividend:	
   620                           ; 2 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	2
   625  0074                     ??___awdiv:
   626  0074                     ??___awmod:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0074                     I2C_Master_Read@temp:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ___lldiv@dividend:	
   633                           ; 2 bytes @ 0x4
   634                           
   635                           
   636                           ; 4 bytes @ 0x4
   637  0074                     	ds	1
   638  0075                     ___awdiv@counter:
   639  0075                     ___awmod@counter:	
   640                           ; 1 bytes @ 0x5
   641                           
   642                           
   643                           ; 1 bytes @ 0x5
   644  0075                     	ds	1
   645  0076                     ??_READ_RTC:
   646  0076                     ___awdiv@sign:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0076                     ___awmod@sign:	
   650                           ; 1 bytes @ 0x6
   651                           
   652                           
   653                           ; 1 bytes @ 0x6
   654  0076                     	ds	1
   655  0077                     ___awdiv@quotient:
   656                           
   657                           ; 2 bytes @ 0x7
   658  0077                     	ds	1
   659  0078                     ??___lldiv:
   660                           
   661                           ; 1 bytes @ 0x8
   662  0078                     	ds	1
   663  0079                     ??_decimal_to_bcd:
   664  0079                     ___lldiv@quotient:	
   665                           ; 1 bytes @ 0x9
   666                           
   667                           
   668                           ; 4 bytes @ 0x9
   669  0079                     	ds	4
   670  007D                     ___lldiv@counter:
   671                           
   672                           ; 1 bytes @ 0xD
   673  007D                     	ds	1
   674                           
   675                           	psect	cstackBANK0
   676  0020                     __pcstackBANK0:
   677  0020                     ?_I2C_Master_Init:
   678  0020                     decimal_to_bcd@number:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0020                     I2C_Master_Init@c:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 4 bytes @ 0x0
   686  0020                     	ds	1
   687  0021                     ?_SET_RTC:
   688  0021                     SET_RTC@hour:	
   689                           ; 1 bytes @ 0x1
   690                           
   691                           
   692                           ; 1 bytes @ 0x1
   693  0021                     	ds	1
   694  0022                     SET_RTC@m_day:
   695                           
   696                           ; 1 bytes @ 0x2
   697  0022                     	ds	1
   698  0023                     SET_RTC@month:
   699                           
   700                           ; 1 bytes @ 0x3
   701  0023                     	ds	1
   702  0024                     ??_I2C_Master_Init:
   703  0024                     SET_RTC@year:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 1 bytes @ 0x4
   708  0024                     	ds	1
   709  0025                     ??_SET_RTC:
   710                           
   711                           ; 1 bytes @ 0x5
   712  0025                     	ds	3
   713  0028                     SET_RTC@minute:
   714                           
   715                           ; 1 bytes @ 0x8
   716  0028                     	ds	1
   717  0029                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x9
   720  0029                     	ds	9
   721  0032                     main@Bandera:
   722                           
   723                           ; 1 bytes @ 0x12
   724  0032                     	ds	1
   725                           
   726                           	psect	maintext
   727  0579                     __pmaintext:	
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 47 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  Bandera         1   18[BANK0 ] unsigned char 
   738 ;;  year            1    0        unsigned char 
   739 ;;  month           1    0        unsigned char 
   740 ;;  m_day           1    0        unsigned char 
   741 ;;  hour            1    0        unsigned char 
   742 ;;  minute          1    0        unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : B00/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         0       6       0       0       0
   754 ;;      Temps:          0       4       0       0       0
   755 ;;      Totals:         0      10       0       0       0
   756 ;;Total ram usage:       10 bytes
   757 ;; Hardware stack levels required when called:    3
   758 ;; This function calls:
   759 ;;		_I2C_Master_Init
   760 ;;		_READ_RTC
   761 ;;		_SET_RTC
   762 ;;		_UART_INIT
   763 ;;		_UART_READ
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _main
   771  0579                     _main:
   772  0579                     l1270:	
   773                           ;incstack = 0
   774                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   775                           
   776  0579  3070               	movlw	112
   777  057A  1683               	bsf	3,5	;RP0=1, select bank1
   778  057B  1303               	bcf	3,6	;RP1=0, select bank1
   779  057C  048F               	iorwf	15,f	;volatile
   780  057D                     l1272:
   781  057D  118F               	bcf	15,3	;volatile
   782  057E                     l1274:
   783  057E  110F               	bcf	15,2	;volatile
   784  057F                     l1276:
   785  057F  108F               	bcf	15,1	;volatile
   786  0580                     l1278:
   787  0580  140F               	bsf	15,0	;volatile
   788  0581                     l1280:
   789  0581  1683               	bsf	3,5	;RP0=1, select bank3
   790  0582  1703               	bsf	3,6	;RP1=1, select bank3
   791  0583  0188               	clrf	8	;volatile
   792  0584                     l1282:
   793  0584  0189               	clrf	9	;volatile
   794  0585                     l1284:
   795  0585  1683               	bsf	3,5	;RP0=1, select bank1
   796  0586  1303               	bcf	3,6	;RP1=0, select bank1
   797  0587  0185               	clrf	5	;volatile
   798  0588                     l1286:
   799  0588  0186               	clrf	6	;volatile
   800  0589                     l1288:
   801  0589  0188               	clrf	8	;volatile
   802  058A                     l1290:
   803  058A  1787               	bsf	7,7	;volatile
   804  058B                     l1292:
   805  058B  1307               	bcf	7,6	;volatile
   806  058C                     l1294:
   807  058C  0189               	clrf	9	;volatile
   808  058D                     l1296:
   809  058D  1283               	bcf	3,5	;RP0=0, select bank0
   810  058E  1303               	bcf	3,6	;RP1=0, select bank0
   811  058F  0185               	clrf	5	;volatile
   812  0590                     l1298:
   813  0590  0186               	clrf	6	;volatile
   814  0591                     l1300:
   815  0591  0187               	clrf	7	;volatile
   816  0592                     l1302:
   817  0592  0188               	clrf	8	;volatile
   818  0593                     l1304:
   819  0593  0189               	clrf	9	;volatile
   820  0594                     l1306:
   821  0594                     l1308:
   822  0594                     l1310:
   823  0594                     l1312:
   824  0594                     l1314:
   825  0594                     l1316:
   826  0594                     l1318:
   827  0594  3000               	movlw	0
   828  0595  00A3               	movwf	I2C_Master_Init@c+3
   829  0596  3001               	movlw	1
   830  0597  00A2               	movwf	I2C_Master_Init@c+2
   831  0598  3086               	movlw	134
   832  0599  00A1               	movwf	I2C_Master_Init@c+1
   833  059A  30A0               	movlw	160
   834  059B  00A0               	movwf	I2C_Master_Init@c
   835  059C  120A  118A  24E8  120A  118A  	fcall	_I2C_Master_Init
   836  05A1                     l1320:
   837  05A1  300F               	movlw	15
   838  05A2  1283               	bcf	3,5	;RP0=0, select bank0
   839  05A3  1303               	bcf	3,6	;RP1=0, select bank0
   840  05A4  00A9               	movwf	??_main
   841  05A5  0829               	movf	??_main,w
   842  05A6  00A1               	movwf	SET_RTC@hour
   843  05A7  3005               	movlw	5
   844  05A8  00AA               	movwf	??_main+1
   845  05A9  082A               	movf	??_main+1,w
   846  05AA  00A2               	movwf	SET_RTC@m_day
   847  05AB  3003               	movlw	3
   848  05AC  00AB               	movwf	??_main+2
   849  05AD  082B               	movf	??_main+2,w
   850  05AE  00A3               	movwf	SET_RTC@month
   851  05AF  3015               	movlw	21
   852  05B0  00AC               	movwf	??_main+3
   853  05B1  082C               	movf	??_main+3,w
   854  05B2  00A4               	movwf	SET_RTC@year
   855  05B3  302D               	movlw	45
   856  05B4  120A  118A  2735  120A  118A  	fcall	_SET_RTC
   857  05B9                     l1322:
   858  05B9  120A  118A  2471  120A  118A  	fcall	_UART_INIT
   859  05BE                     l1324:
   860  05BE  120A  118A  26A0  120A  118A  	fcall	_READ_RTC
   861  05C3                     l1326:
   862  05C3  120A  118A  2451  120A  118A  	fcall	_UART_READ
   863  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   864  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   865  05CA  00A9               	movwf	??_main
   866  05CB  0829               	movf	??_main,w
   867  05CC  00B2               	movwf	main@Bandera
   868  05CD                     l1328:
   869  05CD  0832               	movf	main@Bandera,w
   870  05CE  0088               	movwf	8	;volatile
   871  05CF  2DBE               	goto	l1324
   872  05D0  120A  118A  2800   	ljmp	start
   873  05D3                     __end_of_main:
   874                           
   875                           	psect	text1
   876  0451                     __ptext1:	
   877 ;; *************** function _UART_READ *****************
   878 ;; Defined at:
   879 ;;		line 29 in file "eusart.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      unsigned char 
   886 ;; Registers used:
   887 ;;		wreg
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;;		_UART_Read_Text
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _UART_READ
   909  0451                     _UART_READ:
   910  0451                     l1262:	
   911                           ;incstack = 0
   912                           ; Regs used in _UART_READ: [wreg]
   913                           
   914                           
   915                           ;eusart.c: 30:     if(PIR1bits.RCIF==1){
   916  0451  1283               	bcf	3,5	;RP0=0, select bank0
   917  0452  1303               	bcf	3,6	;RP1=0, select bank0
   918  0453  1E8C               	btfss	12,5	;volatile
   919  0454  2C56               	goto	u671
   920  0455  2C57               	goto	u670
   921  0456                     u671:
   922  0456  2C59               	goto	l146
   923  0457                     u670:
   924  0457                     l1264:
   925                           
   926                           ;eusart.c: 31:         PIR1bits.RCIF=0;
   927  0457  128C               	bcf	12,5	;volatile
   928  0458                     l1266:
   929                           
   930                           ;eusart.c: 32:         return RCREG;
   931  0458  081A               	movf	26,w	;volatile
   932  0459                     l146:
   933  0459  0008               	return
   934  045A                     __end_of_UART_READ:
   935                           
   936                           	psect	text2
   937  0471                     __ptext2:	
   938 ;; *************** function _UART_INIT *****************
   939 ;; Defined at:
   940 ;;		line 14 in file "eusart.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _UART_INIT
   969  0471                     _UART_INIT:
   970  0471                     l1244:	
   971                           ;incstack = 0
   972                           ; Regs used in _UART_INIT: [wreg+status,2]
   973                           
   974                           
   975                           ;eusart.c: 16:     INTCONbits.GIE = 1;
   976  0471  178B               	bsf	11,7	;volatile
   977                           
   978                           ;eusart.c: 17:     INTCONbits.PEIE = 1;
   979  0472  170B               	bsf	11,6	;volatile
   980                           
   981                           ;eusart.c: 18:     PIE1bits.RCIE = 1;
   982  0473  1683               	bsf	3,5	;RP0=1, select bank1
   983  0474  1303               	bcf	3,6	;RP1=0, select bank1
   984  0475  168C               	bsf	12,5	;volatile
   985                           
   986                           ;eusart.c: 19:     PIE1bits.TXIE = 1;
   987  0476  160C               	bsf	12,4	;volatile
   988                           
   989                           ;eusart.c: 21:     PIR1bits.RCIF = 0;
   990  0477  1283               	bcf	3,5	;RP0=0, select bank0
   991  0478  1303               	bcf	3,6	;RP1=0, select bank0
   992  0479  128C               	bcf	12,5	;volatile
   993                           
   994                           ;eusart.c: 22:     PIR1bits.TXIF = 0;
   995  047A  120C               	bcf	12,4	;volatile
   996  047B                     l1246:
   997                           
   998                           ;eusart.c: 23:     SPBRGH = 0;
   999  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1000  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1001  047D  019A               	clrf	26	;volatile
  1002  047E                     l1248:
  1003                           
  1004                           ;eusart.c: 24:     SPBRG = 11;
  1005  047E  300B               	movlw	11
  1006  047F  0099               	movwf	25	;volatile
  1007  0480                     l1250:
  1008                           
  1009                           ;eusart.c: 25:     TXSTA = 0b00100000;
  1010  0480  3020               	movlw	32
  1011  0481  0098               	movwf	24	;volatile
  1012  0482                     l1252:
  1013                           
  1014                           ;eusart.c: 26:     RCSTA = 0b10010000;
  1015  0482  3090               	movlw	144
  1016  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0485  0098               	movwf	24	;volatile
  1019  0486                     l1254:
  1020                           
  1021                           ;eusart.c: 27:     BAUDCTLbits.BRG16 = 0;
  1022  0486  1683               	bsf	3,5	;RP0=1, select bank3
  1023  0487  1703               	bsf	3,6	;RP1=1, select bank3
  1024  0488  1187               	bcf	7,3	;volatile
  1025  0489                     l142:
  1026  0489  0008               	return
  1027  048A                     __end_of_UART_INIT:
  1028                           
  1029                           	psect	text3
  1030  0735                     __ptext3:	
  1031 ;; *************** function _SET_RTC *****************
  1032 ;; Defined at:
  1033 ;;		line 49 in file "RTC.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  minute          1    wreg     unsigned char 
  1036 ;;  hour            1    1[BANK0 ] unsigned char 
  1037 ;;  m_day           1    2[BANK0 ] unsigned char 
  1038 ;;  month           1    3[BANK0 ] unsigned char 
  1039 ;;  year            1    4[BANK0 ] unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  minute          1    8[BANK0 ] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       4       0       0       0
  1052 ;;      Locals:         0       1       0       0       0
  1053 ;;      Temps:          0       3       0       0       0
  1054 ;;      Totals:         0       8       0       0       0
  1055 ;;Total ram usage:        8 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    2
  1058 ;; This function calls:
  1059 ;;		_I2C_Master_Start
  1060 ;;		_I2C_Master_Stop
  1061 ;;		_I2C_Master_Write
  1062 ;;		_decimal_to_bcd
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _SET_RTC
  1070  0735                     _SET_RTC:
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _SET_RTC: [wreg+status,2+status,0+pclath+cstack]
  1074                           ;SET_RTC@minute stored from wreg
  1075  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0737  00A8               	movwf	SET_RTC@minute
  1078  0738                     l1238:
  1079                           
  1080                           ;RTC.c: 51:     minute = decimal_to_bcd(minute);
  1081  0738  0828               	movf	SET_RTC@minute,w
  1082  0739  120A  118A  24B8  120A  118A  	fcall	_decimal_to_bcd
  1083  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1084  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0740  00A5               	movwf	??_SET_RTC
  1086  0741  0825               	movf	??_SET_RTC,w
  1087  0742  00A8               	movwf	SET_RTC@minute
  1088                           
  1089                           ;RTC.c: 52:     hour = decimal_to_bcd(hour);
  1090  0743  0821               	movf	SET_RTC@hour,w
  1091  0744  120A  118A  24B8  120A  118A  	fcall	_decimal_to_bcd
  1092  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1093  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1094  074B  00A5               	movwf	??_SET_RTC
  1095  074C  0825               	movf	??_SET_RTC,w
  1096  074D  00A1               	movwf	SET_RTC@hour
  1097                           
  1098                           ;RTC.c: 53:     m_day = decimal_to_bcd(m_day);
  1099  074E  0822               	movf	SET_RTC@m_day,w
  1100  074F  120A  118A  24B8  120A  118A  	fcall	_decimal_to_bcd
  1101  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0756  00A5               	movwf	??_SET_RTC
  1104  0757  0825               	movf	??_SET_RTC,w
  1105  0758  00A2               	movwf	SET_RTC@m_day
  1106                           
  1107                           ;RTC.c: 54:     month = decimal_to_bcd(month);
  1108  0759  0823               	movf	SET_RTC@month,w
  1109  075A  120A  118A  24B8  120A  118A  	fcall	_decimal_to_bcd
  1110  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0761  00A5               	movwf	??_SET_RTC
  1113  0762  0825               	movf	??_SET_RTC,w
  1114  0763  00A3               	movwf	SET_RTC@month
  1115                           
  1116                           ;RTC.c: 55:     year = decimal_to_bcd(year);
  1117  0764  0824               	movf	SET_RTC@year,w
  1118  0765  120A  118A  24B8  120A  118A  	fcall	_decimal_to_bcd
  1119  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1120  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1121  076C  00A5               	movwf	??_SET_RTC
  1122  076D  0825               	movf	??_SET_RTC,w
  1123  076E  00A4               	movwf	SET_RTC@year
  1124                           
  1125                           ;RTC.c: 58:     I2C_Master_Start();
  1126  076F  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Start
  1127                           
  1128                           ;RTC.c: 59:     I2C_Master_Write(0xD0);
  1129  0774  30D0               	movlw	208
  1130  0775  00F0               	movwf	I2C_Master_Write@d
  1131  0776  3000               	movlw	0
  1132  0777  00F1               	movwf	I2C_Master_Write@d+1
  1133  0778  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1134                           
  1135                           ;RTC.c: 60:     I2C_Master_Write(0);
  1136  077D  3000               	movlw	0
  1137  077E  00F0               	movwf	I2C_Master_Write@d
  1138  077F  00F1               	movwf	I2C_Master_Write@d+1
  1139  0780  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1140                           
  1141                           ;RTC.c: 61:     I2C_Master_Write(0);
  1142  0785  3000               	movlw	0
  1143  0786  00F0               	movwf	I2C_Master_Write@d
  1144  0787  00F1               	movwf	I2C_Master_Write@d+1
  1145  0788  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1146                           
  1147                           ;RTC.c: 62:     I2C_Master_Write(minute);
  1148  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1149  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1150  078F  0828               	movf	SET_RTC@minute,w
  1151  0790  00A5               	movwf	??_SET_RTC
  1152  0791  01A6               	clrf	??_SET_RTC+1
  1153  0792  0825               	movf	??_SET_RTC,w
  1154  0793  00F0               	movwf	I2C_Master_Write@d
  1155  0794  0826               	movf	??_SET_RTC+1,w
  1156  0795  00F1               	movwf	I2C_Master_Write@d+1
  1157  0796  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1158                           
  1159                           ;RTC.c: 63:     I2C_Master_Write(hour);
  1160  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1161  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1162  079D  0821               	movf	SET_RTC@hour,w
  1163  079E  00A5               	movwf	??_SET_RTC
  1164  079F  01A6               	clrf	??_SET_RTC+1
  1165  07A0  0825               	movf	??_SET_RTC,w
  1166  07A1  00F0               	movwf	I2C_Master_Write@d
  1167  07A2  0826               	movf	??_SET_RTC+1,w
  1168  07A3  00F1               	movwf	I2C_Master_Write@d+1
  1169  07A4  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1170                           
  1171                           ;RTC.c: 64:     I2C_Master_Write(1);
  1172  07A9  3001               	movlw	1
  1173  07AA  00F0               	movwf	I2C_Master_Write@d
  1174  07AB  3000               	movlw	0
  1175  07AC  00F1               	movwf	I2C_Master_Write@d+1
  1176  07AD  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1177                           
  1178                           ;RTC.c: 65:     I2C_Master_Write(m_day);
  1179  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1180  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1181  07B4  0822               	movf	SET_RTC@m_day,w
  1182  07B5  00A5               	movwf	??_SET_RTC
  1183  07B6  01A6               	clrf	??_SET_RTC+1
  1184  07B7  0825               	movf	??_SET_RTC,w
  1185  07B8  00F0               	movwf	I2C_Master_Write@d
  1186  07B9  0826               	movf	??_SET_RTC+1,w
  1187  07BA  00F1               	movwf	I2C_Master_Write@d+1
  1188  07BB  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1189                           
  1190                           ;RTC.c: 66:     I2C_Master_Write(month);
  1191  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1192  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1193  07C2  0823               	movf	SET_RTC@month,w
  1194  07C3  00A5               	movwf	??_SET_RTC
  1195  07C4  01A6               	clrf	??_SET_RTC+1
  1196  07C5  0825               	movf	??_SET_RTC,w
  1197  07C6  00F0               	movwf	I2C_Master_Write@d
  1198  07C7  0826               	movf	??_SET_RTC+1,w
  1199  07C8  00F1               	movwf	I2C_Master_Write@d+1
  1200  07C9  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1201                           
  1202                           ;RTC.c: 67:     I2C_Master_Write(year);
  1203  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1204  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1205  07D0  0824               	movf	SET_RTC@year,w
  1206  07D1  00A5               	movwf	??_SET_RTC
  1207  07D2  01A6               	clrf	??_SET_RTC+1
  1208  07D3  0825               	movf	??_SET_RTC,w
  1209  07D4  00F0               	movwf	I2C_Master_Write@d
  1210  07D5  0826               	movf	??_SET_RTC+1,w
  1211  07D6  00F1               	movwf	I2C_Master_Write@d+1
  1212  07D7  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1213                           
  1214                           ;RTC.c: 68:     I2C_Master_Stop();
  1215  07DC  120A  118A  2448  120A  118A  	fcall	_I2C_Master_Stop
  1216  07E1                     l1240:
  1217                           
  1218                           ;RTC.c: 70:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1219  07E1  3003               	movlw	3
  1220  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1221  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1222  07E4  00A7               	movwf	??_SET_RTC+2
  1223  07E5  3008               	movlw	8
  1224  07E6  00A6               	movwf	??_SET_RTC+1
  1225  07E7  3076               	movlw	118
  1226  07E8  00A5               	movwf	??_SET_RTC
  1227  07E9                     u697:
  1228  07E9  0BA5               	decfsz	??_SET_RTC,f
  1229  07EA  2FE9               	goto	u697
  1230  07EB  0BA6               	decfsz	??_SET_RTC+1,f
  1231  07EC  2FE9               	goto	u697
  1232  07ED  0BA7               	decfsz	??_SET_RTC+2,f
  1233  07EE  2FE9               	goto	u697
  1234  07EF  0000               	nop
  1235  07F0                     l202:
  1236  07F0  0008               	return
  1237  07F1                     __end_of_SET_RTC:
  1238                           
  1239                           	psect	text4
  1240  04B8                     __ptext4:	
  1241 ;; *************** function _decimal_to_bcd *****************
  1242 ;; Defined at:
  1243 ;;		line 22 in file "RTC.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  number          1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  number          1    0[BANK0 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         0       1       0       0       0
  1259 ;;      Temps:          5       0       0       0       0
  1260 ;;      Totals:         5       1       0       0       0
  1261 ;;Total ram usage:        6 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    1
  1264 ;; This function calls:
  1265 ;;		___awdiv
  1266 ;;		___awmod
  1267 ;; This function is called by:
  1268 ;;		_SET_RTC
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _decimal_to_bcd
  1274  04B8                     _decimal_to_bcd:
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;decimal_to_bcd@number stored from wreg
  1279  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1280  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1281  04BA  00A0               	movwf	decimal_to_bcd@number
  1282  04BB                     l1198:
  1283                           
  1284                           ;RTC.c: 23:     return (((number / 10) << 4) + (number % 10));
  1285  04BB  300A               	movlw	10
  1286  04BC  00F0               	movwf	___awdiv@divisor
  1287  04BD  3000               	movlw	0
  1288  04BE  00F1               	movwf	___awdiv@divisor+1
  1289  04BF  0820               	movf	decimal_to_bcd@number,w
  1290  04C0  00F9               	movwf	??_decimal_to_bcd
  1291  04C1  01FA               	clrf	??_decimal_to_bcd+1
  1292  04C2  0879               	movf	??_decimal_to_bcd,w
  1293  04C3  00F2               	movwf	___awdiv@dividend
  1294  04C4  087A               	movf	??_decimal_to_bcd+1,w
  1295  04C5  00F3               	movwf	___awdiv@dividend+1
  1296  04C6  120A  118A  2639  120A  118A  	fcall	___awdiv
  1297  04CB  0870               	movf	?___awdiv,w
  1298  04CC  00FB               	movwf	??_decimal_to_bcd+2
  1299  04CD  3004               	movlw	4
  1300  04CE                     u585:
  1301  04CE  1003               	clrc
  1302  04CF  0DFB               	rlf	??_decimal_to_bcd+2,f
  1303  04D0  3EFF               	addlw	-1
  1304  04D1  1D03               	skipz
  1305  04D2  2CCE               	goto	u585
  1306  04D3  300A               	movlw	10
  1307  04D4  00F0               	movwf	___awmod@divisor
  1308  04D5  3000               	movlw	0
  1309  04D6  00F1               	movwf	___awmod@divisor+1
  1310  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1311  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1312  04D9  0820               	movf	decimal_to_bcd@number,w
  1313  04DA  00FC               	movwf	??_decimal_to_bcd+3
  1314  04DB  01FD               	clrf	??_decimal_to_bcd+4
  1315  04DC  087C               	movf	??_decimal_to_bcd+3,w
  1316  04DD  00F2               	movwf	___awmod@dividend
  1317  04DE  087D               	movf	??_decimal_to_bcd+4,w
  1318  04DF  00F3               	movwf	___awmod@dividend+1
  1319  04E0  120A  118A  2520  120A  118A  	fcall	___awmod
  1320  04E5  0870               	movf	?___awmod,w
  1321  04E6  077B               	addwf	??_decimal_to_bcd+2,w
  1322  04E7                     l196:
  1323  04E7  0008               	return
  1324  04E8                     __end_of_decimal_to_bcd:
  1325                           
  1326                           	psect	text5
  1327  0520                     __ptext5:	
  1328 ;; *************** function ___awmod *****************
  1329 ;; Defined at:
  1330 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  divisor         2    0[COMMON] int 
  1333 ;;  dividend        2    2[COMMON] int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  sign            1    6[COMMON] unsigned char 
  1336 ;;  counter         1    5[COMMON] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2    0[COMMON] int 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         4       0       0       0       0
  1347 ;;      Locals:         2       0       0       0       0
  1348 ;;      Temps:          1       0       0       0       0
  1349 ;;      Totals:         7       0       0       0       0
  1350 ;;Total ram usage:        7 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_decimal_to_bcd
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function ___awmod
  1361  0520                     ___awmod:
  1362  0520                     l1128:	
  1363                           ;incstack = 0
  1364                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1365                           
  1366  0520  01F6               	clrf	___awmod@sign
  1367  0521                     l1130:
  1368  0521  1FF3               	btfss	___awmod@dividend+1,7
  1369  0522  2D24               	goto	u481
  1370  0523  2D25               	goto	u480
  1371  0524                     u481:
  1372  0524  2D2C               	goto	l1136
  1373  0525                     u480:
  1374  0525                     l1132:
  1375  0525  09F2               	comf	___awmod@dividend,f
  1376  0526  09F3               	comf	___awmod@dividend+1,f
  1377  0527  0AF2               	incf	___awmod@dividend,f
  1378  0528  1903               	skipnz
  1379  0529  0AF3               	incf	___awmod@dividend+1,f
  1380  052A                     l1134:
  1381  052A  01F6               	clrf	___awmod@sign
  1382  052B  0AF6               	incf	___awmod@sign,f
  1383  052C                     l1136:
  1384  052C  1FF1               	btfss	___awmod@divisor+1,7
  1385  052D  2D2F               	goto	u491
  1386  052E  2D30               	goto	u490
  1387  052F                     u491:
  1388  052F  2D35               	goto	l1140
  1389  0530                     u490:
  1390  0530                     l1138:
  1391  0530  09F0               	comf	___awmod@divisor,f
  1392  0531  09F1               	comf	___awmod@divisor+1,f
  1393  0532  0AF0               	incf	___awmod@divisor,f
  1394  0533  1903               	skipnz
  1395  0534  0AF1               	incf	___awmod@divisor+1,f
  1396  0535                     l1140:
  1397  0535  0870               	movf	___awmod@divisor,w
  1398  0536  0471               	iorwf	___awmod@divisor+1,w
  1399  0537  1903               	btfsc	3,2
  1400  0538  2D3A               	goto	u501
  1401  0539  2D3B               	goto	u500
  1402  053A                     u501:
  1403  053A  2D6A               	goto	l1158
  1404  053B                     u500:
  1405  053B                     l1142:
  1406  053B  01F5               	clrf	___awmod@counter
  1407  053C  0AF5               	incf	___awmod@counter,f
  1408  053D  2D49               	goto	l1148
  1409  053E                     l1144:
  1410  053E  3001               	movlw	1
  1411  053F                     u515:
  1412  053F  1003               	clrc
  1413  0540  0DF0               	rlf	___awmod@divisor,f
  1414  0541  0DF1               	rlf	___awmod@divisor+1,f
  1415  0542  3EFF               	addlw	-1
  1416  0543  1D03               	skipz
  1417  0544  2D3F               	goto	u515
  1418  0545                     l1146:
  1419  0545  3001               	movlw	1
  1420  0546  00F4               	movwf	??___awmod
  1421  0547  0874               	movf	??___awmod,w
  1422  0548  07F5               	addwf	___awmod@counter,f
  1423  0549                     l1148:
  1424  0549  1FF1               	btfss	___awmod@divisor+1,7
  1425  054A  2D4C               	goto	u521
  1426  054B  2D4D               	goto	u520
  1427  054C                     u521:
  1428  054C  2D3E               	goto	l1144
  1429  054D                     u520:
  1430  054D                     l1150:
  1431  054D  0871               	movf	___awmod@divisor+1,w
  1432  054E  0273               	subwf	___awmod@dividend+1,w
  1433  054F  1D03               	skipz
  1434  0550  2D53               	goto	u535
  1435  0551  0870               	movf	___awmod@divisor,w
  1436  0552  0272               	subwf	___awmod@dividend,w
  1437  0553                     u535:
  1438  0553  1C03               	skipc
  1439  0554  2D56               	goto	u531
  1440  0555  2D57               	goto	u530
  1441  0556                     u531:
  1442  0556  2D5D               	goto	l1154
  1443  0557                     u530:
  1444  0557                     l1152:
  1445  0557  0870               	movf	___awmod@divisor,w
  1446  0558  02F2               	subwf	___awmod@dividend,f
  1447  0559  0871               	movf	___awmod@divisor+1,w
  1448  055A  1C03               	skipc
  1449  055B  03F3               	decf	___awmod@dividend+1,f
  1450  055C  02F3               	subwf	___awmod@dividend+1,f
  1451  055D                     l1154:
  1452  055D  3001               	movlw	1
  1453  055E                     u545:
  1454  055E  1003               	clrc
  1455  055F  0CF1               	rrf	___awmod@divisor+1,f
  1456  0560  0CF0               	rrf	___awmod@divisor,f
  1457  0561  3EFF               	addlw	-1
  1458  0562  1D03               	skipz
  1459  0563  2D5E               	goto	u545
  1460  0564                     l1156:
  1461  0564  3001               	movlw	1
  1462  0565  02F5               	subwf	___awmod@counter,f
  1463  0566  1D03               	btfss	3,2
  1464  0567  2D69               	goto	u551
  1465  0568  2D6A               	goto	u550
  1466  0569                     u551:
  1467  0569  2D4D               	goto	l1150
  1468  056A                     u550:
  1469  056A                     l1158:
  1470  056A  0876               	movf	___awmod@sign,w
  1471  056B  1903               	btfsc	3,2
  1472  056C  2D6E               	goto	u561
  1473  056D  2D6F               	goto	u560
  1474  056E                     u561:
  1475  056E  2D74               	goto	l1162
  1476  056F                     u560:
  1477  056F                     l1160:
  1478  056F  09F2               	comf	___awmod@dividend,f
  1479  0570  09F3               	comf	___awmod@dividend+1,f
  1480  0571  0AF2               	incf	___awmod@dividend,f
  1481  0572  1903               	skipnz
  1482  0573  0AF3               	incf	___awmod@dividend+1,f
  1483  0574                     l1162:
  1484  0574  0873               	movf	___awmod@dividend+1,w
  1485  0575  00F1               	movwf	?___awmod+1
  1486  0576  0872               	movf	___awmod@dividend,w
  1487  0577  00F0               	movwf	?___awmod
  1488  0578                     l454:
  1489  0578  0008               	return
  1490  0579                     __end_of___awmod:
  1491                           
  1492                           	psect	text6
  1493  0639                     __ptext6:	
  1494 ;; *************** function ___awdiv *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         2    0[COMMON] int 
  1499 ;;  dividend        2    2[COMMON] int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  quotient        2    7[COMMON] int 
  1502 ;;  sign            1    6[COMMON] unsigned char 
  1503 ;;  counter         1    5[COMMON] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    0[COMMON] int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         4       0       0       0       0
  1514 ;;      Locals:         4       0       0       0       0
  1515 ;;      Temps:          1       0       0       0       0
  1516 ;;      Totals:         9       0       0       0       0
  1517 ;;Total ram usage:        9 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_decimal_to_bcd
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___awdiv
  1528  0639                     ___awdiv:
  1529  0639                     l1084:	
  1530                           ;incstack = 0
  1531                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1532                           
  1533  0639  01F6               	clrf	___awdiv@sign
  1534  063A                     l1086:
  1535  063A  1FF1               	btfss	___awdiv@divisor+1,7
  1536  063B  2E3D               	goto	u381
  1537  063C  2E3E               	goto	u380
  1538  063D                     u381:
  1539  063D  2E45               	goto	l1092
  1540  063E                     u380:
  1541  063E                     l1088:
  1542  063E  09F0               	comf	___awdiv@divisor,f
  1543  063F  09F1               	comf	___awdiv@divisor+1,f
  1544  0640  0AF0               	incf	___awdiv@divisor,f
  1545  0641  1903               	skipnz
  1546  0642  0AF1               	incf	___awdiv@divisor+1,f
  1547  0643                     l1090:
  1548  0643  01F6               	clrf	___awdiv@sign
  1549  0644  0AF6               	incf	___awdiv@sign,f
  1550  0645                     l1092:
  1551  0645  1FF3               	btfss	___awdiv@dividend+1,7
  1552  0646  2E48               	goto	u391
  1553  0647  2E49               	goto	u390
  1554  0648                     u391:
  1555  0648  2E52               	goto	l1098
  1556  0649                     u390:
  1557  0649                     l1094:
  1558  0649  09F2               	comf	___awdiv@dividend,f
  1559  064A  09F3               	comf	___awdiv@dividend+1,f
  1560  064B  0AF2               	incf	___awdiv@dividend,f
  1561  064C  1903               	skipnz
  1562  064D  0AF3               	incf	___awdiv@dividend+1,f
  1563  064E                     l1096:
  1564  064E  3001               	movlw	1
  1565  064F  00F4               	movwf	??___awdiv
  1566  0650  0874               	movf	??___awdiv,w
  1567  0651  06F6               	xorwf	___awdiv@sign,f
  1568  0652                     l1098:
  1569  0652  01F7               	clrf	___awdiv@quotient
  1570  0653  01F8               	clrf	___awdiv@quotient+1
  1571  0654                     l1100:
  1572  0654  0870               	movf	___awdiv@divisor,w
  1573  0655  0471               	iorwf	___awdiv@divisor+1,w
  1574  0656  1903               	btfsc	3,2
  1575  0657  2E59               	goto	u401
  1576  0658  2E5A               	goto	u400
  1577  0659                     u401:
  1578  0659  2E91               	goto	l1120
  1579  065A                     u400:
  1580  065A                     l1102:
  1581  065A  01F5               	clrf	___awdiv@counter
  1582  065B  0AF5               	incf	___awdiv@counter,f
  1583  065C  2E68               	goto	l1108
  1584  065D                     l1104:
  1585  065D  3001               	movlw	1
  1586  065E                     u415:
  1587  065E  1003               	clrc
  1588  065F  0DF0               	rlf	___awdiv@divisor,f
  1589  0660  0DF1               	rlf	___awdiv@divisor+1,f
  1590  0661  3EFF               	addlw	-1
  1591  0662  1D03               	skipz
  1592  0663  2E5E               	goto	u415
  1593  0664                     l1106:
  1594  0664  3001               	movlw	1
  1595  0665  00F4               	movwf	??___awdiv
  1596  0666  0874               	movf	??___awdiv,w
  1597  0667  07F5               	addwf	___awdiv@counter,f
  1598  0668                     l1108:
  1599  0668  1FF1               	btfss	___awdiv@divisor+1,7
  1600  0669  2E6B               	goto	u421
  1601  066A  2E6C               	goto	u420
  1602  066B                     u421:
  1603  066B  2E5D               	goto	l1104
  1604  066C                     u420:
  1605  066C                     l1110:
  1606  066C  3001               	movlw	1
  1607  066D                     u435:
  1608  066D  1003               	clrc
  1609  066E  0DF7               	rlf	___awdiv@quotient,f
  1610  066F  0DF8               	rlf	___awdiv@quotient+1,f
  1611  0670  3EFF               	addlw	-1
  1612  0671  1D03               	skipz
  1613  0672  2E6D               	goto	u435
  1614  0673  0871               	movf	___awdiv@divisor+1,w
  1615  0674  0273               	subwf	___awdiv@dividend+1,w
  1616  0675  1D03               	skipz
  1617  0676  2E79               	goto	u445
  1618  0677  0870               	movf	___awdiv@divisor,w
  1619  0678  0272               	subwf	___awdiv@dividend,w
  1620  0679                     u445:
  1621  0679  1C03               	skipc
  1622  067A  2E7C               	goto	u441
  1623  067B  2E7D               	goto	u440
  1624  067C                     u441:
  1625  067C  2E84               	goto	l1116
  1626  067D                     u440:
  1627  067D                     l1112:
  1628  067D  0870               	movf	___awdiv@divisor,w
  1629  067E  02F2               	subwf	___awdiv@dividend,f
  1630  067F  0871               	movf	___awdiv@divisor+1,w
  1631  0680  1C03               	skipc
  1632  0681  03F3               	decf	___awdiv@dividend+1,f
  1633  0682  02F3               	subwf	___awdiv@dividend+1,f
  1634  0683                     l1114:
  1635  0683  1477               	bsf	___awdiv@quotient,0
  1636  0684                     l1116:
  1637  0684  3001               	movlw	1
  1638  0685                     u455:
  1639  0685  1003               	clrc
  1640  0686  0CF1               	rrf	___awdiv@divisor+1,f
  1641  0687  0CF0               	rrf	___awdiv@divisor,f
  1642  0688  3EFF               	addlw	-1
  1643  0689  1D03               	skipz
  1644  068A  2E85               	goto	u455
  1645  068B                     l1118:
  1646  068B  3001               	movlw	1
  1647  068C  02F5               	subwf	___awdiv@counter,f
  1648  068D  1D03               	btfss	3,2
  1649  068E  2E90               	goto	u461
  1650  068F  2E91               	goto	u460
  1651  0690                     u461:
  1652  0690  2E6C               	goto	l1110
  1653  0691                     u460:
  1654  0691                     l1120:
  1655  0691  0876               	movf	___awdiv@sign,w
  1656  0692  1903               	btfsc	3,2
  1657  0693  2E95               	goto	u471
  1658  0694  2E96               	goto	u470
  1659  0695                     u471:
  1660  0695  2E9B               	goto	l1124
  1661  0696                     u470:
  1662  0696                     l1122:
  1663  0696  09F7               	comf	___awdiv@quotient,f
  1664  0697  09F8               	comf	___awdiv@quotient+1,f
  1665  0698  0AF7               	incf	___awdiv@quotient,f
  1666  0699  1903               	skipnz
  1667  069A  0AF8               	incf	___awdiv@quotient+1,f
  1668  069B                     l1124:
  1669  069B  0878               	movf	___awdiv@quotient+1,w
  1670  069C  00F1               	movwf	?___awdiv+1
  1671  069D  0877               	movf	___awdiv@quotient,w
  1672  069E  00F0               	movwf	?___awdiv
  1673  069F                     l441:
  1674  069F  0008               	return
  1675  06A0                     __end_of___awdiv:
  1676                           
  1677                           	psect	text7
  1678  06A0                     __ptext7:	
  1679 ;; *************** function _READ_RTC *****************
  1680 ;; Defined at:
  1681 ;;		line 29 in file "RTC.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      unsigned char 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          2       0       0       0       0
  1698 ;;      Totals:         2       0       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		_I2C_Master_Read
  1704 ;;		_I2C_Master_RepeatedStart
  1705 ;;		_I2C_Master_Start
  1706 ;;		_I2C_Master_Stop
  1707 ;;		_I2C_Master_Write
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _READ_RTC
  1715  06A0                     _READ_RTC:
  1716  06A0                     l1256:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _READ_RTC: [wreg+status,2+status,0+pclath+cstack]
  1719                           
  1720                           
  1721                           ;RTC.c: 31:     I2C_Master_Start();
  1722  06A0  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Start
  1723                           
  1724                           ;RTC.c: 32:     I2C_Master_Write(0xD0);
  1725  06A5  30D0               	movlw	208
  1726  06A6  00F0               	movwf	I2C_Master_Write@d
  1727  06A7  3000               	movlw	0
  1728  06A8  00F1               	movwf	I2C_Master_Write@d+1
  1729  06A9  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1730                           
  1731                           ;RTC.c: 33:     I2C_Master_Write(0);
  1732  06AE  3000               	movlw	0
  1733  06AF  00F0               	movwf	I2C_Master_Write@d
  1734  06B0  00F1               	movwf	I2C_Master_Write@d+1
  1735  06B1  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1736                           
  1737                           ;RTC.c: 34:     I2C_Master_RepeatedStart();
  1738  06B6  120A  118A  2436  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1739                           
  1740                           ;RTC.c: 35:     I2C_Master_Write(0xD1);
  1741  06BB  30D1               	movlw	209
  1742  06BC  00F0               	movwf	I2C_Master_Write@d
  1743  06BD  3000               	movlw	0
  1744  06BE  00F1               	movwf	I2C_Master_Write@d+1
  1745  06BF  120A  118A  245A  120A  118A  	fcall	_I2C_Master_Write
  1746                           
  1747                           ;RTC.c: 36:     second = I2C_Master_Read(1);
  1748  06C4  3001               	movlw	1
  1749  06C5  00F0               	movwf	I2C_Master_Read@a
  1750  06C6  3000               	movlw	0
  1751  06C7  00F1               	movwf	I2C_Master_Read@a+1
  1752  06C8  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1753  06CD  0870               	movf	?_I2C_Master_Read,w
  1754  06CE  00F6               	movwf	??_READ_RTC
  1755  06CF  0876               	movf	??_READ_RTC,w
  1756  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1757  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1758  06D2  00BA               	movwf	_second
  1759                           
  1760                           ;RTC.c: 37:     minute = I2C_Master_Read(1);
  1761  06D3  3001               	movlw	1
  1762  06D4  00F0               	movwf	I2C_Master_Read@a
  1763  06D5  3000               	movlw	0
  1764  06D6  00F1               	movwf	I2C_Master_Read@a+1
  1765  06D7  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1766  06DC  0870               	movf	?_I2C_Master_Read,w
  1767  06DD  00F6               	movwf	??_READ_RTC
  1768  06DE  0876               	movf	??_READ_RTC,w
  1769  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1770  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1771  06E1  00B9               	movwf	_minute
  1772                           
  1773                           ;RTC.c: 38:     hour = I2C_Master_Read(1);
  1774  06E2  3001               	movlw	1
  1775  06E3  00F0               	movwf	I2C_Master_Read@a
  1776  06E4  3000               	movlw	0
  1777  06E5  00F1               	movwf	I2C_Master_Read@a+1
  1778  06E6  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1779  06EB  0870               	movf	?_I2C_Master_Read,w
  1780  06EC  00F6               	movwf	??_READ_RTC
  1781  06ED  0876               	movf	??_READ_RTC,w
  1782  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1783  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1784  06F0  00B8               	movwf	_hour
  1785                           
  1786                           ;RTC.c: 39:     I2C_Master_Read(1);
  1787  06F1  3001               	movlw	1
  1788  06F2  00F0               	movwf	I2C_Master_Read@a
  1789  06F3  3000               	movlw	0
  1790  06F4  00F1               	movwf	I2C_Master_Read@a+1
  1791  06F5  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1792                           
  1793                           ;RTC.c: 40:     m_day = I2C_Master_Read(1);
  1794  06FA  3001               	movlw	1
  1795  06FB  00F0               	movwf	I2C_Master_Read@a
  1796  06FC  3000               	movlw	0
  1797  06FD  00F1               	movwf	I2C_Master_Read@a+1
  1798  06FE  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1799  0703  0870               	movf	?_I2C_Master_Read,w
  1800  0704  00F6               	movwf	??_READ_RTC
  1801  0705  0876               	movf	??_READ_RTC,w
  1802  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0708  00B7               	movwf	_m_day
  1805                           
  1806                           ;RTC.c: 41:     month = I2C_Master_Read(1);
  1807  0709  3001               	movlw	1
  1808  070A  00F0               	movwf	I2C_Master_Read@a
  1809  070B  3000               	movlw	0
  1810  070C  00F1               	movwf	I2C_Master_Read@a+1
  1811  070D  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1812  0712  0870               	movf	?_I2C_Master_Read,w
  1813  0713  00F6               	movwf	??_READ_RTC
  1814  0714  0876               	movf	??_READ_RTC,w
  1815  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1817  0717  00B6               	movwf	_month
  1818                           
  1819                           ;RTC.c: 42:     year = I2C_Master_Read(0);
  1820  0718  3000               	movlw	0
  1821  0719  00F0               	movwf	I2C_Master_Read@a
  1822  071A  00F1               	movwf	I2C_Master_Read@a+1
  1823  071B  120A  118A  248A  120A  118A  	fcall	_I2C_Master_Read
  1824  0720  0870               	movf	?_I2C_Master_Read,w
  1825  0721  00F6               	movwf	??_READ_RTC
  1826  0722  0876               	movf	??_READ_RTC,w
  1827  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0725  00B5               	movwf	_year
  1830                           
  1831                           ;RTC.c: 43:     I2C_Master_Stop();
  1832  0726  120A  118A  2448  120A  118A  	fcall	_I2C_Master_Stop
  1833  072B                     l1258:
  1834                           
  1835                           ;RTC.c: 44:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1836  072B  3082               	movlw	130
  1837  072C  00F7               	movwf	??_READ_RTC+1
  1838  072D  30DD               	movlw	221
  1839  072E  00F6               	movwf	??_READ_RTC
  1840  072F                     u707:
  1841  072F  0BF6               	decfsz	??_READ_RTC,f
  1842  0730  2F2F               	goto	u707
  1843  0731  0BF7               	decfsz	??_READ_RTC+1,f
  1844  0732  2F2F               	goto	u707
  1845  0733  2F34               	nop2
  1846  0734                     l199:
  1847  0734  0008               	return
  1848  0735                     __end_of_READ_RTC:
  1849                           
  1850                           	psect	text8
  1851  045A                     __ptext8:	
  1852 ;; *************** function _I2C_Master_Write *****************
  1853 ;; Defined at:
  1854 ;;		line 65 in file "I2C.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  d               2    0[COMMON] unsigned int 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         2       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         2       0       0       0       0
  1872 ;;Total ram usage:        2 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		_I2C_Master_Wait
  1877 ;; This function is called by:
  1878 ;;		_READ_RTC
  1879 ;;		_SET_RTC
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _I2C_Master_Write
  1885  045A                     _I2C_Master_Write:
  1886  045A                     l1178:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1889                           
  1890                           
  1891                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1892  045A  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  1893  045F                     l1180:
  1894                           
  1895                           ;I2C.c: 68:     SSPBUF = d;
  1896  045F  0870               	movf	I2C_Master_Write@d,w
  1897  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0462  0093               	movwf	19	;volatile
  1900  0463                     l109:
  1901  0463  0008               	return
  1902  0464                     __end_of_I2C_Master_Write:
  1903                           
  1904                           	psect	text9
  1905  0448                     __ptext9:	
  1906 ;; *************** function _I2C_Master_Stop *****************
  1907 ;; Defined at:
  1908 ;;		line 55 in file "I2C.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         0       0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    1
  1929 ;; This function calls:
  1930 ;;		_I2C_Master_Wait
  1931 ;; This function is called by:
  1932 ;;		_READ_RTC
  1933 ;;		_SET_RTC
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _I2C_Master_Stop
  1939  0448                     _I2C_Master_Stop:
  1940  0448                     l1174:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;I2C.c: 57:     I2C_Master_Wait();
  1946  0448  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  1947  044D                     l1176:
  1948                           
  1949                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1950  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1951  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1952  044F  1511               	bsf	17,2	;volatile
  1953  0450                     l106:
  1954  0450  0008               	return
  1955  0451                     __end_of_I2C_Master_Stop:
  1956                           
  1957                           	psect	text10
  1958  043F                     __ptext10:	
  1959 ;; *************** function _I2C_Master_Start *****************
  1960 ;; Defined at:
  1961 ;;		line 39 in file "I2C.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    1
  1982 ;; This function calls:
  1983 ;;		_I2C_Master_Wait
  1984 ;; This function is called by:
  1985 ;;		_READ_RTC
  1986 ;;		_SET_RTC
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _I2C_Master_Start
  1992  043F                     _I2C_Master_Start:
  1993  043F                     l1166:	
  1994                           ;incstack = 0
  1995                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1996                           
  1997                           
  1998                           ;I2C.c: 41:     I2C_Master_Wait();
  1999  043F  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  2000  0444                     l1168:
  2001                           
  2002                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2003  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0446  1411               	bsf	17,0	;volatile
  2006  0447                     l100:
  2007  0447  0008               	return
  2008  0448                     __end_of_I2C_Master_Start:
  2009                           
  2010                           	psect	text11
  2011  0436                     __ptext11:	
  2012 ;; *************** function _I2C_Master_RepeatedStart *****************
  2013 ;; Defined at:
  2014 ;;		line 47 in file "I2C.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		_I2C_Master_Wait
  2037 ;; This function is called by:
  2038 ;;		_READ_RTC
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _I2C_Master_RepeatedStart
  2044  0436                     _I2C_Master_RepeatedStart:
  2045  0436                     l1170:	
  2046                           ;incstack = 0
  2047                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2048                           
  2049                           
  2050                           ;I2C.c: 49:     I2C_Master_Wait();
  2051  0436  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  2052  043B                     l1172:
  2053                           
  2054                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2055  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2056  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2057  043D  1491               	bsf	17,1	;volatile
  2058  043E                     l103:
  2059  043E  0008               	return
  2060  043F                     __end_of_I2C_Master_RepeatedStart:
  2061                           
  2062                           	psect	text12
  2063  048A                     __ptext12:	
  2064 ;; *************** function _I2C_Master_Read *****************
  2065 ;; Defined at:
  2066 ;;		line 74 in file "I2C.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  a               2    0[COMMON] unsigned short 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  temp            2    4[COMMON] unsigned short 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2    0[COMMON] unsigned short 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         2       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0
  2082 ;;      Temps:          2       0       0       0       0
  2083 ;;      Totals:         6       0       0       0       0
  2084 ;;Total ram usage:        6 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    1
  2087 ;; This function calls:
  2088 ;;		_I2C_Master_Wait
  2089 ;; This function is called by:
  2090 ;;		_READ_RTC
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _I2C_Master_Read
  2096  048A                     _I2C_Master_Read:
  2097  048A                     l1182:	
  2098                           ;incstack = 0
  2099                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2100                           
  2101                           
  2102                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2103  048A  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  2104  048F                     l1184:
  2105                           
  2106                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2107  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0491  1591               	bsf	17,3	;volatile
  2110                           
  2111                           ;I2C.c: 79:     I2C_Master_Wait();
  2112  0492  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  2113  0497                     l1186:
  2114                           
  2115                           ;I2C.c: 80:     temp = SSPBUF;
  2116  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0499  0813               	movf	19,w	;volatile
  2119  049A  00F2               	movwf	??_I2C_Master_Read
  2120  049B  01F3               	clrf	??_I2C_Master_Read+1
  2121  049C  0872               	movf	??_I2C_Master_Read,w
  2122  049D  00F4               	movwf	I2C_Master_Read@temp
  2123  049E  0873               	movf	??_I2C_Master_Read+1,w
  2124  049F  00F5               	movwf	I2C_Master_Read@temp+1
  2125  04A0                     l1188:
  2126                           
  2127                           ;I2C.c: 81:     I2C_Master_Wait();
  2128  04A0  120A  118A  2464  120A  118A  	fcall	_I2C_Master_Wait
  2129  04A5                     l1190:
  2130                           
  2131                           ;I2C.c: 82:     if(a == 1){
  2132  04A5  0370               	decf	I2C_Master_Read@a,w
  2133  04A6  0471               	iorwf	I2C_Master_Read@a+1,w
  2134  04A7  1D03               	btfss	3,2
  2135  04A8  2CAA               	goto	u571
  2136  04A9  2CAB               	goto	u570
  2137  04AA                     u571:
  2138  04AA  2CAF               	goto	l112
  2139  04AB                     u570:
  2140  04AB                     l1192:
  2141                           
  2142                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2143  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2144  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2145  04AD  1291               	bcf	17,5	;volatile
  2146                           
  2147                           ;I2C.c: 84:     }else{
  2148  04AE  2CB2               	goto	l113
  2149  04AF                     l112:
  2150                           
  2151                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2152  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2153  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2154  04B1  1691               	bsf	17,5	;volatile
  2155  04B2                     l113:	
  2156                           ;I2C.c: 86:     }
  2157                           
  2158                           
  2159                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2160  04B2  1611               	bsf	17,4	;volatile
  2161  04B3                     l1194:
  2162                           
  2163                           ;I2C.c: 88:     return temp;
  2164  04B3  0875               	movf	I2C_Master_Read@temp+1,w
  2165  04B4  00F1               	movwf	?_I2C_Master_Read+1
  2166  04B5  0874               	movf	I2C_Master_Read@temp,w
  2167  04B6  00F0               	movwf	?_I2C_Master_Read
  2168  04B7                     l114:
  2169  04B7  0008               	return
  2170  04B8                     __end_of_I2C_Master_Read:
  2171                           
  2172                           	psect	text13
  2173  0464                     __ptext13:	
  2174 ;; *************** function _I2C_Master_Wait *****************
  2175 ;; Defined at:
  2176 ;;		line 32 in file "I2C.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_I2C_Master_Start
  2200 ;;		_I2C_Master_RepeatedStart
  2201 ;;		_I2C_Master_Stop
  2202 ;;		_I2C_Master_Write
  2203 ;;		_I2C_Master_Read
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _I2C_Master_Wait
  2209  0464                     _I2C_Master_Wait:
  2210  0464                     l1080:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2213                           
  2214  0464                     l94:	
  2215                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2216                           
  2217  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0466  1914               	btfsc	20,2	;volatile
  2220  0467  2C69               	goto	u361
  2221  0468  2C6A               	goto	u360
  2222  0469                     u361:
  2223  0469  2C64               	goto	l94
  2224  046A                     u360:
  2225  046A                     l1082:
  2226  046A  0811               	movf	17,w	;volatile
  2227  046B  391F               	andlw	31
  2228  046C  1D03               	btfss	3,2
  2229  046D  2C6F               	goto	u371
  2230  046E  2C70               	goto	u370
  2231  046F                     u371:
  2232  046F  2C64               	goto	l94
  2233  0470                     u370:
  2234  0470                     l97:
  2235  0470  0008               	return
  2236  0471                     __end_of_I2C_Master_Wait:
  2237                           
  2238                           	psect	text14
  2239  04E8                     __ptext14:	
  2240 ;; *************** function _I2C_Master_Init *****************
  2241 ;; Defined at:
  2242 ;;		line 16 in file "I2C.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  c               4    0[BANK0 ] const unsigned long 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       4       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       4       0       0       0
  2259 ;;      Totals:         0       8       0       0       0
  2260 ;;Total ram usage:        8 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		___lldiv
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _I2C_Master_Init
  2272  04E8                     _I2C_Master_Init:
  2273  04E8                     l1226:	
  2274                           ;incstack = 0
  2275                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2276                           
  2277                           
  2278                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2279  04E8  3028               	movlw	40
  2280  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2281  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2282  04EB  0094               	movwf	20	;volatile
  2283  04EC                     l1228:
  2284                           
  2285                           ;I2C.c: 19:     SSPCON2 = 0;
  2286  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2287  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2288  04EE  0191               	clrf	17	;volatile
  2289  04EF                     l1230:
  2290                           
  2291                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2292  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2293  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2294  04F1  0820               	movf	I2C_Master_Init@c,w
  2295  04F2  00A4               	movwf	??_I2C_Master_Init
  2296  04F3  0821               	movf	I2C_Master_Init@c+1,w
  2297  04F4  00A5               	movwf	??_I2C_Master_Init+1
  2298  04F5  0822               	movf	I2C_Master_Init@c+2,w
  2299  04F6  00A6               	movwf	??_I2C_Master_Init+2
  2300  04F7  0823               	movf	I2C_Master_Init@c+3,w
  2301  04F8  00A7               	movwf	??_I2C_Master_Init+3
  2302  04F9  3002               	movlw	2
  2303  04FA                     u665:
  2304  04FA  1003               	clrc
  2305  04FB  0DA4               	rlf	??_I2C_Master_Init,f
  2306  04FC  0DA5               	rlf	??_I2C_Master_Init+1,f
  2307  04FD  0DA6               	rlf	??_I2C_Master_Init+2,f
  2308  04FE  0DA7               	rlf	??_I2C_Master_Init+3,f
  2309  04FF                     u660:
  2310  04FF  3EFF               	addlw	-1
  2311  0500  1D03               	skipz
  2312  0501  2CFA               	goto	u665
  2313  0502  0827               	movf	??_I2C_Master_Init+3,w
  2314  0503  00F3               	movwf	___lldiv@divisor+3
  2315  0504  0826               	movf	??_I2C_Master_Init+2,w
  2316  0505  00F2               	movwf	___lldiv@divisor+2
  2317  0506  0825               	movf	??_I2C_Master_Init+1,w
  2318  0507  00F1               	movwf	___lldiv@divisor+1
  2319  0508  0824               	movf	??_I2C_Master_Init,w
  2320  0509  00F0               	movwf	___lldiv@divisor
  2321  050A  3000               	movlw	0
  2322  050B  00F7               	movwf	___lldiv@dividend+3
  2323  050C  307A               	movlw	122
  2324  050D  00F6               	movwf	___lldiv@dividend+2
  2325  050E  3012               	movlw	18
  2326  050F  00F5               	movwf	___lldiv@dividend+1
  2327  0510  3000               	movlw	0
  2328  0511  00F4               	movwf	___lldiv@dividend
  2329  0512  120A  118A  25D3  120A  118A  	fcall	___lldiv
  2330  0517  0870               	movf	?___lldiv,w
  2331  0518  3EFF               	addlw	255
  2332  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2333  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2334  051B  0093               	movwf	19	;volatile
  2335  051C                     l1232:
  2336                           
  2337                           ;I2C.c: 21:     SSPSTAT = 0;
  2338  051C  0194               	clrf	20	;volatile
  2339  051D                     l1234:
  2340                           
  2341                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2342  051D  1587               	bsf	7,3	;volatile
  2343  051E                     l1236:
  2344                           
  2345                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2346  051E  1607               	bsf	7,4	;volatile
  2347  051F                     l91:
  2348  051F  0008               	return
  2349  0520                     __end_of_I2C_Master_Init:
  2350                           
  2351                           	psect	text15
  2352  05D3                     __ptext15:	
  2353 ;; *************** function ___lldiv *****************
  2354 ;; Defined at:
  2355 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  divisor         4    0[COMMON] unsigned long 
  2358 ;;  dividend        4    4[COMMON] unsigned long 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  quotient        4    9[COMMON] unsigned long 
  2361 ;;  counter         1   13[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  4    0[COMMON] unsigned long 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         8       0       0       0       0
  2372 ;;      Locals:         5       0       0       0       0
  2373 ;;      Temps:          1       0       0       0       0
  2374 ;;      Totals:        14       0       0       0       0
  2375 ;;Total ram usage:       14 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_I2C_Master_Init
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function ___lldiv
  2386  05D3                     ___lldiv:
  2387  05D3                     l1202:	
  2388                           ;incstack = 0
  2389                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2390                           
  2391  05D3  3000               	movlw	0
  2392  05D4  00FC               	movwf	___lldiv@quotient+3
  2393  05D5  3000               	movlw	0
  2394  05D6  00FB               	movwf	___lldiv@quotient+2
  2395  05D7  3000               	movlw	0
  2396  05D8  00FA               	movwf	___lldiv@quotient+1
  2397  05D9  3000               	movlw	0
  2398  05DA  00F9               	movwf	___lldiv@quotient
  2399  05DB  0873               	movf	___lldiv@divisor+3,w
  2400  05DC  0472               	iorwf	___lldiv@divisor+2,w
  2401  05DD  0471               	iorwf	___lldiv@divisor+1,w
  2402  05DE  0470               	iorwf	___lldiv@divisor,w
  2403  05DF  1903               	skipnz
  2404  05E0  2DE2               	goto	u591
  2405  05E1  2DE3               	goto	u590
  2406  05E2                     u591:
  2407  05E2  2E30               	goto	l1222
  2408  05E3                     u590:
  2409  05E3                     l1204:
  2410  05E3  01FD               	clrf	___lldiv@counter
  2411  05E4  0AFD               	incf	___lldiv@counter,f
  2412  05E5  2DF3               	goto	l1208
  2413  05E6                     l1206:
  2414  05E6  3001               	movlw	1
  2415  05E7  00F8               	movwf	??___lldiv
  2416  05E8                     u605:
  2417  05E8  1003               	clrc
  2418  05E9  0DF0               	rlf	___lldiv@divisor,f
  2419  05EA  0DF1               	rlf	___lldiv@divisor+1,f
  2420  05EB  0DF2               	rlf	___lldiv@divisor+2,f
  2421  05EC  0DF3               	rlf	___lldiv@divisor+3,f
  2422  05ED  0BF8               	decfsz	??___lldiv,f
  2423  05EE  2DE8               	goto	u605
  2424  05EF  3001               	movlw	1
  2425  05F0  00F8               	movwf	??___lldiv
  2426  05F1  0878               	movf	??___lldiv,w
  2427  05F2  07FD               	addwf	___lldiv@counter,f
  2428  05F3                     l1208:
  2429  05F3  1FF3               	btfss	___lldiv@divisor+3,7
  2430  05F4  2DF6               	goto	u611
  2431  05F5  2DF7               	goto	u610
  2432  05F6                     u611:
  2433  05F6  2DE6               	goto	l1206
  2434  05F7                     u610:
  2435  05F7                     l1210:
  2436  05F7  3001               	movlw	1
  2437  05F8  00F8               	movwf	??___lldiv
  2438  05F9                     u625:
  2439  05F9  1003               	clrc
  2440  05FA  0DF9               	rlf	___lldiv@quotient,f
  2441  05FB  0DFA               	rlf	___lldiv@quotient+1,f
  2442  05FC  0DFB               	rlf	___lldiv@quotient+2,f
  2443  05FD  0DFC               	rlf	___lldiv@quotient+3,f
  2444  05FE  0BF8               	decfsz	??___lldiv,f
  2445  05FF  2DF9               	goto	u625
  2446  0600                     l1212:
  2447  0600  0873               	movf	___lldiv@divisor+3,w
  2448  0601  0277               	subwf	___lldiv@dividend+3,w
  2449  0602  1D03               	skipz
  2450  0603  2E0E               	goto	u635
  2451  0604  0872               	movf	___lldiv@divisor+2,w
  2452  0605  0276               	subwf	___lldiv@dividend+2,w
  2453  0606  1D03               	skipz
  2454  0607  2E0E               	goto	u635
  2455  0608  0871               	movf	___lldiv@divisor+1,w
  2456  0609  0275               	subwf	___lldiv@dividend+1,w
  2457  060A  1D03               	skipz
  2458  060B  2E0E               	goto	u635
  2459  060C  0870               	movf	___lldiv@divisor,w
  2460  060D  0274               	subwf	___lldiv@dividend,w
  2461  060E                     u635:
  2462  060E  1C03               	skipc
  2463  060F  2E11               	goto	u631
  2464  0610  2E12               	goto	u630
  2465  0611                     u631:
  2466  0611  2E21               	goto	l1218
  2467  0612                     u630:
  2468  0612                     l1214:
  2469  0612  0870               	movf	___lldiv@divisor,w
  2470  0613  02F4               	subwf	___lldiv@dividend,f
  2471  0614  0871               	movf	___lldiv@divisor+1,w
  2472  0615  1C03               	skipc
  2473  0616  0F71               	incfsz	___lldiv@divisor+1,w
  2474  0617  02F5               	subwf	___lldiv@dividend+1,f
  2475  0618  0872               	movf	___lldiv@divisor+2,w
  2476  0619  1C03               	skipc
  2477  061A  0F72               	incfsz	___lldiv@divisor+2,w
  2478  061B  02F6               	subwf	___lldiv@dividend+2,f
  2479  061C  0873               	movf	___lldiv@divisor+3,w
  2480  061D  1C03               	skipc
  2481  061E  0F73               	incfsz	___lldiv@divisor+3,w
  2482  061F  02F7               	subwf	___lldiv@dividend+3,f
  2483  0620                     l1216:
  2484  0620  1479               	bsf	___lldiv@quotient,0
  2485  0621                     l1218:
  2486  0621  3001               	movlw	1
  2487  0622                     u645:
  2488  0622  1003               	clrc
  2489  0623  0CF3               	rrf	___lldiv@divisor+3,f
  2490  0624  0CF2               	rrf	___lldiv@divisor+2,f
  2491  0625  0CF1               	rrf	___lldiv@divisor+1,f
  2492  0626  0CF0               	rrf	___lldiv@divisor,f
  2493  0627  3EFF               	addlw	-1
  2494  0628  1D03               	skipz
  2495  0629  2E22               	goto	u645
  2496  062A                     l1220:
  2497  062A  3001               	movlw	1
  2498  062B  02FD               	subwf	___lldiv@counter,f
  2499  062C  1D03               	btfss	3,2
  2500  062D  2E2F               	goto	u651
  2501  062E  2E30               	goto	u650
  2502  062F                     u651:
  2503  062F  2DF7               	goto	l1210
  2504  0630                     u650:
  2505  0630                     l1222:
  2506  0630  087C               	movf	___lldiv@quotient+3,w
  2507  0631  00F3               	movwf	?___lldiv+3
  2508  0632  087B               	movf	___lldiv@quotient+2,w
  2509  0633  00F2               	movwf	?___lldiv+2
  2510  0634  087A               	movf	___lldiv@quotient+1,w
  2511  0635  00F1               	movwf	?___lldiv+1
  2512  0636  0879               	movf	___lldiv@quotient,w
  2513  0637  00F0               	movwf	?___lldiv
  2514  0638                     l324:
  2515  0638  0008               	return
  2516  0639                     __end_of___lldiv:
  2517  007E                     btemp	set	126	;btemp
  2518  007E                     wtemp0	set	126
  2519                           
  2520                           	psect	config
  2521                           
  2522                           ;Config register CONFIG1 @ 0x2007
  2523                           ;	Oscillator Selection bits
  2524                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2525                           ;	Watchdog Timer Enable bit
  2526                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2527                           ;	Power-up Timer Enable bit
  2528                           ;	PWRTE = OFF, PWRT disabled
  2529                           ;	RE3/MCLR pin function select bit
  2530                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2531                           ;	Code Protection bit
  2532                           ;	CP = OFF, Program memory code protection is disabled
  2533                           ;	Data Code Protection bit
  2534                           ;	CPD = OFF, Data memory code protection is disabled
  2535                           ;	Brown Out Reset Selection bits
  2536                           ;	BOREN = OFF, BOR disabled
  2537                           ;	Internal External Switchover bit
  2538                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2539                           ;	Fail-Safe Clock Monitor Enabled bit
  2540                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2541                           ;	Low Voltage Programming Enable bit
  2542                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2543                           ;	In-Circuit Debugger Mode bit
  2544                           ;	DEBUG = 0x1, unprogrammed default
  2545  2007                     	org	8199
  2546  2007  20D4               	dw	8404
  2547                           
  2548                           ;Config register CONFIG2 @ 0x2008
  2549                           ;	Brown-out Reset Selection bit
  2550                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2551                           ;	Flash Program Memory Self Write Enable bits
  2552                           ;	WRT = OFF, Write protection off
  2553  2008                     	org	8200
  2554  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SET_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _READ_RTC->_I2C_Master_Read
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_SET_RTC
    _SET_RTC->_decimal_to_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4469
                                              9 BANK0     10    10      0
                    _I2C_Master_Init
                           _READ_RTC
                            _SET_RTC
                          _UART_INIT
                          _UART_READ
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_RTC                                              8     4      4    2407
                                              1 BANK0      8     4      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0     944
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _READ_RTC                                             2     2      0    1511
                                              6 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _READ_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SET_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _UART_INIT
   _UART_READ

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 16:59:52 2021

                                _i 003B                                 l91 051F  
                               l94 0464                                 l97 0470  
                     ___awdiv@sign 0076                     _decimal_to_bcd 04B8  
                              l100 0447                                l103 043E  
                              l112 04AF                                l113 04B2  
                              l114 04B7                                l106 0450  
                              l202 07F0                                l109 0463  
                              l142 0489                                l146 0459  
                              l324 0638                                l441 069F  
                              l196 04E7                                l454 0578  
                              l199 0734                                _GIE 005F  
                              u400 065A                                u401 0659  
                              u420 066C                                u500 053B  
                              u421 066B                                u501 053A  
                              u415 065E                                u360 046A  
                              u440 067D                                u520 054D  
                              u361 0469                                u441 067C  
                              u521 054C                                u610 05F7  
                              u370 0470                                u530 0557  
                              u611 05F6                                u371 046F  
                              u435 066D                                u531 0556  
                              u515 053F                                u460 0691  
                              u380 063E                                u605 05E8  
                              u461 0690                                u445 0679  
                              u381 063D                                u630 0612  
                              u470 0696                                u390 0649  
                              u550 056A                                u631 0611  
                              u471 0695                                u455 0685  
                              u391 0648                                u551 0569  
                              u535 0553                                u560 056F  
                              u480 0525                                u625 05F9  
                              u561 056E                                u545 055E  
                              u481 0524                                u650 0630  
                              u570 04AB                                u490 0530  
                              u651 062F                                u635 060E  
                              u571 04AA                                u707 072F  
                              u491 052F                                u660 04FF  
                              u645 0622                                u590 05E3  
                              u670 0457                                u591 05E2  
                              u671 0456                                u665 04FA  
                              u585 04CE                                u697 07E9  
                     ___awmod@sign 0076                               l1100 0654  
                             l1110 066C                               l1102 065A  
                             l1112 067D                               l1104 065D  
                             l1120 0691                               l1210 05F7  
                             l1202 05D3                               l1122 0696  
                             l1114 0683                               l1106 0664  
                             l1130 0521                               l1220 062A  
                             l1212 0600                               l1204 05E3  
                             l1124 069B                               l1116 0684  
                             l1108 0668                               l1140 0535  
                             l1132 0525                               l1300 0591  
                             l1214 0612                               l1206 05E6  
                             l1222 0630                               l1230 04EF  
                             l1118 068B                               l1150 054D  
                             l1142 053B                               l1134 052A  
                             l1310 0594                               l1302 0592  
                             l1216 0620                               l1208 05F3  
                             l1232 051C                               l1080 0464  
                             l1160 056F                               l1152 0557  
                             l1144 053E                               l1136 052C  
                             l1128 0520                               l1240 07E1  
                             l1320 05A1                               l1312 0594  
                             l1304 0593                               l1218 0621  
                             l1234 051D                               l1226 04E8  
                             l1082 046A                               l1170 0436  
                             l1090 0643                               l1162 0574  
                             l1154 055D                               l1146 0545  
                             l1138 0530                               l1250 0480  
                             l1322 05B9                               l1314 0594  
                             l1306 0594                               l1236 051E  
                             l1228 04EC                               l1172 043B  
                             l1180 045F                               l1092 0645  
                             l1084 0639                               l1156 0564  
                             l1148 0549                               l1252 0482  
                             l1244 0471                               l1324 05BE  
                             l1316 0594                               l1308 0594  
                             l1190 04A5                               l1182 048A  
                             l1166 043F                               l1174 0448  
                             l1094 0649                               l1086 063A  
                             l1158 056A                               l1238 0738  
                             l1254 0486                               l1246 047B  
                             l1262 0451                               l1326 05C3  
                             l1318 0594                               l1270 0579  
                             l1192 04AB                               l1184 048F  
                             l1168 0444                               l1176 044D  
                             l1256 06A0                               l1096 064E  
                             l1088 063E                               l1248 047E  
                             l1264 0457                               l1328 05CD  
                             l1280 0581                               l1272 057D  
                             l1194 04B3                               l1186 0497  
                             l1178 045A                               l1258 072B  
                             l1098 0652                               l1266 0458  
                             l1290 058A                               l1282 0584  
                             l1274 057E                               l1188 04A0  
                             l1292 058B                               l1284 0585  
                             l1276 057F                               l1198 04BB  
                             l1294 058C                               l1286 0588  
                             l1278 0580                               l1296 058D  
                             l1288 0589                               l1298 0590  
                             _PEIE 005E                    __end_of_SET_RTC 07F1  
 __end_of_I2C_Master_RepeatedStart 043F                               _main 0579  
                             _hour 0038                               _year 0035  
                             btemp 007E                               start 0000  
           __end_of_decimal_to_bcd 04E8                   ?_I2C_Master_Init 0020  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                   __end_of_READ_RTC 0735  
                            ?_main 0070                    __end_of___awdiv 06A0  
                  __end_of___awmod 0579                              _ANSEL 0188  
                  __end_of___lldiv 0639                    ___awdiv@divisor 0070  
                  ___awdiv@counter 0075                              _RCREG 001A  
                            _RCSTA 0018                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _TXSTA 0098                 __size_of_UART_INIT 0019  
               __size_of_UART_READ 0009                              _Start 0033  
                            _m_day 0037                              _month 0036  
                            status 0003                              wtemp0 007E  
                  __initialization 07F1                       __end_of_main 05D3  
                  ?_decimal_to_bcd 0070                             ??_main 0029  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                          ??_SET_RTC 0025  
               ??_I2C_Master_Write 0072                   ___awdiv@dividend 0072  
                           _ANSELH 0189                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                  __end_of_UART_INIT 048A  
                __end_of_UART_READ 045A           _I2C_Master_RepeatedStart 0436  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lldiv 0078                   ___awdiv@quotient 0077  
                           _minute 0039                             _second 003A  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
          __end_of__initialization 07FC                          ?_READ_RTC 0070  
                   __pcstackCOMMON 0070                         __pbssBANK0 0033  
                       ??_READ_RTC 0076                         __pmaintext 0579  
                          _SET_RTC 0735                            _SSPCON2 0091  
                          _SSPSTAT 0094                            _Bandera 0034  
                 ??_decimal_to_bcd 0079                            ___awdiv 0639  
                          ___awmod 0520                            ___lldiv 05D3  
                          __ptext1 0451                            __ptext2 0471  
                          __ptext3 0735                            __ptext4 04B8  
                          __ptext5 0520                            __ptext6 0639  
                          __ptext7 06A0                            __ptext8 045A  
                          __ptext9 0448                   ___awmod@dividend 0072  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D                        SET_RTC@hour 0021  
         __size_of_I2C_Master_Stop 0009                        SET_RTC@year 0024  
             end_of_initialization 07FC         ??_I2C_Master_RepeatedStart 0070  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
                 I2C_Master_Init@c 0020                   I2C_Master_Read@a 0070  
                        _UART_INIT 0471                          _UART_READ 0451  
                        _TRISCbits 0087                          _TXSTAbits 0098  
                __size_of_READ_RTC 0095                         ?_UART_INIT 0070  
                       ?_UART_READ 0070                        _BAUDCTLbits 0187  
              start_initialization 07F1                  ??_I2C_Master_Init 0024  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                          ___latbits 0002  
                    __pcstackBANK0 0020                           ?_SET_RTC 0021  
                 _I2C_Master_Start 043F                   _I2C_Master_Write 045A  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 0070                        ??_UART_INIT 0070  
                      ??_UART_READ 0070                           _READ_RTC 06A0  
                         _PIE1bits 008C                           _PIR1bits 000C  
                    SET_RTC@minute 0028                I2C_Master_Read@temp 0074  
                 __size_of_SET_RTC 00BC  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0067                   __size_of___awmod 0059  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0066  
          __size_of_decimal_to_bcd 0030                    _I2C_Master_Init 04E8  
                  _I2C_Master_Read 048A                    _I2C_Master_Wait 0464  
                  _I2C_Master_Stop 0448                           __ptext10 043F  
                         __ptext11 0436                           __ptext12 048A  
                         __ptext13 0464                           __ptext14 04E8  
                         __ptext15 05D3                      __size_of_main 005A  
                     SET_RTC@m_day 0022                       SET_RTC@month 0023  
             decimal_to_bcd@number 0020           __end_of_I2C_Master_Start 0448  
         __end_of_I2C_Master_Write 0464                         _INTCONbits 000B  
                 ___lldiv@dividend 0074                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0520            __end_of_I2C_Master_Read 04B8  
          __end_of_I2C_Master_Wait 0471            __end_of_I2C_Master_Stop 0451  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                      _SSPCON2bits 0091                        main@Bandera 0032  
