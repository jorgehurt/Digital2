

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 23:34:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471                           
   472                           	psect	strings
   473  0800                     __pstrings:
   474  0800                     stringtab:
   475  0800                     __stringtab:
   476                           
   477                           ;	String table - string pointers are 1 byte each
   478  0800  1BFF               	btfsc	btemp+1,7
   479  0801  280A               	ljmp	stringcode
   480  0802  1383               	bcf	3,7
   481  0803  187F               	btfsc	btemp+1,0
   482  0804  1783               	bsf	3,7
   483  0805  0800               	movf	0,w
   484  0806  0A84               	incf	4,f
   485  0807  1903               	skipnz
   486  0808  0AFF               	incf	btemp+1,f
   487  0809  0008               	return
   488  080A                     stringcode:
   489  080A                     stringdir:
   490  080A  3008               	movlw	high stringdir
   491  080B  008A               	movwf	10
   492  080C  0804               	movf	4,w
   493  080D  0A84               	incf	4,f
   494  080E  0782               	addwf	2,f
   495  080F                     __stringbase:
   496  080F  3400               	retlw	0
   497  0810                     __end_of__stringtab:
   498  0810                     _dpowers:
   499  0810  3401               	retlw	1
   500  0811  3400               	retlw	0
   501  0812  340A               	retlw	10
   502  0813  3400               	retlw	0
   503  0814  3464               	retlw	100
   504  0815  3400               	retlw	0
   505  0816  34E8               	retlw	232
   506  0817  3403               	retlw	3
   507  0818  3410               	retlw	16
   508  0819  3427               	retlw	39
   509  081A                     __end_of_dpowers:
   510  0019                     _TXREG	set	25
   511  001E                     _ADRESH	set	30
   512  001F                     _ADCON0bits	set	31
   513  0018                     _RCSTAbits	set	24
   514  001A                     _RCREG	set	26
   515  0018                     _RCSTA	set	24
   516  000C                     _PIR1bits	set	12
   517  000B                     _INTCONbits	set	11
   518  0009                     _PORTE	set	9
   519  0008                     _PORTD	set	8
   520  0007                     _PORTC	set	7
   521  0006                     _PORTB	set	6
   522  0005                     _PORTA	set	5
   523  004A                     _RE2	set	74
   524  0049                     _RE1	set	73
   525  0048                     _RE0	set	72
   526  0098                     _TXSTAbits	set	152
   527  009F                     _ADCON1bits	set	159
   528  0098                     _TXSTA	set	152
   529  0099                     _SPBRG	set	153
   530  009A                     _SPBRGH	set	154
   531  008C                     _PIE1bits	set	140
   532  0089                     _TRISE	set	137
   533  0087                     _TRISC	set	135
   534  0088                     _TRISD	set	136
   535  0086                     _TRISB	set	134
   536  0085                     _TRISA	set	133
   537  008F                     _OSCCONbits	set	143
   538  0187                     _BAUDCTLbits	set	391
   539  0189                     _ANSELH	set	393
   540  0188                     _ANSEL	set	392
   541  081A                     STR_1:
   542  081A  3453               	retlw	83	;'S'
   543  081B  3431               	retlw	49	;'1'
   544  081C  343A               	retlw	58	;':'
   545  081D  3420               	retlw	32	;' '
   546  081E  3420               	retlw	32	;' '
   547  081F  3420               	retlw	32	;' '
   548  0820  3420               	retlw	32	;' '
   549  0821  3453               	retlw	83	;'S'
   550  0822  3432               	retlw	50	;'2'
   551  0823  343A               	retlw	58	;':'
   552  0824  3420               	retlw	32	;' '
   553  0825  3420               	retlw	32	;' '
   554  0826  3420               	retlw	32	;' '
   555  0827  3420               	retlw	32	;' '
   556  0828  3453               	retlw	83	;'S'
   557  0829  3433               	retlw	51	;'3'
   558  082A  343A               	retlw	58	;':'
   559  082B  3400               	retlw	0
   560  082C                     STR_4:
   561  082C  3425               	retlw	37	;'%'
   562  082D  342E               	retlw	46	;'.'
   563  082E  3431               	retlw	49	;'1'
   564  082F  3469               	retlw	105	;'i'
   565  0830  3400               	retlw	0
   566  0831                     STR_5:
   567  0831  3456               	retlw	86	;'V'
   568  0832  3420               	retlw	32	;' '
   569  0833  3400               	retlw	0
   570  0834                     STR_2:
   571  0834  342E               	retlw	46	;'.'
   572  0835  3400               	retlw	0
   573  0831                     
   574                           	psect	cinit
   575  000F                     start_initialization:	
   576                           ; #config settings
   577                           
   578  000F                     __initialization:
   579                           
   580                           ; Clear objects allocated to COMMON
   581  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   582  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   583  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   584  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   585                           
   586                           ; Clear objects allocated to BANK0
   587  0013  1383               	bcf	3,7	;select IRP bank0
   588  0014  3062               	movlw	low __pbssBANK0
   589  0015  0084               	movwf	4
   590  0016  3070               	movlw	low (__pbssBANK0+14)
   591  0017  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   592                           
   593                           ; Clear objects allocated to BANK1
   594  001C  30A0               	movlw	low __pbssBANK1
   595  001D  0084               	movwf	4
   596  001E  30E2               	movlw	low (__pbssBANK1+66)
   597  001F  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   598  0024                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  0024                     __end_of__initialization:
   602  0024  0183               	clrf	3
   603  0025  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  0076                     __pbssCOMMON:
   607  0076                     _Lectura:
   608  0076                     	ds	2
   609  0078                     _Contador:
   610  0078                     	ds	2
   611                           
   612                           	psect	bssBANK0
   613  0062                     __pbssBANK0:
   614  0062                     _ADC2A:
   615  0062                     	ds	2
   616  0064                     _DCADC2:
   617  0064                     	ds	2
   618  0066                     _ADC1C:
   619  0066                     	ds	2
   620  0068                     _ADC1B:
   621  0068                     	ds	2
   622  006A                     _ADC1A:
   623  006A                     	ds	2
   624  006C                     _DCADC1:
   625  006C                     	ds	2
   626  006E                     _ADC2ADRESH:
   627  006E                     	ds	1
   628  006F                     _ADC1ADRESH:
   629  006F                     	ds	1
   630                           
   631                           	psect	bssBANK1
   632  00A0                     __pbssBANK1:
   633  00A0                     _test:
   634  00A0                     	ds	5
   635  00A5                     _ADCLB:
   636  00A5                     	ds	4
   637  00A9                     _ADCLA:
   638  00A9                     	ds	4
   639  00AD                     _plc:
   640  00AD                     	ds	2
   641  00AF                     _PI:
   642  00AF                     	ds	2
   643  00B1                     _ADC2C:
   644  00B1                     	ds	2
   645  00B3                     _ADC2B:
   646  00B3                     	ds	2
   647  00B5                     _ContadorSend:
   648  00B5                     	ds	5
   649  00BA                     _PUNTO2A:
   650  00BA                     	ds	5
   651  00BF                     _ADCchar2C:
   652  00BF                     	ds	5
   653  00C4                     _ADCchar2B:
   654  00C4                     	ds	5
   655  00C9                     _ADCchar2A:
   656  00C9                     	ds	5
   657  00CE                     _PUNTO1A:
   658  00CE                     	ds	5
   659  00D3                     _ADCchar1C:
   660  00D3                     	ds	5
   661  00D8                     _ADCchar1B:
   662  00D8                     	ds	5
   663  00DD                     _ADCchar1A:
   664  00DD                     	ds	5
   665                           
   666                           	psect	clrtext
   667  07F6                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  07F7                     clrloop0:
   673  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  07F8  0A84               	incf	4,f	;increment pointer
   675  07F9  0604               	xorwf	4,w	;XOR with final address
   676  07FA  1903               	btfsc	3,2	;have we reached the end yet?
   677  07FB  3400               	retlw	0	;all done for this memory range, return
   678  07FC  0604               	xorwf	4,w	;XOR again to restore value
   679  07FD  2FF7               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackBANK1
   682  00E2                     __pcstackBANK1:
   683  00E2                     ??_ADC:
   684                           
   685                           ; 1 bytes @ 0x0
   686  00E2                     	ds	4
   687                           
   688                           	psect	cstackCOMMON
   689  0070                     __pcstackCOMMON:
   690  0070                     ?_isdigit:
   691  0070                     ?_inicializacion:	
   692                           ; 1 bit 
   693                           
   694  0070                     ?_ADC:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_SerialCom:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Counter:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_lcd_ready:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_lcd_lat:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_main:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_lcd_cmd:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_lcd_dwr:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_ISR:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_ISR:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?i1_Counter:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??i1_Counter:	
   728                           ; 1 bytes @ 0x0
   729                           
   730                           
   731                           ; 1 bytes @ 0x0
   732  0070                     	ds	4
   733  0074                     ??_SerialCom:
   734  0074                     ??_Counter:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     ??_lcd_ready:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ??_lcd_lat:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ?_strcat:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ?_strcpy:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     ??_isdigit:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     ?___bmul:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ??___aldiv:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ??___awdiv:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ??___lwdiv:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ?__Umul8_16:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ___bmul@multiplicand:	
   768                           ; 2 bytes @ 0x4
   769                           
   770  0074                     __Umul8_16@multiplicand:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     _isdigit$988:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     strcat@from:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     strcpy@from:	
   780                           ; 1 bytes @ 0x4
   781                           
   782                           
   783                           ; 1 bytes @ 0x4
   784  0074                     	ds	1
   785  0075                     ??_strcat:
   786  0075                     ??_strcpy:	
   787                           ; 1 bytes @ 0x5
   788                           
   789  0075                     ??___bmul:	
   790                           ; 1 bytes @ 0x5
   791                           
   792  0075                     ??___awmod:	
   793                           ; 1 bytes @ 0x5
   794                           
   795  0075                     ??___lwmod:	
   796                           ; 1 bytes @ 0x5
   797                           
   798  0075                     isdigit@c:	
   799                           ; 1 bytes @ 0x5
   800                           
   801                           
   802                           ; 1 bytes @ 0x5
   803  0075                     	ds	1
   804  0076                     ??_inicializacion:
   805  0076                     ??_main:	
   806                           ; 1 bytes @ 0x6
   807                           
   808  0076                     ??_lcd_cmd:	
   809                           ; 1 bytes @ 0x6
   810                           
   811  0076                     ??_lcd_dwr:	
   812                           ; 1 bytes @ 0x6
   813                           
   814  0076                     ??_lcd_msg:	
   815                           ; 1 bytes @ 0x6
   816                           
   817                           
   818                           	psect	cstackBANK0
   819  0020                     __pcstackBANK0:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0020                     ??__Umul8_16:
   823  0020                     ?___awdiv:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     ?___lwdiv:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ?___aldiv:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0020                     ?___xxtofl:	
   833                           ; 4 bytes @ 0x0
   834                           
   835  0020                     lcd_cmd@x:	
   836                           ; 4 bytes @ 0x0
   837                           
   838  0020                     lcd_dwr@x:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     ___bmul@product:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     strcat@to:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     strcpy@cp:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0020                     ___awdiv@divisor:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___lwdiv@divisor:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0020                     ___aldiv@divisor:	
   857                           ; 2 bytes @ 0x0
   858                           
   859  0020                     ___xxtofl@val:	
   860                           ; 4 bytes @ 0x0
   861                           
   862                           
   863                           ; 4 bytes @ 0x0
   864  0020                     	ds	1
   865  0021                     ?_lcd_msg:
   866  0021                     ___bmul@multiplier:	
   867                           ; 1 bytes @ 0x1
   868                           
   869  0021                     strcat@cp:	
   870                           ; 1 bytes @ 0x1
   871                           
   872  0021                     strcpy@to:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0021                     lcd_msg@c:	
   876                           ; 1 bytes @ 0x1
   877                           
   878                           
   879                           ; 2 bytes @ 0x1
   880  0021                     	ds	1
   881  0022                     ___awdiv@dividend:
   882  0022                     ___lwdiv@dividend:	
   883                           ; 2 bytes @ 0x2
   884                           
   885  0022                     __Umul8_16@product:	
   886                           ; 2 bytes @ 0x2
   887                           
   888                           
   889                           ; 2 bytes @ 0x2
   890  0022                     	ds	2
   891  0024                     ??___xxtofl:
   892  0024                     ___awdiv@counter:	
   893                           ; 1 bytes @ 0x4
   894                           
   895  0024                     ___lwdiv@counter:	
   896                           ; 1 bytes @ 0x4
   897                           
   898  0024                     __Umul8_16@word_mpld:	
   899                           ; 1 bytes @ 0x4
   900                           
   901  0024                     ___aldiv@dividend:	
   902                           ; 2 bytes @ 0x4
   903                           
   904                           
   905                           ; 4 bytes @ 0x4
   906  0024                     	ds	1
   907  0025                     ___awdiv@sign:
   908  0025                     ___lwdiv@quotient:	
   909                           ; 1 bytes @ 0x5
   910                           
   911                           
   912                           ; 2 bytes @ 0x5
   913  0025                     	ds	1
   914  0026                     __Umul8_16@multiplier:
   915  0026                     ___awdiv@quotient:	
   916                           ; 1 bytes @ 0x6
   917                           
   918                           
   919                           ; 2 bytes @ 0x6
   920  0026                     	ds	1
   921  0027                     ?___lwmod:
   922  0027                     ___lwmod@divisor:	
   923                           ; 2 bytes @ 0x7
   924                           
   925                           
   926                           ; 2 bytes @ 0x7
   927  0027                     	ds	1
   928  0028                     ?___awmod:
   929  0028                     ___aldiv@counter:	
   930                           ; 2 bytes @ 0x8
   931                           
   932  0028                     ___xxtofl@sign:	
   933                           ; 1 bytes @ 0x8
   934                           
   935  0028                     ___awmod@divisor:	
   936                           ; 1 bytes @ 0x8
   937                           
   938                           
   939                           ; 2 bytes @ 0x8
   940  0028                     	ds	1
   941  0029                     ___aldiv@sign:
   942  0029                     ___xxtofl@exp:	
   943                           ; 1 bytes @ 0x9
   944                           
   945  0029                     ___lwmod@dividend:	
   946                           ; 1 bytes @ 0x9
   947                           
   948                           
   949                           ; 2 bytes @ 0x9
   950  0029                     	ds	1
   951  002A                     ___awmod@dividend:
   952  002A                     ___aldiv@quotient:	
   953                           ; 2 bytes @ 0xA
   954                           
   955  002A                     ___xxtofl@arg:	
   956                           ; 4 bytes @ 0xA
   957                           
   958                           
   959                           ; 4 bytes @ 0xA
   960  002A                     	ds	1
   961  002B                     ___lwmod@counter:
   962                           
   963                           ; 1 bytes @ 0xB
   964  002B                     	ds	1
   965  002C                     ?_utoa:
   966  002C                     ?_sprintf:	
   967                           ; 1 bytes @ 0xC
   968                           
   969  002C                     sprintf@f:	
   970                           ; 2 bytes @ 0xC
   971                           
   972  002C                     ___awmod@counter:	
   973                           ; 1 bytes @ 0xC
   974                           
   975  002C                     utoa@val:	
   976                           ; 1 bytes @ 0xC
   977                           
   978                           
   979                           ; 2 bytes @ 0xC
   980  002C                     	ds	1
   981  002D                     ___awmod@sign:
   982                           
   983                           ; 1 bytes @ 0xD
   984  002D                     	ds	1
   985  002E                     ?_UART_INIT:
   986  002E                     ?___flmul:	
   987                           ; 1 bytes @ 0xE
   988                           
   989  002E                     utoa@base:	
   990                           ; 4 bytes @ 0xE
   991                           
   992  002E                     UART_INIT@baudrate:	
   993                           ; 2 bytes @ 0xE
   994                           
   995  002E                     ___flmul@b:	
   996                           ; 4 bytes @ 0xE
   997                           
   998                           
   999                           ; 4 bytes @ 0xE
  1000  002E                     	ds	1
  1001  002F                     ??_sprintf:
  1002                           
  1003                           ; 1 bytes @ 0xF
  1004  002F                     	ds	1
  1005  0030                     ??_utoa:
  1006                           
  1007                           ; 1 bytes @ 0x10
  1008  0030                     	ds	1
  1009  0031                     utoa@v:
  1010                           
  1011                           ; 2 bytes @ 0x11
  1012  0031                     	ds	1
  1013  0032                     ??_UART_INIT:
  1014  0032                     sprintf@ap:	
  1015                           ; 1 bytes @ 0x12
  1016                           
  1017  0032                     ___flmul@a:	
  1018                           ; 1 bytes @ 0x12
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x12
  1022  0032                     	ds	1
  1023  0033                     sprintf@flag:
  1024  0033                     utoa@c:	
  1025                           ; 1 bytes @ 0x13
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x13
  1029  0033                     	ds	1
  1030  0034                     sprintf@sp:
  1031  0034                     utoa@buf:	
  1032                           ; 1 bytes @ 0x14
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x14
  1036  0034                     	ds	1
  1037  0035                     ?_itoa:
  1038  0035                     sprintf@val:	
  1039                           ; 1 bytes @ 0x15
  1040                           
  1041  0035                     itoa@val:	
  1042                           ; 2 bytes @ 0x15
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x15
  1046  0035                     	ds	1
  1047  0036                     ??___flmul:
  1048                           
  1049                           ; 1 bytes @ 0x16
  1050  0036                     	ds	1
  1051  0037                     sprintf@prec:
  1052  0037                     itoa@base:	
  1053                           ; 1 bytes @ 0x17
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x17
  1057  0037                     	ds	1
  1058  0038                     sprintf@c:
  1059                           
  1060                           ; 1 bytes @ 0x18
  1061  0038                     	ds	1
  1062  0039                     ??_itoa:
  1063                           
  1064                           ; 1 bytes @ 0x19
  1065  0039                     	ds	2
  1066  003B                     ___flmul@sign:
  1067  003B                     itoa@buf:	
  1068                           ; 1 bytes @ 0x1B
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x1B
  1072  003B                     	ds	1
  1073  003C                     ___flmul@aexp:
  1074                           
  1075                           ; 1 bytes @ 0x1C
  1076  003C                     	ds	1
  1077  003D                     ___flmul@grs:
  1078                           
  1079                           ; 4 bytes @ 0x1D
  1080  003D                     	ds	4
  1081  0041                     ___flmul@bexp:
  1082                           
  1083                           ; 1 bytes @ 0x21
  1084  0041                     	ds	1
  1085  0042                     ___flmul@prod:
  1086                           
  1087                           ; 4 bytes @ 0x22
  1088  0042                     	ds	4
  1089  0046                     ___flmul@temp:
  1090                           
  1091                           ; 2 bytes @ 0x26
  1092  0046                     	ds	2
  1093  0048                     ?___fltol:
  1094  0048                     ?___fldiv:	
  1095                           ; 4 bytes @ 0x28
  1096                           
  1097  0048                     ___fltol@f1:	
  1098                           ; 4 bytes @ 0x28
  1099                           
  1100  0048                     ___fldiv@a:	
  1101                           ; 4 bytes @ 0x28
  1102                           
  1103                           
  1104                           ; 4 bytes @ 0x28
  1105  0048                     	ds	4
  1106  004C                     ??___fltol:
  1107  004C                     ___fldiv@b:	
  1108                           ; 1 bytes @ 0x2C
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x2C
  1112  004C                     	ds	4
  1113  0050                     ??___fldiv:
  1114                           
  1115                           ; 1 bytes @ 0x30
  1116  0050                     	ds	1
  1117  0051                     ___fltol@sign1:
  1118                           
  1119                           ; 1 bytes @ 0x31
  1120  0051                     	ds	1
  1121  0052                     ___fltol@exp1:
  1122                           
  1123                           ; 1 bytes @ 0x32
  1124  0052                     	ds	3
  1125  0055                     ___fldiv@rem:
  1126                           
  1127                           ; 4 bytes @ 0x35
  1128  0055                     	ds	4
  1129  0059                     ___fldiv@sign:
  1130                           
  1131                           ; 1 bytes @ 0x39
  1132  0059                     	ds	1
  1133  005A                     ___fldiv@new_exp:
  1134                           
  1135                           ; 2 bytes @ 0x3A
  1136  005A                     	ds	2
  1137  005C                     ___fldiv@grs:
  1138                           
  1139                           ; 4 bytes @ 0x3C
  1140  005C                     	ds	4
  1141  0060                     ___fldiv@bexp:
  1142                           
  1143                           ; 1 bytes @ 0x40
  1144  0060                     	ds	1
  1145  0061                     ___fldiv@aexp:
  1146                           
  1147                           ; 1 bytes @ 0x41
  1148  0061                     	ds	1
  1149                           
  1150                           	psect	maintext
  1151  07B0                     __pmaintext:	
  1152 ;;
  1153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1154 ;;
  1155 ;; *************** function _main *****************
  1156 ;; Defined at:
  1157 ;;		line 46 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : B00/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels required when called:    6
  1177 ;; This function calls:
  1178 ;;		_ADC
  1179 ;;		_Counter
  1180 ;;		_SerialCom
  1181 ;;		_UART_INIT
  1182 ;;		_inicializacion
  1183 ;; This function is called by:
  1184 ;;		Startup code after reset
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _main
  1190  07B0                     _main:
  1191  07B0                     l3512:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1194                           
  1195  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1196  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1197  07B2  080F               	movf	15,w	;volatile
  1198  07B3  398F               	andlw	-113
  1199  07B4  3860               	iorlw	96
  1200  07B5  008F               	movwf	15	;volatile
  1201  07B6                     l3514:
  1202  07B6  118F               	bcf	15,3	;volatile
  1203  07B7                     l3516:
  1204  07B7  110F               	bcf	15,2	;volatile
  1205  07B8                     l3518:
  1206  07B8  108F               	bcf	15,1	;volatile
  1207  07B9                     l3520:
  1208  07B9  140F               	bsf	15,0	;volatile
  1209  07BA                     l3522:
  1210  07BA  3003               	movlw	3
  1211  07BB  1683               	bsf	3,5	;RP0=1, select bank3
  1212  07BC  1703               	bsf	3,6	;RP1=1, select bank3
  1213  07BD  0088               	movwf	8	;volatile
  1214  07BE                     l3524:
  1215  07BE  0189               	clrf	9	;volatile
  1216  07BF                     l3526:
  1217  07BF  3003               	movlw	3
  1218  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  1219  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  1220  07C2  0085               	movwf	5	;volatile
  1221  07C3                     l3528:
  1222  07C3  0186               	clrf	6	;volatile
  1223  07C4                     l3530:
  1224  07C4  0188               	clrf	8	;volatile
  1225  07C5                     l3532:
  1226  07C5  3080               	movlw	128
  1227  07C6  0087               	movwf	7	;volatile
  1228  07C7                     l3534:
  1229  07C7  0189               	clrf	9	;volatile
  1230  07C8                     l3536:
  1231  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1232  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1233  07CA  0185               	clrf	5	;volatile
  1234  07CB                     l3538:
  1235  07CB  0186               	clrf	6	;volatile
  1236  07CC                     l3540:
  1237  07CC  0187               	clrf	7	;volatile
  1238  07CD                     l3542:
  1239  07CD  0188               	clrf	8	;volatile
  1240  07CE                     l3544:
  1241  07CE  0189               	clrf	9	;volatile
  1242  07CF                     l3546:
  1243  07CF  160A  118A  27BE  120A  118A  	fcall	_inicializacion
  1244  07D4                     l3548:
  1245  07D4  120A  118A  2028  120A  118A  	fcall	_ADC
  1246  07D9                     l3550:
  1247  07D9  3000               	movlw	0
  1248  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1249  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1250  07DC  00B1               	movwf	UART_INIT@baudrate+3
  1251  07DD  3000               	movlw	0
  1252  07DE  00B0               	movwf	UART_INIT@baudrate+2
  1253  07DF  3025               	movlw	37
  1254  07E0  00AF               	movwf	UART_INIT@baudrate+1
  1255  07E1  3080               	movlw	128
  1256  07E2  00AE               	movwf	UART_INIT@baudrate
  1257  07E3  120A  158A  2265  120A  118A  	fcall	_UART_INIT
  1258  07E8                     l3552:
  1259  07E8  160A  118A  27A1  120A  118A  	fcall	_SerialCom
  1260  07ED                     l3554:
  1261  07ED  120A  158A  206E  120A  118A  	fcall	_Counter
  1262  07F2  2FCF               	goto	l3546
  1263  07F3  120A  118A  280C   	ljmp	start
  1264  07F6                     __end_of_main:
  1265                           
  1266                           	psect	text1
  1267  17BE                     __ptext1:	
  1268 ;; *************** function _inicializacion *****************
  1269 ;; Defined at:
  1270 ;;		line 55 in file "LCD.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    4
  1291 ;; This function calls:
  1292 ;;		_lcd_cmd
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _inicializacion
  1300  17BE                     _inicializacion:
  1301  17BE                     l3414:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _inicializacion: [wreg+status,2+status,0+pclath+cstack]
  1304                           
  1305                           
  1306                           ;LCD.c: 56:     lcd_cmd(0x38);
  1307  17BE  3038               	movlw	56
  1308  17BF  160A  118A  2762  160A  118A  	fcall	_lcd_cmd
  1309                           
  1310                           ;LCD.c: 57:     lcd_cmd(0x0C);
  1311  17C4  300C               	movlw	12
  1312  17C5  160A  118A  2762  160A  118A  	fcall	_lcd_cmd
  1313                           
  1314                           ;LCD.c: 58:     lcd_cmd(0x01);
  1315  17CA  3001               	movlw	1
  1316  17CB  160A  118A  2762  160A  118A  	fcall	_lcd_cmd
  1317                           
  1318                           ;LCD.c: 59:     lcd_cmd(0x06);
  1319  17D0  3006               	movlw	6
  1320  17D1  160A  118A  2762  160A  118A  	fcall	_lcd_cmd
  1321                           
  1322                           ;LCD.c: 60:     lcd_cmd(0x80);
  1323  17D6  3080               	movlw	128
  1324  17D7  160A  118A  2762  160A  118A  	fcall	_lcd_cmd
  1325  17DC                     l81:
  1326  17DC  0008               	return
  1327  17DD                     __end_of_inicializacion:
  1328                           
  1329                           	psect	text2
  1330  0A65                     __ptext2:	
  1331 ;; *************** function _UART_INIT *****************
  1332 ;; Defined at:
  1333 ;;		line 5 in file "eusart.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  baudrate        4   14[BANK0 ] const long 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       4       0       0       0
  1348 ;;      Locals:         0       0       0       0       0
  1349 ;;      Temps:          0      12       0       0       0
  1350 ;;      Totals:         0      16       0       0       0
  1351 ;;Total ram usage:       16 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    3
  1354 ;; This function calls:
  1355 ;;		___aldiv
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _UART_INIT
  1363  0A65                     _UART_INIT:
  1364  0A65                     l2802:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1367                           
  1368                           
  1369                           ;eusart.c: 6:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1370  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0A67  082E               	movf	UART_INIT@baudrate,w
  1373  0A68  00B2               	movwf	??_UART_INIT
  1374  0A69  082F               	movf	UART_INIT@baudrate+1,w
  1375  0A6A  00B3               	movwf	??_UART_INIT+1
  1376  0A6B  0830               	movf	UART_INIT@baudrate+2,w
  1377  0A6C  00B4               	movwf	??_UART_INIT+2
  1378  0A6D  0831               	movf	UART_INIT@baudrate+3,w
  1379  0A6E  00B5               	movwf	??_UART_INIT+3
  1380  0A6F  3004               	movlw	4
  1381  0A70                     u3375:
  1382  0A70  1003               	clrc
  1383  0A71  0DB2               	rlf	??_UART_INIT,f
  1384  0A72  0DB3               	rlf	??_UART_INIT+1,f
  1385  0A73  0DB4               	rlf	??_UART_INIT+2,f
  1386  0A74  0DB5               	rlf	??_UART_INIT+3,f
  1387  0A75                     u3370:
  1388  0A75  3EFF               	addlw	-1
  1389  0A76  1D03               	skipz
  1390  0A77  2A70               	goto	u3375
  1391  0A78  0835               	movf	??_UART_INIT+3,w
  1392  0A79  00A3               	movwf	___aldiv@divisor+3
  1393  0A7A  0834               	movf	??_UART_INIT+2,w
  1394  0A7B  00A2               	movwf	___aldiv@divisor+2
  1395  0A7C  0833               	movf	??_UART_INIT+1,w
  1396  0A7D  00A1               	movwf	___aldiv@divisor+1
  1397  0A7E  0832               	movf	??_UART_INIT,w
  1398  0A7F  00A0               	movwf	___aldiv@divisor
  1399  0A80  082E               	movf	UART_INIT@baudrate,w
  1400  0A81  00B6               	movwf	??_UART_INIT+4
  1401  0A82  082F               	movf	UART_INIT@baudrate+1,w
  1402  0A83  00B7               	movwf	??_UART_INIT+5
  1403  0A84  0830               	movf	UART_INIT@baudrate+2,w
  1404  0A85  00B8               	movwf	??_UART_INIT+6
  1405  0A86  0831               	movf	UART_INIT@baudrate+3,w
  1406  0A87  00B9               	movwf	??_UART_INIT+7
  1407  0A88  3004               	movlw	4
  1408  0A89                     u3385:
  1409  0A89  1003               	clrc
  1410  0A8A  0DB6               	rlf	??_UART_INIT+4,f
  1411  0A8B  0DB7               	rlf	??_UART_INIT+5,f
  1412  0A8C  0DB8               	rlf	??_UART_INIT+6,f
  1413  0A8D  0DB9               	rlf	??_UART_INIT+7,f
  1414  0A8E                     u3380:
  1415  0A8E  3EFF               	addlw	-1
  1416  0A8F  1D03               	skipz
  1417  0A90  2A89               	goto	u3385
  1418  0A91  3000               	movlw	0
  1419  0A92  00BA               	movwf	??_UART_INIT+8
  1420  0A93  3012               	movlw	18
  1421  0A94  00BB               	movwf	??_UART_INIT+9
  1422  0A95  307A               	movlw	122
  1423  0A96  00BC               	movwf	??_UART_INIT+10
  1424  0A97  3000               	movlw	0
  1425  0A98  00BD               	movwf	??_UART_INIT+11
  1426  0A99  0836               	movf	??_UART_INIT+4,w
  1427  0A9A  02BA               	subwf	??_UART_INIT+8,f
  1428  0A9B  0837               	movf	??_UART_INIT+5,w
  1429  0A9C  1C03               	skipc
  1430  0A9D  0F37               	incfsz	??_UART_INIT+5,w
  1431  0A9E  2AA0               	goto	u3391
  1432  0A9F  2AA1               	goto	u3392
  1433  0AA0                     u3391:
  1434  0AA0  02BB               	subwf	??_UART_INIT+9,f
  1435  0AA1                     u3392:
  1436  0AA1  0838               	movf	??_UART_INIT+6,w
  1437  0AA2  1C03               	skipc
  1438  0AA3  0F38               	incfsz	??_UART_INIT+6,w
  1439  0AA4  2AA6               	goto	u3393
  1440  0AA5  2AA7               	goto	u3394
  1441  0AA6                     u3393:
  1442  0AA6  02BC               	subwf	??_UART_INIT+10,f
  1443  0AA7                     u3394:
  1444  0AA7  0839               	movf	??_UART_INIT+7,w
  1445  0AA8  1C03               	skipc
  1446  0AA9  0F39               	incfsz	??_UART_INIT+7,w
  1447  0AAA  2AAC               	goto	u3395
  1448  0AAB  2AAD               	goto	u3396
  1449  0AAC                     u3395:
  1450  0AAC  02BD               	subwf	??_UART_INIT+11,f
  1451  0AAD                     u3396:
  1452  0AAD  083D               	movf	??_UART_INIT+11,w
  1453  0AAE  00A7               	movwf	___aldiv@dividend+3
  1454  0AAF  083C               	movf	??_UART_INIT+10,w
  1455  0AB0  00A6               	movwf	___aldiv@dividend+2
  1456  0AB1  083B               	movf	??_UART_INIT+9,w
  1457  0AB2  00A5               	movwf	___aldiv@dividend+1
  1458  0AB3  083A               	movf	??_UART_INIT+8,w
  1459  0AB4  00A4               	movwf	___aldiv@dividend
  1460  0AB5  120A  158A  2421  120A  158A  	fcall	___aldiv
  1461  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0ABC  0820               	movf	?___aldiv,w
  1464  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
  1466  0ABF  0099               	movwf	25	;volatile
  1467  0AC0                     l2804:
  1468                           
  1469                           ;eusart.c: 7:      TXSTAbits.BRGH = 1;
  1470  0AC0  1518               	bsf	24,2	;volatile
  1471  0AC1                     l2806:
  1472                           
  1473                           ;eusart.c: 8:     TXSTAbits.TXEN = 1;
  1474  0AC1  1698               	bsf	24,5	;volatile
  1475  0AC2                     l2808:
  1476                           
  1477                           ;eusart.c: 9:     TXSTAbits.SYNC = 0;
  1478  0AC2  1218               	bcf	24,4	;volatile
  1479  0AC3                     l2810:
  1480                           
  1481                           ;eusart.c: 10:     TXSTAbits.TX9 = 0;
  1482  0AC3  1318               	bcf	24,6	;volatile
  1483  0AC4                     l2812:
  1484                           
  1485                           ;eusart.c: 12:     RCSTAbits.CREN = 1;
  1486  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0AC6  1618               	bsf	24,4	;volatile
  1489  0AC7                     l2814:
  1490                           
  1491                           ;eusart.c: 13:     RCSTAbits.SPEN = 1;
  1492  0AC7  1798               	bsf	24,7	;volatile
  1493  0AC8                     l2816:
  1494                           
  1495                           ;eusart.c: 14:     RCSTAbits.RX9 = 0;
  1496  0AC8  1318               	bcf	24,6	;volatile
  1497  0AC9                     l217:
  1498  0AC9  0008               	return
  1499  0ACA                     __end_of_UART_INIT:
  1500                           
  1501                           	psect	text3
  1502  0C21                     __ptext3:	
  1503 ;; *************** function ___aldiv *****************
  1504 ;; Defined at:
  1505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  divisor         4    0[BANK0 ] long 
  1508 ;;  dividend        4    4[BANK0 ] long 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  quotient        4   10[BANK0 ] long 
  1511 ;;  sign            1    9[BANK0 ] unsigned char 
  1512 ;;  counter         1    8[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  4    0[BANK0 ] long 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       8       0       0       0
  1523 ;;      Locals:         0       6       0       0       0
  1524 ;;      Temps:          1       0       0       0       0
  1525 ;;      Totals:         1      14       0       0       0
  1526 ;;Total ram usage:       15 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_UART_INIT
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function ___aldiv
  1538  0C21                     ___aldiv:
  1539  0C21                     l2220:	
  1540                           ;incstack = 0
  1541                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1542                           
  1543  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0C23  01A9               	clrf	___aldiv@sign
  1546  0C24                     l2222:
  1547  0C24  1FA3               	btfss	___aldiv@divisor+3,7
  1548  0C25  2C27               	goto	u2161
  1549  0C26  2C28               	goto	u2160
  1550  0C27                     u2161:
  1551  0C27  2C35               	goto	l417
  1552  0C28                     u2160:
  1553  0C28                     l2224:
  1554  0C28  09A0               	comf	___aldiv@divisor,f
  1555  0C29  09A1               	comf	___aldiv@divisor+1,f
  1556  0C2A  09A2               	comf	___aldiv@divisor+2,f
  1557  0C2B  09A3               	comf	___aldiv@divisor+3,f
  1558  0C2C  0AA0               	incf	___aldiv@divisor,f
  1559  0C2D  1903               	skipnz
  1560  0C2E  0AA1               	incf	___aldiv@divisor+1,f
  1561  0C2F  1903               	skipnz
  1562  0C30  0AA2               	incf	___aldiv@divisor+2,f
  1563  0C31  1903               	skipnz
  1564  0C32  0AA3               	incf	___aldiv@divisor+3,f
  1565  0C33  01A9               	clrf	___aldiv@sign
  1566  0C34  0AA9               	incf	___aldiv@sign,f
  1567  0C35                     l417:
  1568  0C35  1FA7               	btfss	___aldiv@dividend+3,7
  1569  0C36  2C38               	goto	u2171
  1570  0C37  2C39               	goto	u2170
  1571  0C38                     u2171:
  1572  0C38  2C48               	goto	l2230
  1573  0C39                     u2170:
  1574  0C39                     l2226:
  1575  0C39  09A4               	comf	___aldiv@dividend,f
  1576  0C3A  09A5               	comf	___aldiv@dividend+1,f
  1577  0C3B  09A6               	comf	___aldiv@dividend+2,f
  1578  0C3C  09A7               	comf	___aldiv@dividend+3,f
  1579  0C3D  0AA4               	incf	___aldiv@dividend,f
  1580  0C3E  1903               	skipnz
  1581  0C3F  0AA5               	incf	___aldiv@dividend+1,f
  1582  0C40  1903               	skipnz
  1583  0C41  0AA6               	incf	___aldiv@dividend+2,f
  1584  0C42  1903               	skipnz
  1585  0C43  0AA7               	incf	___aldiv@dividend+3,f
  1586  0C44                     l2228:
  1587  0C44  3001               	movlw	1
  1588  0C45  00F4               	movwf	??___aldiv
  1589  0C46  0874               	movf	??___aldiv,w
  1590  0C47  06A9               	xorwf	___aldiv@sign,f
  1591  0C48                     l2230:
  1592  0C48  3000               	movlw	0
  1593  0C49  00AD               	movwf	___aldiv@quotient+3
  1594  0C4A  3000               	movlw	0
  1595  0C4B  00AC               	movwf	___aldiv@quotient+2
  1596  0C4C  3000               	movlw	0
  1597  0C4D  00AB               	movwf	___aldiv@quotient+1
  1598  0C4E  3000               	movlw	0
  1599  0C4F  00AA               	movwf	___aldiv@quotient
  1600  0C50                     l2232:
  1601  0C50  0823               	movf	___aldiv@divisor+3,w
  1602  0C51  0422               	iorwf	___aldiv@divisor+2,w
  1603  0C52  0421               	iorwf	___aldiv@divisor+1,w
  1604  0C53  0420               	iorwf	___aldiv@divisor,w
  1605  0C54  1903               	skipnz
  1606  0C55  2C57               	goto	u2181
  1607  0C56  2C58               	goto	u2180
  1608  0C57                     u2181:
  1609  0C57  2CA5               	goto	l2252
  1610  0C58                     u2180:
  1611  0C58                     l2234:
  1612  0C58  01A8               	clrf	___aldiv@counter
  1613  0C59  0AA8               	incf	___aldiv@counter,f
  1614  0C5A  2C68               	goto	l2238
  1615  0C5B                     l2236:
  1616  0C5B  3001               	movlw	1
  1617  0C5C  00F4               	movwf	??___aldiv
  1618  0C5D                     u2195:
  1619  0C5D  1003               	clrc
  1620  0C5E  0DA0               	rlf	___aldiv@divisor,f
  1621  0C5F  0DA1               	rlf	___aldiv@divisor+1,f
  1622  0C60  0DA2               	rlf	___aldiv@divisor+2,f
  1623  0C61  0DA3               	rlf	___aldiv@divisor+3,f
  1624  0C62  0BF4               	decfsz	??___aldiv,f
  1625  0C63  2C5D               	goto	u2195
  1626  0C64  3001               	movlw	1
  1627  0C65  00F4               	movwf	??___aldiv
  1628  0C66  0874               	movf	??___aldiv,w
  1629  0C67  07A8               	addwf	___aldiv@counter,f
  1630  0C68                     l2238:
  1631  0C68  1FA3               	btfss	___aldiv@divisor+3,7
  1632  0C69  2C6B               	goto	u2201
  1633  0C6A  2C6C               	goto	u2200
  1634  0C6B                     u2201:
  1635  0C6B  2C5B               	goto	l2236
  1636  0C6C                     u2200:
  1637  0C6C                     l2240:
  1638  0C6C  3001               	movlw	1
  1639  0C6D  00F4               	movwf	??___aldiv
  1640  0C6E                     u2215:
  1641  0C6E  1003               	clrc
  1642  0C6F  0DAA               	rlf	___aldiv@quotient,f
  1643  0C70  0DAB               	rlf	___aldiv@quotient+1,f
  1644  0C71  0DAC               	rlf	___aldiv@quotient+2,f
  1645  0C72  0DAD               	rlf	___aldiv@quotient+3,f
  1646  0C73  0BF4               	decfsz	??___aldiv,f
  1647  0C74  2C6E               	goto	u2215
  1648  0C75                     l2242:
  1649  0C75  0823               	movf	___aldiv@divisor+3,w
  1650  0C76  0227               	subwf	___aldiv@dividend+3,w
  1651  0C77  1D03               	skipz
  1652  0C78  2C83               	goto	u2225
  1653  0C79  0822               	movf	___aldiv@divisor+2,w
  1654  0C7A  0226               	subwf	___aldiv@dividend+2,w
  1655  0C7B  1D03               	skipz
  1656  0C7C  2C83               	goto	u2225
  1657  0C7D  0821               	movf	___aldiv@divisor+1,w
  1658  0C7E  0225               	subwf	___aldiv@dividend+1,w
  1659  0C7F  1D03               	skipz
  1660  0C80  2C83               	goto	u2225
  1661  0C81  0820               	movf	___aldiv@divisor,w
  1662  0C82  0224               	subwf	___aldiv@dividend,w
  1663  0C83                     u2225:
  1664  0C83  1C03               	skipc
  1665  0C84  2C86               	goto	u2221
  1666  0C85  2C87               	goto	u2220
  1667  0C86                     u2221:
  1668  0C86  2C96               	goto	l2248
  1669  0C87                     u2220:
  1670  0C87                     l2244:
  1671  0C87  0820               	movf	___aldiv@divisor,w
  1672  0C88  02A4               	subwf	___aldiv@dividend,f
  1673  0C89  0821               	movf	___aldiv@divisor+1,w
  1674  0C8A  1C03               	skipc
  1675  0C8B  0F21               	incfsz	___aldiv@divisor+1,w
  1676  0C8C  02A5               	subwf	___aldiv@dividend+1,f
  1677  0C8D  0822               	movf	___aldiv@divisor+2,w
  1678  0C8E  1C03               	skipc
  1679  0C8F  0F22               	incfsz	___aldiv@divisor+2,w
  1680  0C90  02A6               	subwf	___aldiv@dividend+2,f
  1681  0C91  0823               	movf	___aldiv@divisor+3,w
  1682  0C92  1C03               	skipc
  1683  0C93  0F23               	incfsz	___aldiv@divisor+3,w
  1684  0C94  02A7               	subwf	___aldiv@dividend+3,f
  1685  0C95                     l2246:
  1686  0C95  142A               	bsf	___aldiv@quotient,0
  1687  0C96                     l2248:
  1688  0C96  3001               	movlw	1
  1689  0C97                     u2235:
  1690  0C97  1003               	clrc
  1691  0C98  0CA3               	rrf	___aldiv@divisor+3,f
  1692  0C99  0CA2               	rrf	___aldiv@divisor+2,f
  1693  0C9A  0CA1               	rrf	___aldiv@divisor+1,f
  1694  0C9B  0CA0               	rrf	___aldiv@divisor,f
  1695  0C9C  3EFF               	addlw	-1
  1696  0C9D  1D03               	skipz
  1697  0C9E  2C97               	goto	u2235
  1698  0C9F                     l2250:
  1699  0C9F  3001               	movlw	1
  1700  0CA0  02A8               	subwf	___aldiv@counter,f
  1701  0CA1  1D03               	btfss	3,2
  1702  0CA2  2CA4               	goto	u2241
  1703  0CA3  2CA5               	goto	u2240
  1704  0CA4                     u2241:
  1705  0CA4  2C6C               	goto	l2240
  1706  0CA5                     u2240:
  1707  0CA5                     l2252:
  1708  0CA5  0829               	movf	___aldiv@sign,w
  1709  0CA6  1903               	btfsc	3,2
  1710  0CA7  2CA9               	goto	u2251
  1711  0CA8  2CAA               	goto	u2250
  1712  0CA9                     u2251:
  1713  0CA9  2CB5               	goto	l2256
  1714  0CAA                     u2250:
  1715  0CAA                     l2254:
  1716  0CAA  09AA               	comf	___aldiv@quotient,f
  1717  0CAB  09AB               	comf	___aldiv@quotient+1,f
  1718  0CAC  09AC               	comf	___aldiv@quotient+2,f
  1719  0CAD  09AD               	comf	___aldiv@quotient+3,f
  1720  0CAE  0AAA               	incf	___aldiv@quotient,f
  1721  0CAF  1903               	skipnz
  1722  0CB0  0AAB               	incf	___aldiv@quotient+1,f
  1723  0CB1  1903               	skipnz
  1724  0CB2  0AAC               	incf	___aldiv@quotient+2,f
  1725  0CB3  1903               	skipnz
  1726  0CB4  0AAD               	incf	___aldiv@quotient+3,f
  1727  0CB5                     l2256:
  1728  0CB5  082D               	movf	___aldiv@quotient+3,w
  1729  0CB6  00A3               	movwf	?___aldiv+3
  1730  0CB7  082C               	movf	___aldiv@quotient+2,w
  1731  0CB8  00A2               	movwf	?___aldiv+2
  1732  0CB9  082B               	movf	___aldiv@quotient+1,w
  1733  0CBA  00A1               	movwf	?___aldiv+1
  1734  0CBB  082A               	movf	___aldiv@quotient,w
  1735  0CBC  00A0               	movwf	?___aldiv
  1736  0CBD                     l427:
  1737  0CBD  0008               	return
  1738  0CBE                     __end_of___aldiv:
  1739                           
  1740                           	psect	text4
  1741  086E                     __ptext4:	
  1742 ;; *************** function _Counter *****************
  1743 ;; Defined at:
  1744 ;;		line 74 in file "adc.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    2
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _Counter
  1774  086E                     _Counter:
  1775  086E                     l1796:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _Counter: [wreg+status,2+status,0]
  1778                           
  1779                           
  1780                           ;adc.c: 75:     if (Lectura == '+') {
  1781  086E  302B               	movlw	43
  1782  086F  0676               	xorwf	_Lectura,w
  1783  0870  0477               	iorwf	_Lectura+1,w
  1784  0871  1D03               	btfss	3,2
  1785  0872  2874               	goto	u1671
  1786  0873  2875               	goto	u1670
  1787  0874                     u1671:
  1788  0874  287E               	goto	l1802
  1789  0875                     u1670:
  1790  0875                     l1798:
  1791                           
  1792                           ;adc.c: 76:         Contador = Contador + 1;
  1793  0875  0878               	movf	_Contador,w
  1794  0876  3E01               	addlw	1
  1795  0877  00F8               	movwf	_Contador
  1796  0878  0879               	movf	_Contador+1,w
  1797  0879  1803               	skipnc
  1798  087A  3E01               	addlw	1
  1799  087B  3E00               	addlw	0
  1800  087C  00F9               	movwf	_Contador+1
  1801  087D  2892               	goto	l180
  1802  087E                     l1802:
  1803                           
  1804                           ;adc.c: 80:     if (Lectura == '-') {
  1805  087E  302D               	movlw	45
  1806  087F  0676               	xorwf	_Lectura,w
  1807  0880  0477               	iorwf	_Lectura+1,w
  1808  0881  1D03               	btfss	3,2
  1809  0882  2884               	goto	u1681
  1810  0883  2885               	goto	u1680
  1811  0884                     u1681:
  1812  0884  288E               	goto	l1808
  1813  0885                     u1680:
  1814  0885                     l1804:
  1815                           
  1816                           ;adc.c: 81:         Contador = Contador - 1;
  1817  0885  0878               	movf	_Contador,w
  1818  0886  3EFF               	addlw	255
  1819  0887  00F8               	movwf	_Contador
  1820  0888  0879               	movf	_Contador+1,w
  1821  0889  1803               	skipnc
  1822  088A  3E01               	addlw	1
  1823  088B  3EFF               	addlw	255
  1824  088C  00F9               	movwf	_Contador+1
  1825  088D  2892               	goto	l180
  1826  088E                     l1808:
  1827                           
  1828                           ;adc.c: 84:     Lectura = 'G';
  1829  088E  3047               	movlw	71
  1830  088F  00F6               	movwf	_Lectura
  1831  0890  3000               	movlw	0
  1832  0891  00F7               	movwf	_Lectura+1
  1833  0892                     l180:
  1834  0892  0008               	return
  1835  0893                     __end_of_Counter:
  1836                           
  1837                           	psect	text5
  1838  0028                     __ptext5:	
  1839 ;; *************** function _ADC *****************
  1840 ;; Defined at:
  1841 ;;		line 100 in file "adc.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          0       0       4       0       0
  1858 ;;      Totals:         0       0       4       0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    5
  1862 ;; This function calls:
  1863 ;;		_SerialCom
  1864 ;;		___awdiv
  1865 ;;		___awmod
  1866 ;;		___fldiv
  1867 ;;		___flmul
  1868 ;;		___fltol
  1869 ;;		___xxtofl
  1870 ;;		_itoa
  1871 ;;		_lcd_cmd
  1872 ;;		_lcd_msg
  1873 ;;		_sprintf
  1874 ;;		_strcat
  1875 ;;		_strcpy
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _ADC
  1883  0028                     _ADC:
  1884  0028                     l3416:	
  1885                           ;incstack = 0
  1886                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           
  1888                           
  1889                           ;adc.c: 101:     SerialCom();
  1890  0028  160A  118A  27A1  120A  118A  	fcall	_SerialCom
  1891  002D                     l3418:
  1892                           
  1893                           ;adc.c: 104:         ADCON0bits.ADCS = 01;
  1894  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1895  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1896  002F  081F               	movf	31,w	;volatile
  1897  0030  393F               	andlw	-193
  1898  0031  3840               	iorlw	64
  1899  0032  009F               	movwf	31	;volatile
  1900  0033                     l3420:
  1901                           
  1902                           ;adc.c: 105:         ADCON0bits.ADON = 1;
  1903  0033  141F               	bsf	31,0	;volatile
  1904  0034                     l3422:
  1905                           
  1906                           ;adc.c: 106:         ADCON1bits.ADFM = 0;
  1907  0034  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0035  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0036  139F               	bcf	31,7	;volatile
  1910  0037                     l3424:
  1911                           
  1912                           ;adc.c: 107:         ADCON1bits.VCFG0 = 0;
  1913  0037  121F               	bcf	31,4	;volatile
  1914  0038                     l3426:
  1915                           
  1916                           ;adc.c: 108:         ADCON1bits.VCFG1 = 0;
  1917  0038  129F               	bcf	31,5	;volatile
  1918  0039                     l3428:
  1919                           
  1920                           ;adc.c: 110:         lcd_msg("S1:    S2:    S3:");
  1921  0039  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1922  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1923  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1924  003C  00A1               	movwf	lcd_msg@c
  1925  003D  3080               	movlw	128
  1926  003E  00A2               	movwf	lcd_msg@c+1
  1927  003F  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  1928  0044                     l3430:
  1929                           
  1930                           ;adc.c: 114:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1931  0044  300D               	movlw	13
  1932  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0047  00E3               	movwf	(??_ADC^(0+128)+1)
  1935  0048  30FB               	movlw	251
  1936  0049  00E2               	movwf	??_ADC^(0+128)
  1937  004A                     u4477:
  1938  004A  0BE2               	decfsz	??_ADC^(0+128),f
  1939  004B  284A               	goto	u4477
  1940  004C  0BE3               	decfsz	(??_ADC^(0+128)+1),f
  1941  004D  284A               	goto	u4477
  1942  004E                     l3432:
  1943                           
  1944                           ;adc.c: 115:             ADCON0bits.CHS = 0000;
  1945  004E  30C3               	movlw	-61
  1946  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0051  059F               	andwf	31,f	;volatile
  1949  0052                     l3434:
  1950                           
  1951                           ;adc.c: 116:             ADCON0bits.ADON = 1;
  1952  0052  141F               	bsf	31,0	;volatile
  1953  0053                     l3436:
  1954                           
  1955                           ;adc.c: 117:             ADCON0bits.GO = 1;
  1956  0053  149F               	bsf	31,1	;volatile
  1957  0054                     l192:	
  1958                           ;adc.c: 118:             while (ADCON0bits.GO);
  1959                           
  1960  0054  189F               	btfsc	31,1	;volatile
  1961  0055  2857               	goto	u4451
  1962  0056  2858               	goto	u4450
  1963  0057                     u4451:
  1964  0057  2854               	goto	l192
  1965  0058                     u4450:
  1966  0058                     l3438:
  1967                           
  1968                           ;adc.c: 120:             ADC1ADRESH = ADRESH;
  1969  0058  081E               	movf	30,w	;volatile
  1970  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1971  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1972  005B  00E2               	movwf	??_ADC^(0+128)
  1973  005C  0862               	movf	??_ADC^(0+128),w
  1974  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1975  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1976  005F  00EF               	movwf	_ADC1ADRESH
  1977  0060                     l3440:
  1978                           
  1979                           ;adc.c: 122:             ADCLA = (ADC1ADRESH * 5.0) / 255.0;
  1980  0060  3043               	movlw	67
  1981  0061  00CB               	movwf	___fldiv@a+3
  1982  0062  307F               	movlw	127
  1983  0063  00CA               	movwf	___fldiv@a+2
  1984  0064  3000               	movlw	0
  1985  0065  00C9               	movwf	___fldiv@a+1
  1986  0066  3000               	movlw	0
  1987  0067  00C8               	movwf	___fldiv@a
  1988  0068  3040               	movlw	64
  1989  0069  00B1               	movwf	___flmul@b+3
  1990  006A  30A0               	movlw	160
  1991  006B  00B0               	movwf	___flmul@b+2
  1992  006C  3000               	movlw	0
  1993  006D  00AF               	movwf	___flmul@b+1
  1994  006E  3000               	movlw	0
  1995  006F  00AE               	movwf	___flmul@b
  1996  0070  086F               	movf	_ADC1ADRESH,w
  1997  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0073  00E2               	movwf	??_ADC^(0+128)
  2000  0074  01E3               	clrf	(??_ADC^(0+128)+1)
  2001  0075  01E4               	clrf	(??_ADC^(0+128)+2)
  2002  0076  01E5               	clrf	(??_ADC^(0+128)+3)
  2003  0077  0865               	movf	(??_ADC+3)^(0+128),w
  2004  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2006  007A  00A3               	movwf	___xxtofl@val+3
  2007  007B  1683               	bsf	3,5	;RP0=1, select bank1
  2008  007C  1303               	bcf	3,6	;RP1=0, select bank1
  2009  007D  0864               	movf	(??_ADC+2)^(0+128),w
  2010  007E  1283               	bcf	3,5	;RP0=0, select bank0
  2011  007F  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0080  00A2               	movwf	___xxtofl@val+2
  2013  0081  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0082  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0083  0863               	movf	(??_ADC+1)^(0+128),w
  2016  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0086  00A1               	movwf	___xxtofl@val+1
  2019  0087  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0088  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0089  0862               	movf	??_ADC^(0+128),w
  2022  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2023  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2024  008C  00A0               	movwf	___xxtofl@val
  2025  008D  3001               	movlw	1
  2026  008E  120A  118A  26F4  120A  118A  	fcall	___xxtofl
  2027  0093  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0094  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0095  0823               	movf	?___xxtofl+3,w
  2030  0096  00B5               	movwf	___flmul@a+3
  2031  0097  0822               	movf	?___xxtofl+2,w
  2032  0098  00B4               	movwf	___flmul@a+2
  2033  0099  0821               	movf	?___xxtofl+1,w
  2034  009A  00B3               	movwf	___flmul@a+1
  2035  009B  0820               	movf	?___xxtofl,w
  2036  009C  00B2               	movwf	___flmul@a
  2037  009D  120A  118A  2393  120A  118A  	fcall	___flmul
  2038  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2039  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2040  00A4  0831               	movf	?___flmul+3,w
  2041  00A5  00CF               	movwf	___fldiv@b+3
  2042  00A6  0830               	movf	?___flmul+2,w
  2043  00A7  00CE               	movwf	___fldiv@b+2
  2044  00A8  082F               	movf	?___flmul+1,w
  2045  00A9  00CD               	movwf	___fldiv@b+1
  2046  00AA  082E               	movf	?___flmul,w
  2047  00AB  00CC               	movwf	___fldiv@b
  2048  00AC  120A  158A  2623  120A  118A  	fcall	___fldiv
  2049  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2050  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2051  00B3  084B               	movf	?___fldiv+3,w
  2052  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  2053  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  2054  00B6  00AC               	movwf	(_ADCLA+3)^(0+128)
  2055  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2056  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2057  00B9  084A               	movf	?___fldiv+2,w
  2058  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2059  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2060  00BC  00AB               	movwf	(_ADCLA+2)^(0+128)
  2061  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2062  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2063  00BF  0849               	movf	?___fldiv+1,w
  2064  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  2065  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  2066  00C2  00AA               	movwf	(_ADCLA+1)^(0+128)
  2067  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2068  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  2069  00C5  0848               	movf	?___fldiv,w
  2070  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  2071  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  2072  00C8  00A9               	movwf	_ADCLA^(0+128)
  2073  00C9                     l3442:
  2074                           
  2075                           ;adc.c: 123:             DCADC1 = (ADCLA)*100;
  2076  00C9  082C               	movf	(_ADCLA+3)^(0+128),w
  2077  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  2078  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  2079  00CC  00B5               	movwf	___flmul@a+3
  2080  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  2081  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  2082  00CF  082B               	movf	(_ADCLA+2)^(0+128),w
  2083  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2084  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2085  00D2  00B4               	movwf	___flmul@a+2
  2086  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  2087  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  2088  00D5  082A               	movf	(_ADCLA+1)^(0+128),w
  2089  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2090  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2091  00D8  00B3               	movwf	___flmul@a+1
  2092  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2093  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  2094  00DB  0829               	movf	_ADCLA^(0+128),w
  2095  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2096  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2097  00DE  00B2               	movwf	___flmul@a
  2098  00DF  3042               	movlw	66
  2099  00E0  00B1               	movwf	___flmul@b+3
  2100  00E1  30C8               	movlw	200
  2101  00E2  00B0               	movwf	___flmul@b+2
  2102  00E3  3000               	movlw	0
  2103  00E4  00AF               	movwf	___flmul@b+1
  2104  00E5  3000               	movlw	0
  2105  00E6  00AE               	movwf	___flmul@b
  2106  00E7  120A  118A  2393  120A  118A  	fcall	___flmul
  2107  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2108  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  2109  00EE  0831               	movf	?___flmul+3,w
  2110  00EF  00CB               	movwf	___fltol@f1+3
  2111  00F0  0830               	movf	?___flmul+2,w
  2112  00F1  00CA               	movwf	___fltol@f1+2
  2113  00F2  082F               	movf	?___flmul+1,w
  2114  00F3  00C9               	movwf	___fltol@f1+1
  2115  00F4  082E               	movf	?___flmul,w
  2116  00F5  00C8               	movwf	___fltol@f1
  2117  00F6  120A  158A  23A5  120A  118A  	fcall	___fltol
  2118  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2119  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2120  00FD  0849               	movf	?___fltol+1,w
  2121  00FE  00ED               	movwf	_DCADC1+1
  2122  00FF  0848               	movf	?___fltol,w
  2123  0100  00EC               	movwf	_DCADC1
  2124  0101                     l3444:
  2125                           
  2126                           ;adc.c: 125:             ADC1A = DCADC1 % 10;
  2127  0101  300A               	movlw	10
  2128  0102  00A8               	movwf	___awmod@divisor
  2129  0103  3000               	movlw	0
  2130  0104  00A9               	movwf	___awmod@divisor+1
  2131  0105  086D               	movf	_DCADC1+1,w
  2132  0106  00AB               	movwf	___awmod@dividend+1
  2133  0107  086C               	movf	_DCADC1,w
  2134  0108  00AA               	movwf	___awmod@dividend
  2135  0109  120A  158A  220A  120A  118A  	fcall	___awmod
  2136  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2137  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0110  0829               	movf	?___awmod+1,w
  2139  0111  00EB               	movwf	_ADC1A+1
  2140  0112  0828               	movf	?___awmod,w
  2141  0113  00EA               	movwf	_ADC1A
  2142  0114                     l3446:
  2143                           
  2144                           ;adc.c: 126:             itoa(ADCchar1A, ADC1A, 10);
  2145  0114  086B               	movf	_ADC1A+1,w
  2146  0115  00B6               	movwf	itoa@val+1
  2147  0116  086A               	movf	_ADC1A,w
  2148  0117  00B5               	movwf	itoa@val
  2149  0118  300A               	movlw	10
  2150  0119  00B7               	movwf	itoa@base
  2151  011A  3000               	movlw	0
  2152  011B  00B8               	movwf	itoa@base+1
  2153  011C  30DD               	movlw	(low (_ADCchar1A| 0))& (0+255)
  2154  011D  120A  158A  2093  120A  118A  	fcall	_itoa
  2155  0122                     l3448:
  2156                           
  2157                           ;adc.c: 127:             ADC1B = (DCADC1 / 10) % 10;
  2158  0122  300A               	movlw	10
  2159  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0125  00A8               	movwf	___awmod@divisor
  2162  0126  3000               	movlw	0
  2163  0127  00A9               	movwf	___awmod@divisor+1
  2164  0128  300A               	movlw	10
  2165  0129  00A0               	movwf	___awdiv@divisor
  2166  012A  3000               	movlw	0
  2167  012B  00A1               	movwf	___awdiv@divisor+1
  2168  012C  086D               	movf	_DCADC1+1,w
  2169  012D  00A3               	movwf	___awdiv@dividend+1
  2170  012E  086C               	movf	_DCADC1,w
  2171  012F  00A2               	movwf	___awdiv@dividend
  2172  0130  120A  158A  22CA  120A  118A  	fcall	___awdiv
  2173  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0137  0821               	movf	?___awdiv+1,w
  2176  0138  00AB               	movwf	___awmod@dividend+1
  2177  0139  0820               	movf	?___awdiv,w
  2178  013A  00AA               	movwf	___awmod@dividend
  2179  013B  120A  158A  220A  120A  118A  	fcall	___awmod
  2180  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0142  0829               	movf	?___awmod+1,w
  2183  0143  00E9               	movwf	_ADC1B+1
  2184  0144  0828               	movf	?___awmod,w
  2185  0145  00E8               	movwf	_ADC1B
  2186  0146                     l3450:
  2187                           
  2188                           ;adc.c: 128:             itoa(ADCchar1B, ADC1B, 10);
  2189  0146  0869               	movf	_ADC1B+1,w
  2190  0147  00B6               	movwf	itoa@val+1
  2191  0148  0868               	movf	_ADC1B,w
  2192  0149  00B5               	movwf	itoa@val
  2193  014A  300A               	movlw	10
  2194  014B  00B7               	movwf	itoa@base
  2195  014C  3000               	movlw	0
  2196  014D  00B8               	movwf	itoa@base+1
  2197  014E  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  2198  014F  120A  158A  2093  120A  118A  	fcall	_itoa
  2199  0154                     l3452:
  2200                           
  2201                           ;adc.c: 129:             ADC1C = (DCADC1 / 100) % 10;
  2202  0154  300A               	movlw	10
  2203  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0157  00A8               	movwf	___awmod@divisor
  2206  0158  3000               	movlw	0
  2207  0159  00A9               	movwf	___awmod@divisor+1
  2208  015A  3064               	movlw	100
  2209  015B  00A0               	movwf	___awdiv@divisor
  2210  015C  3000               	movlw	0
  2211  015D  00A1               	movwf	___awdiv@divisor+1
  2212  015E  086D               	movf	_DCADC1+1,w
  2213  015F  00A3               	movwf	___awdiv@dividend+1
  2214  0160  086C               	movf	_DCADC1,w
  2215  0161  00A2               	movwf	___awdiv@dividend
  2216  0162  120A  158A  22CA  120A  118A  	fcall	___awdiv
  2217  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0169  0821               	movf	?___awdiv+1,w
  2220  016A  00AB               	movwf	___awmod@dividend+1
  2221  016B  0820               	movf	?___awdiv,w
  2222  016C  00AA               	movwf	___awmod@dividend
  2223  016D  120A  158A  220A  120A  118A  	fcall	___awmod
  2224  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0174  0829               	movf	?___awmod+1,w
  2227  0175  00E7               	movwf	_ADC1C+1
  2228  0176  0828               	movf	?___awmod,w
  2229  0177  00E6               	movwf	_ADC1C
  2230  0178                     l3454:
  2231                           
  2232                           ;adc.c: 130:             itoa(ADCchar1C, ADC1C, 10);
  2233  0178  0867               	movf	_ADC1C+1,w
  2234  0179  00B6               	movwf	itoa@val+1
  2235  017A  0866               	movf	_ADC1C,w
  2236  017B  00B5               	movwf	itoa@val
  2237  017C  300A               	movlw	10
  2238  017D  00B7               	movwf	itoa@base
  2239  017E  3000               	movlw	0
  2240  017F  00B8               	movwf	itoa@base+1
  2241  0180  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  2242  0181  120A  158A  2093  120A  118A  	fcall	_itoa
  2243  0186                     l3456:
  2244                           
  2245                           ;adc.c: 132:             strcat(ADCchar1B, ADCchar1A);
  2246  0186  30DD               	movlw	(low (_ADCchar1A| 0))& (0+255)
  2247  0187  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0188  1303               	bcf	3,6	;RP1=0, select bank1
  2249  0189  00E2               	movwf	??_ADC^(0+128)
  2250  018A  0862               	movf	??_ADC^(0+128),w
  2251  018B  00F4               	movwf	strcat@from
  2252  018C  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  2253  018D  120A  158A  215D  120A  118A  	fcall	_strcat
  2254  0192                     l3458:
  2255                           
  2256                           ;adc.c: 133:             strcpy(PUNTO1A, ".");
  2257  0192  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2258  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0195  00E2               	movwf	??_ADC^(0+128)
  2261  0196  0862               	movf	??_ADC^(0+128),w
  2262  0197  00F4               	movwf	strcpy@from
  2263  0198  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  2264  0199  160A  118A  27DD  120A  118A  	fcall	_strcpy
  2265  019E                     l3460:
  2266                           
  2267                           ;adc.c: 134:             strcat(PUNTO1A, ADCchar1B);
  2268  019E  30D8               	movlw	(low (_ADCchar1B| 0))& (0+255)
  2269  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2270  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2271  01A1  00E2               	movwf	??_ADC^(0+128)
  2272  01A2  0862               	movf	??_ADC^(0+128),w
  2273  01A3  00F4               	movwf	strcat@from
  2274  01A4  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  2275  01A5  120A  158A  215D  120A  118A  	fcall	_strcat
  2276  01AA                     l3462:
  2277                           
  2278                           ;adc.c: 135:             strcat(ADCchar1C, PUNTO1A);
  2279  01AA  30CE               	movlw	(low (_PUNTO1A| 0))& (0+255)
  2280  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2281  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2282  01AD  00E2               	movwf	??_ADC^(0+128)
  2283  01AE  0862               	movf	??_ADC^(0+128),w
  2284  01AF  00F4               	movwf	strcat@from
  2285  01B0  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  2286  01B1  120A  158A  215D  120A  118A  	fcall	_strcat
  2287  01B6                     l3464:
  2288                           
  2289                           ;adc.c: 137:             _delay((unsigned long)((10)*(4000000/4000.0)));
  2290  01B6  300D               	movlw	13
  2291  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2292  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2293  01B9  00E3               	movwf	(??_ADC^(0+128)+1)
  2294  01BA  30FB               	movlw	251
  2295  01BB  00E2               	movwf	??_ADC^(0+128)
  2296  01BC                     u4487:
  2297  01BC  0BE2               	decfsz	??_ADC^(0+128),f
  2298  01BD  29BC               	goto	u4487
  2299  01BE  0BE3               	decfsz	(??_ADC^(0+128)+1),f
  2300  01BF  29BC               	goto	u4487
  2301  01C0                     l3466:
  2302                           
  2303                           ;adc.c: 138:             ADCON0bits.CHS = 0001;
  2304  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2305  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2306  01C2  081F               	movf	31,w	;volatile
  2307  01C3  39C3               	andlw	-61
  2308  01C4  3804               	iorlw	4
  2309  01C5  009F               	movwf	31	;volatile
  2310  01C6                     l3468:
  2311                           
  2312                           ;adc.c: 139:             ADCON0bits.ADON = 1;
  2313  01C6  141F               	bsf	31,0	;volatile
  2314  01C7                     l3470:
  2315                           
  2316                           ;adc.c: 140:             ADCON0bits.GO = 1;
  2317  01C7  149F               	bsf	31,1	;volatile
  2318  01C8                     l195:	
  2319                           ;adc.c: 141:             while (ADCON0bits.GO);
  2320                           
  2321  01C8  189F               	btfsc	31,1	;volatile
  2322  01C9  29CB               	goto	u4461
  2323  01CA  29CC               	goto	u4460
  2324  01CB                     u4461:
  2325  01CB  29C8               	goto	l195
  2326  01CC                     u4460:
  2327  01CC                     l3472:
  2328                           
  2329                           ;adc.c: 142:             ADC2ADRESH = ADRESH;
  2330  01CC  081E               	movf	30,w	;volatile
  2331  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2332  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2333  01CF  00E2               	movwf	??_ADC^(0+128)
  2334  01D0  0862               	movf	??_ADC^(0+128),w
  2335  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2336  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2337  01D3  00EE               	movwf	_ADC2ADRESH
  2338  01D4                     l3474:
  2339                           
  2340                           ;adc.c: 143:             ADCLB = ADC2ADRESH * 5.0 / 255.0;
  2341  01D4  3043               	movlw	67
  2342  01D5  00CB               	movwf	___fldiv@a+3
  2343  01D6  307F               	movlw	127
  2344  01D7  00CA               	movwf	___fldiv@a+2
  2345  01D8  3000               	movlw	0
  2346  01D9  00C9               	movwf	___fldiv@a+1
  2347  01DA  3000               	movlw	0
  2348  01DB  00C8               	movwf	___fldiv@a
  2349  01DC  3040               	movlw	64
  2350  01DD  00B1               	movwf	___flmul@b+3
  2351  01DE  30A0               	movlw	160
  2352  01DF  00B0               	movwf	___flmul@b+2
  2353  01E0  3000               	movlw	0
  2354  01E1  00AF               	movwf	___flmul@b+1
  2355  01E2  3000               	movlw	0
  2356  01E3  00AE               	movwf	___flmul@b
  2357  01E4  086E               	movf	_ADC2ADRESH,w
  2358  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2359  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2360  01E7  00E2               	movwf	??_ADC^(0+128)
  2361  01E8  01E3               	clrf	(??_ADC^(0+128)+1)
  2362  01E9  01E4               	clrf	(??_ADC^(0+128)+2)
  2363  01EA  01E5               	clrf	(??_ADC^(0+128)+3)
  2364  01EB  0865               	movf	(??_ADC+3)^(0+128),w
  2365  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2366  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2367  01EE  00A3               	movwf	___xxtofl@val+3
  2368  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2369  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2370  01F1  0864               	movf	(??_ADC+2)^(0+128),w
  2371  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2372  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2373  01F4  00A2               	movwf	___xxtofl@val+2
  2374  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2375  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  2376  01F7  0863               	movf	(??_ADC+1)^(0+128),w
  2377  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2378  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2379  01FA  00A1               	movwf	___xxtofl@val+1
  2380  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2381  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2382  01FD  0862               	movf	??_ADC^(0+128),w
  2383  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2384  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0200  00A0               	movwf	___xxtofl@val
  2386  0201  3001               	movlw	1
  2387  0202  120A  118A  26F4  120A  118A  	fcall	___xxtofl
  2388  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0209  0823               	movf	?___xxtofl+3,w
  2391  020A  00B5               	movwf	___flmul@a+3
  2392  020B  0822               	movf	?___xxtofl+2,w
  2393  020C  00B4               	movwf	___flmul@a+2
  2394  020D  0821               	movf	?___xxtofl+1,w
  2395  020E  00B3               	movwf	___flmul@a+1
  2396  020F  0820               	movf	?___xxtofl,w
  2397  0210  00B2               	movwf	___flmul@a
  2398  0211  120A  118A  2393  120A  118A  	fcall	___flmul
  2399  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0218  0831               	movf	?___flmul+3,w
  2402  0219  00CF               	movwf	___fldiv@b+3
  2403  021A  0830               	movf	?___flmul+2,w
  2404  021B  00CE               	movwf	___fldiv@b+2
  2405  021C  082F               	movf	?___flmul+1,w
  2406  021D  00CD               	movwf	___fldiv@b+1
  2407  021E  082E               	movf	?___flmul,w
  2408  021F  00CC               	movwf	___fldiv@b
  2409  0220  120A  158A  2623  120A  118A  	fcall	___fldiv
  2410  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0227  084B               	movf	?___fldiv+3,w
  2413  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2415  022A  00A8               	movwf	(_ADCLB+3)^(0+128)
  2416  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2417  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2418  022D  084A               	movf	?___fldiv+2,w
  2419  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2420  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0230  00A7               	movwf	(_ADCLB+2)^(0+128)
  2422  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0233  0849               	movf	?___fldiv+1,w
  2425  0234  1683               	bsf	3,5	;RP0=1, select bank1
  2426  0235  1303               	bcf	3,6	;RP1=0, select bank1
  2427  0236  00A6               	movwf	(_ADCLB+1)^(0+128)
  2428  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0239  0848               	movf	?___fldiv,w
  2431  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2432  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2433  023C  00A5               	movwf	_ADCLB^(0+128)
  2434  023D                     l3476:
  2435                           
  2436                           ;adc.c: 144:             DCADC2 = (ADCLB)*100;
  2437  023D  0828               	movf	(_ADCLB+3)^(0+128),w
  2438  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2439  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0240  00B5               	movwf	___flmul@a+3
  2441  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0243  0827               	movf	(_ADCLB+2)^(0+128),w
  2444  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0246  00B4               	movwf	___flmul@a+2
  2447  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0249  0826               	movf	(_ADCLB+1)^(0+128),w
  2450  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2451  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2452  024C  00B3               	movwf	___flmul@a+1
  2453  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2454  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2455  024F  0825               	movf	_ADCLB^(0+128),w
  2456  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0252  00B2               	movwf	___flmul@a
  2459  0253  3042               	movlw	66
  2460  0254  00B1               	movwf	___flmul@b+3
  2461  0255  30C8               	movlw	200
  2462  0256  00B0               	movwf	___flmul@b+2
  2463  0257  3000               	movlw	0
  2464  0258  00AF               	movwf	___flmul@b+1
  2465  0259  3000               	movlw	0
  2466  025A  00AE               	movwf	___flmul@b
  2467  025B  120A  118A  2393  120A  118A  	fcall	___flmul
  2468  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0262  0831               	movf	?___flmul+3,w
  2471  0263  00CB               	movwf	___fltol@f1+3
  2472  0264  0830               	movf	?___flmul+2,w
  2473  0265  00CA               	movwf	___fltol@f1+2
  2474  0266  082F               	movf	?___flmul+1,w
  2475  0267  00C9               	movwf	___fltol@f1+1
  2476  0268  082E               	movf	?___flmul,w
  2477  0269  00C8               	movwf	___fltol@f1
  2478  026A  120A  158A  23A5  120A  118A  	fcall	___fltol
  2479  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0271  0849               	movf	?___fltol+1,w
  2482  0272  00E5               	movwf	_DCADC2+1
  2483  0273  0848               	movf	?___fltol,w
  2484  0274  00E4               	movwf	_DCADC2
  2485  0275                     l3478:
  2486                           
  2487                           ;adc.c: 145:             ADC2A = DCADC2 % 10;
  2488  0275  300A               	movlw	10
  2489  0276  00A8               	movwf	___awmod@divisor
  2490  0277  3000               	movlw	0
  2491  0278  00A9               	movwf	___awmod@divisor+1
  2492  0279  0865               	movf	_DCADC2+1,w
  2493  027A  00AB               	movwf	___awmod@dividend+1
  2494  027B  0864               	movf	_DCADC2,w
  2495  027C  00AA               	movwf	___awmod@dividend
  2496  027D  120A  158A  220A  120A  118A  	fcall	___awmod
  2497  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0284  0829               	movf	?___awmod+1,w
  2500  0285  00E3               	movwf	_ADC2A+1
  2501  0286  0828               	movf	?___awmod,w
  2502  0287  00E2               	movwf	_ADC2A
  2503  0288                     l3480:
  2504                           
  2505                           ;adc.c: 146:             itoa(ADCchar2A, ADC2A, 10);
  2506  0288  0863               	movf	_ADC2A+1,w
  2507  0289  00B6               	movwf	itoa@val+1
  2508  028A  0862               	movf	_ADC2A,w
  2509  028B  00B5               	movwf	itoa@val
  2510  028C  300A               	movlw	10
  2511  028D  00B7               	movwf	itoa@base
  2512  028E  3000               	movlw	0
  2513  028F  00B8               	movwf	itoa@base+1
  2514  0290  30C9               	movlw	(low (_ADCchar2A| 0))& (0+255)
  2515  0291  120A  158A  2093  120A  118A  	fcall	_itoa
  2516  0296                     l3482:
  2517                           
  2518                           ;adc.c: 147:             ADC2B = (DCADC2 / 10) % 10;
  2519  0296  300A               	movlw	10
  2520  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0299  00A8               	movwf	___awmod@divisor
  2523  029A  3000               	movlw	0
  2524  029B  00A9               	movwf	___awmod@divisor+1
  2525  029C  300A               	movlw	10
  2526  029D  00A0               	movwf	___awdiv@divisor
  2527  029E  3000               	movlw	0
  2528  029F  00A1               	movwf	___awdiv@divisor+1
  2529  02A0  0865               	movf	_DCADC2+1,w
  2530  02A1  00A3               	movwf	___awdiv@dividend+1
  2531  02A2  0864               	movf	_DCADC2,w
  2532  02A3  00A2               	movwf	___awdiv@dividend
  2533  02A4  120A  158A  22CA  120A  118A  	fcall	___awdiv
  2534  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2535  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2536  02AB  0821               	movf	?___awdiv+1,w
  2537  02AC  00AB               	movwf	___awmod@dividend+1
  2538  02AD  0820               	movf	?___awdiv,w
  2539  02AE  00AA               	movwf	___awmod@dividend
  2540  02AF  120A  158A  220A  120A  118A  	fcall	___awmod
  2541  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2542  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2543  02B6  0829               	movf	?___awmod+1,w
  2544  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2545  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2546  02B9  00B4               	movwf	(_ADC2B+1)^(0+128)
  2547  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2548  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2549  02BC  0828               	movf	?___awmod,w
  2550  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2551  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2552  02BF  00B3               	movwf	_ADC2B^(0+128)
  2553  02C0                     l3484:
  2554                           
  2555                           ;adc.c: 148:             itoa(ADCchar2B, ADC2B, 10);
  2556  02C0  0834               	movf	(_ADC2B+1)^(0+128),w
  2557  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2558  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2559  02C3  00B6               	movwf	itoa@val+1
  2560  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2561  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2562  02C6  0833               	movf	_ADC2B^(0+128),w
  2563  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2564  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2565  02C9  00B5               	movwf	itoa@val
  2566  02CA  300A               	movlw	10
  2567  02CB  00B7               	movwf	itoa@base
  2568  02CC  3000               	movlw	0
  2569  02CD  00B8               	movwf	itoa@base+1
  2570  02CE  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2571  02CF  120A  158A  2093  120A  118A  	fcall	_itoa
  2572  02D4                     l3486:
  2573                           
  2574                           ;adc.c: 149:             ADC2C = (DCADC2 / 100) % 10;
  2575  02D4  300A               	movlw	10
  2576  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2577  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2578  02D7  00A8               	movwf	___awmod@divisor
  2579  02D8  3000               	movlw	0
  2580  02D9  00A9               	movwf	___awmod@divisor+1
  2581  02DA  3064               	movlw	100
  2582  02DB  00A0               	movwf	___awdiv@divisor
  2583  02DC  3000               	movlw	0
  2584  02DD  00A1               	movwf	___awdiv@divisor+1
  2585  02DE  0865               	movf	_DCADC2+1,w
  2586  02DF  00A3               	movwf	___awdiv@dividend+1
  2587  02E0  0864               	movf	_DCADC2,w
  2588  02E1  00A2               	movwf	___awdiv@dividend
  2589  02E2  120A  158A  22CA  120A  118A  	fcall	___awdiv
  2590  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02E9  0821               	movf	?___awdiv+1,w
  2593  02EA  00AB               	movwf	___awmod@dividend+1
  2594  02EB  0820               	movf	?___awdiv,w
  2595  02EC  00AA               	movwf	___awmod@dividend
  2596  02ED  120A  158A  220A  120A  118A  	fcall	___awmod
  2597  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2598  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2599  02F4  0829               	movf	?___awmod+1,w
  2600  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2601  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2602  02F7  00B2               	movwf	(_ADC2C+1)^(0+128)
  2603  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2604  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2605  02FA  0828               	movf	?___awmod,w
  2606  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2607  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2608  02FD  00B1               	movwf	_ADC2C^(0+128)
  2609  02FE                     l3488:
  2610                           
  2611                           ;adc.c: 150:             itoa(ADCchar2C, ADC2C, 10);
  2612  02FE  0832               	movf	(_ADC2C+1)^(0+128),w
  2613  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0301  00B6               	movwf	itoa@val+1
  2616  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2617  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2618  0304  0831               	movf	_ADC2C^(0+128),w
  2619  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0307  00B5               	movwf	itoa@val
  2622  0308  300A               	movlw	10
  2623  0309  00B7               	movwf	itoa@base
  2624  030A  3000               	movlw	0
  2625  030B  00B8               	movwf	itoa@base+1
  2626  030C  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2627  030D  120A  158A  2093  120A  118A  	fcall	_itoa
  2628  0312                     l3490:
  2629                           
  2630                           ;adc.c: 151:             strcat(ADCchar2B, ADCchar2A);
  2631  0312  30C9               	movlw	(low (_ADCchar2A| 0))& (0+255)
  2632  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2634  0315  00E2               	movwf	??_ADC^(0+128)
  2635  0316  0862               	movf	??_ADC^(0+128),w
  2636  0317  00F4               	movwf	strcat@from
  2637  0318  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2638  0319  120A  158A  215D  120A  118A  	fcall	_strcat
  2639  031E                     l3492:
  2640                           
  2641                           ;adc.c: 152:             strcpy(PUNTO2A, ".");
  2642  031E  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2643  031F  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0320  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0321  00E2               	movwf	??_ADC^(0+128)
  2646  0322  0862               	movf	??_ADC^(0+128),w
  2647  0323  00F4               	movwf	strcpy@from
  2648  0324  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2649  0325  160A  118A  27DD  120A  118A  	fcall	_strcpy
  2650  032A                     l3494:
  2651                           
  2652                           ;adc.c: 153:             strcat(PUNTO2A, ADCchar2B);
  2653  032A  30C4               	movlw	(low (_ADCchar2B| 0))& (0+255)
  2654  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2655  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2656  032D  00E2               	movwf	??_ADC^(0+128)
  2657  032E  0862               	movf	??_ADC^(0+128),w
  2658  032F  00F4               	movwf	strcat@from
  2659  0330  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2660  0331  120A  158A  215D  120A  118A  	fcall	_strcat
  2661  0336                     l3496:
  2662                           
  2663                           ;adc.c: 154:             strcat(ADCchar2C, PUNTO2A);
  2664  0336  30BA               	movlw	(low (_PUNTO2A| 0))& (0+255)
  2665  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0339  00E2               	movwf	??_ADC^(0+128)
  2668  033A  0862               	movf	??_ADC^(0+128),w
  2669  033B  00F4               	movwf	strcat@from
  2670  033C  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2671  033D  120A  158A  215D  120A  118A  	fcall	_strcat
  2672  0342                     l3498:
  2673                           
  2674                           ;adc.c: 155:             sprintf(ContadorSend, "%.1i", Contador);
  2675  0342  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2676  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0345  00E2               	movwf	??_ADC^(0+128)
  2679  0346  0862               	movf	??_ADC^(0+128),w
  2680  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0349  00AC               	movwf	sprintf@f
  2683  034A  0879               	movf	_Contador+1,w
  2684  034B  00AE               	movwf	?_sprintf+2
  2685  034C  0878               	movf	_Contador,w
  2686  034D  00AD               	movwf	?_sprintf+1
  2687  034E  30B5               	movlw	(low (_ContadorSend| 0))& (0+255)
  2688  034F  120A  158A  24BE  120A  118A  	fcall	_sprintf
  2689  0354                     l3500:
  2690                           
  2691                           ;adc.c: 156:             lcd_cmd(0xC0);
  2692  0354  30C0               	movlw	192
  2693  0355  160A  118A  2762  120A  118A  	fcall	_lcd_cmd
  2694  035A                     l3502:
  2695                           
  2696                           ;adc.c: 158:             lcd_msg(ADCchar1C);
  2697  035A  30D3               	movlw	(low (_ADCchar1C| 0))& (0+255)
  2698  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2699  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2700  035D  00A1               	movwf	lcd_msg@c
  2701  035E  3000               	movlw	0
  2702  035F  00A2               	movwf	lcd_msg@c+1
  2703  0360  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  2704  0365                     l3504:
  2705                           
  2706                           ;adc.c: 160:             lcd_msg("V ");
  2707  0365  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2708  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0368  00A1               	movwf	lcd_msg@c
  2711  0369  3080               	movlw	128
  2712  036A  00A2               	movwf	lcd_msg@c+1
  2713  036B  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  2714  0370                     l3506:
  2715                           
  2716                           ;adc.c: 162:             lcd_msg(ADCchar2C);
  2717  0370  30BF               	movlw	(low (_ADCchar2C| 0))& (0+255)
  2718  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0373  00A1               	movwf	lcd_msg@c
  2721  0374  3000               	movlw	0
  2722  0375  00A2               	movwf	lcd_msg@c+1
  2723  0376  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  2724  037B                     l3508:
  2725                           
  2726                           ;adc.c: 163:             lcd_msg("V ");
  2727  037B  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2728  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2729  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2730  037E  00A1               	movwf	lcd_msg@c
  2731  037F  3080               	movlw	128
  2732  0380  00A2               	movwf	lcd_msg@c+1
  2733  0381  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  2734  0386                     l3510:
  2735                           
  2736                           ;adc.c: 164:             lcd_msg(ContadorSend);
  2737  0386  30B5               	movlw	(low (_ContadorSend| 0))& (0+255)
  2738  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0389  00A1               	movwf	lcd_msg@c
  2741  038A  3000               	movlw	0
  2742  038B  00A2               	movwf	lcd_msg@c+1
  2743  038C  120A  158A  20B9  120A  118A  	fcall	_lcd_msg
  2744  0391  2844               	goto	l3430
  2745  0392  0008               	return
  2746  0393                     __end_of_ADC:
  2747                           
  2748                           	psect	text6
  2749  17DD                     __ptext6:	
  2750 ;; *************** function _strcpy *****************
  2751 ;; Defined at:
  2752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  to              1    wreg     PTR unsigned char 
  2755 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2756 ;;  from            1    4[COMMON] PTR const unsigned char 
  2757 ;;		 -> STR_3(2), STR_2(2), 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  to              1    1[BANK0 ] PTR unsigned char 
  2760 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2761 ;;  cp              1    0[BANK0 ] PTR unsigned char 
  2762 ;;		 -> PUNTO2A(5), PUNTO1A(5), 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      PTR unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         1       0       0       0       0
  2773 ;;      Locals:         0       2       0       0       0
  2774 ;;      Temps:          1       0       0       0       0
  2775 ;;      Totals:         2       2       0       0       0
  2776 ;;Total ram usage:        4 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    2
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_ADC
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _strcpy
  2788  17DD                     _strcpy:
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2792                           ;strcpy@to stored from wreg
  2793  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  2794  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  2795  17DF  00A1               	movwf	strcpy@to
  2796  17E0                     l3054:
  2797  17E0  0821               	movf	strcpy@to,w
  2798  17E1  00F5               	movwf	??_strcpy
  2799  17E2  0875               	movf	??_strcpy,w
  2800  17E3  00A0               	movwf	strcpy@cp
  2801  17E4  2FED               	goto	l3058
  2802  17E5                     l3056:
  2803  17E5  3001               	movlw	1
  2804  17E6  00F5               	movwf	??_strcpy
  2805  17E7  0875               	movf	??_strcpy,w
  2806  17E8  07A0               	addwf	strcpy@cp,f
  2807  17E9  3001               	movlw	1
  2808  17EA  00F5               	movwf	??_strcpy
  2809  17EB  0875               	movf	??_strcpy,w
  2810  17EC  07F4               	addwf	strcpy@from,f
  2811  17ED                     l3058:
  2812  17ED  0874               	movf	strcpy@from,w
  2813  17EE  0084               	movwf	4
  2814  17EF  120A  158A  200A  160A  118A  	fcall	stringdir
  2815  17F4  00F5               	movwf	??_strcpy
  2816  17F5  0820               	movf	strcpy@cp,w
  2817  17F6  0084               	movwf	4
  2818  17F7  0875               	movf	??_strcpy,w
  2819  17F8  1383               	bcf	3,7	;select IRP bank0
  2820  17F9  0080               	movwf	0
  2821  17FA  0800               	movf	0,w
  2822  17FB  1D03               	btfss	3,2
  2823  17FC  2FFE               	goto	u3601
  2824  17FD  2FFF               	goto	u3600
  2825  17FE                     u3601:
  2826  17FE  2FE5               	goto	l3056
  2827  17FF                     u3600:
  2828  17FF                     l834:
  2829  17FF  0008               	return
  2830  1800                     __end_of_strcpy:
  2831                           
  2832                           	psect	text7
  2833  095D                     __ptext7:	
  2834 ;; *************** function _strcat *****************
  2835 ;; Defined at:
  2836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  to              1    wreg     PTR unsigned char 
  2839 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2840 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2841 ;;  from            1    4[COMMON] PTR const unsigned char 
  2842 ;;		 -> PUNTO2A(5), ADCchar2B(5), ADCchar2A(5), PUNTO1A(5), 
  2843 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  to              1    0[BANK0 ] PTR unsigned char 
  2846 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2847 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2848 ;;  cp              1    1[BANK0 ] PTR unsigned char 
  2849 ;;		 -> PUNTO2A(5), ADCchar2C(5), ADCchar2B(5), PUNTO1A(5), 
  2850 ;;		 -> ADCchar1C(5), ADCchar1B(5), 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      PTR unsigned char 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         1       0       0       0       0
  2861 ;;      Locals:         0       2       0       0       0
  2862 ;;      Temps:          1       0       0       0       0
  2863 ;;      Totals:         2       2       0       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    2
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_ADC
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _strcat
  2876  095D                     _strcat:
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2880                           ;strcat@to stored from wreg
  2881  095D  1283               	bcf	3,5	;RP0=0, select bank0
  2882  095E  1303               	bcf	3,6	;RP1=0, select bank0
  2883  095F  00A0               	movwf	strcat@to
  2884  0960                     l3044:
  2885  0960  0820               	movf	strcat@to,w
  2886  0961  00F5               	movwf	??_strcat
  2887  0962  0875               	movf	??_strcat,w
  2888  0963  00A1               	movwf	strcat@cp
  2889  0964  2969               	goto	l3048
  2890  0965                     l3046:
  2891  0965  3001               	movlw	1
  2892  0966  00F5               	movwf	??_strcat
  2893  0967  0875               	movf	??_strcat,w
  2894  0968  07A1               	addwf	strcat@cp,f
  2895  0969                     l3048:
  2896  0969  0821               	movf	strcat@cp,w
  2897  096A  0084               	movwf	4
  2898  096B  1383               	bcf	3,7	;select IRP bank0
  2899  096C  0800               	movf	0,w
  2900  096D  1D03               	btfss	3,2
  2901  096E  2970               	goto	u3581
  2902  096F  2971               	goto	u3580
  2903  0970                     u3581:
  2904  0970  2965               	goto	l3046
  2905  0971                     u3580:
  2906  0971  297A               	goto	l3052
  2907  0972                     l3050:
  2908  0972  3001               	movlw	1
  2909  0973  00F5               	movwf	??_strcat
  2910  0974  0875               	movf	??_strcat,w
  2911  0975  07A1               	addwf	strcat@cp,f
  2912  0976  3001               	movlw	1
  2913  0977  00F5               	movwf	??_strcat
  2914  0978  0875               	movf	??_strcat,w
  2915  0979  07F4               	addwf	strcat@from,f
  2916  097A                     l3052:
  2917  097A  0874               	movf	strcat@from,w
  2918  097B  0084               	movwf	4
  2919  097C  0800               	movf	0,w
  2920  097D  00F5               	movwf	??_strcat
  2921  097E  0821               	movf	strcat@cp,w
  2922  097F  0084               	movwf	4
  2923  0980  0875               	movf	??_strcat,w
  2924  0981  0080               	movwf	0
  2925  0982  0800               	movf	0,w
  2926  0983  1D03               	btfss	3,2
  2927  0984  2986               	goto	u3591
  2928  0985  2987               	goto	u3590
  2929  0986                     u3591:
  2930  0986  2972               	goto	l3050
  2931  0987                     u3590:
  2932  0987                     l828:
  2933  0987  0008               	return
  2934  0988                     __end_of_strcat:
  2935                           
  2936                           	psect	text8
  2937  0CBE                     __ptext8:	
  2938 ;; *************** function _sprintf *****************
  2939 ;; Defined at:
  2940 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  sp              1    wreg     PTR unsigned char 
  2943 ;;		 -> ContadorSend(5), 
  2944 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2945 ;;		 -> STR_4(5), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  2948 ;;		 -> ContadorSend(5), 
  2949 ;;  tmpval          4    0        struct .
  2950 ;;  val             2   21[BANK0 ] unsigned int 
  2951 ;;  cp              2    0        PTR const unsigned char 
  2952 ;;  len             2    0        unsigned int 
  2953 ;;  c               1   24[BANK0 ] unsigned char 
  2954 ;;  prec            1   23[BANK0 ] char 
  2955 ;;  flag            1   19[BANK0 ] unsigned char 
  2956 ;;  ap              1   18[BANK0 ] PTR void [1]
  2957 ;;		 -> ?_sprintf(2), 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   12[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       3       0       0       0
  2968 ;;      Locals:         0       7       0       0       0
  2969 ;;      Temps:          0       3       0       0       0
  2970 ;;      Totals:         0      13       0       0       0
  2971 ;;Total ram usage:       13 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    3
  2974 ;; This function calls:
  2975 ;;		___bmul
  2976 ;;		___lwdiv
  2977 ;;		___lwmod
  2978 ;;		_isdigit
  2979 ;; This function is called by:
  2980 ;;		_ADC
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _sprintf
  2986  0CBE                     _sprintf:
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2990                           ;sprintf@sp stored from wreg
  2991  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0CC0  00B4               	movwf	sprintf@sp
  2994  0CC1                     l3060:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2997  0CC1  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2998  0CC2  00AF               	movwf	??_sprintf
  2999  0CC3  082F               	movf	??_sprintf,w
  3000  0CC4  00B2               	movwf	sprintf@ap
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3003  0CC5  2E0C               	goto	l3138
  3004  0CC6                     l3062:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3007  0CC6  3025               	movlw	37
  3008  0CC7  0638               	xorwf	sprintf@c,w
  3009  0CC8  1903               	btfsc	3,2
  3010  0CC9  2CCB               	goto	u3611
  3011  0CCA  2CCC               	goto	u3610
  3012  0CCB                     u3611:
  3013  0CCB  2CD8               	goto	l3068
  3014  0CCC                     u3610:
  3015  0CCC                     l3064:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3018  0CCC  0838               	movf	sprintf@c,w
  3019  0CCD  00AF               	movwf	??_sprintf
  3020  0CCE  0834               	movf	sprintf@sp,w
  3021  0CCF  0084               	movwf	4
  3022  0CD0  082F               	movf	??_sprintf,w
  3023  0CD1  1383               	bcf	3,7	;select IRP bank0
  3024  0CD2  0080               	movwf	0
  3025  0CD3                     l3066:
  3026  0CD3  3001               	movlw	1
  3027  0CD4  00AF               	movwf	??_sprintf
  3028  0CD5  082F               	movf	??_sprintf,w
  3029  0CD6  07B4               	addwf	sprintf@sp,f
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3032  0CD7  2E0C               	goto	l3138
  3033  0CD8                     l3068:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3036  0CD8  01B3               	clrf	sprintf@flag
  3037  0CD9                     l3070:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3040  0CD9  082C               	movf	sprintf@f,w
  3041  0CDA  0084               	movwf	4
  3042  0CDB  120A  158A  200A  120A  158A  	fcall	stringdir
  3043  0CE0  3A2E               	xorlw	46
  3044  0CE1  1D03               	skipz
  3045  0CE2  2CE4               	goto	u3621
  3046  0CE3  2CE5               	goto	u3620
  3047  0CE4                     u3621:
  3048  0CE4  2D1C               	goto	l3084
  3049  0CE5                     u3620:
  3050  0CE5                     l3072:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3053  0CE5  3001               	movlw	1
  3054  0CE6  00AF               	movwf	??_sprintf
  3055  0CE7  082F               	movf	??_sprintf,w
  3056  0CE8  07AC               	addwf	sprintf@f,f
  3057  0CE9                     l3074:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3060  0CE9  01B7               	clrf	sprintf@prec
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3063  0CEA  2D0B               	goto	l3082
  3064  0CEB                     l3076:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3067  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0CED  0837               	movf	sprintf@prec,w
  3070  0CEE  00AF               	movwf	??_sprintf
  3071  0CEF  082F               	movf	??_sprintf,w
  3072  0CF0  00F4               	movwf	___bmul@multiplicand
  3073  0CF1  300A               	movlw	10
  3074  0CF2  160A  118A  278A  120A  158A  	fcall	___bmul
  3075  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0CF9  00B0               	movwf	??_sprintf+1
  3078  0CFA  0830               	movf	??_sprintf+1,w
  3079  0CFB  00B7               	movwf	sprintf@prec
  3080  0CFC                     l3078:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3083  0CFC  082C               	movf	sprintf@f,w
  3084  0CFD  0084               	movwf	4
  3085  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  3086  0D03  3ED0               	addlw	-48
  3087  0D04  00AF               	movwf	??_sprintf
  3088  0D05  082F               	movf	??_sprintf,w
  3089  0D06  07B7               	addwf	sprintf@prec,f
  3090  0D07                     l3080:
  3091  0D07  3001               	movlw	1
  3092  0D08  00AF               	movwf	??_sprintf
  3093  0D09  082F               	movf	??_sprintf,w
  3094  0D0A  07AC               	addwf	sprintf@f,f
  3095  0D0B                     l3082:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3098  0D0B  082C               	movf	sprintf@f,w
  3099  0D0C  0084               	movwf	4
  3100  0D0D  120A  158A  200A  120A  158A  	fcall	stringdir
  3101  0D12  120A  158A  2037  120A  158A  	fcall	_isdigit
  3102  0D17  1803               	btfsc	3,0
  3103  0D18  2D1A               	goto	u3631
  3104  0D19  2D1B               	goto	u3630
  3105  0D1A                     u3631:
  3106  0D1A  2CEB               	goto	l3076
  3107  0D1B                     u3630:
  3108  0D1B  2D1D               	goto	l3088
  3109  0D1C                     l3084:
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3112  0D1C  01B7               	clrf	sprintf@prec
  3113  0D1D                     l3088:
  3114  0D1D  3001               	movlw	1
  3115  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0D20  07AC               	addwf	sprintf@f,f
  3118  0D21  30FF               	movlw	-1
  3119  0D22  072C               	addwf	sprintf@f,w
  3120  0D23  0084               	movwf	4
  3121  0D24  120A  158A  200A  120A  158A  	fcall	stringdir
  3122  0D29  00B8               	movwf	sprintf@c
  3123  0D2A  00AF               	movwf	??_sprintf
  3124  0D2B  01B0               	clrf	??_sprintf+1
  3125                           
  3126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3127                           ; Switch size 1, requested type "simple"
  3128                           ; Number of cases is 1, Range of values is 0 to 0
  3129                           ; switch strategies available:
  3130                           ; Name         Instructions Cycles
  3131                           ; simple_byte            4     3 (average)
  3132                           ; direct_byte           11     8 (fixed)
  3133                           ; jumptable            260     6 (fixed)
  3134                           ;	Chosen strategy is simple_byte
  3135  0D2C  0830               	movf	??_sprintf+1,w
  3136  0D2D  3A00               	xorlw	0	; case 0
  3137  0D2E  1903               	skipnz
  3138  0D2F  2D31               	goto	l3586
  3139  0D30  2E0C               	goto	l3138
  3140  0D31                     l3586:
  3141                           
  3142                           ; Switch size 1, requested type "simple"
  3143                           ; Number of cases is 3, Range of values is 0 to 105
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte           10     6 (average)
  3147                           ; jumptable            260     6 (fixed)
  3148                           ;	Chosen strategy is simple_byte
  3149  0D31  082F               	movf	??_sprintf,w
  3150  0D32  3A00               	xorlw	0	; case 0
  3151  0D33  1903               	skipnz
  3152  0D34  2E1E               	goto	l3140
  3153  0D35  3A64               	xorlw	100	; case 100
  3154  0D36  1903               	skipnz
  3155  0D37  2D3C               	goto	l3090
  3156  0D38  3A0D               	xorlw	13	; case 105
  3157  0D39  1903               	skipnz
  3158  0D3A  2D3C               	goto	l3090
  3159  0D3B  2E0C               	goto	l3138
  3160  0D3C                     l3090:
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3163  0D3C  0832               	movf	sprintf@ap,w
  3164  0D3D  0084               	movwf	4
  3165  0D3E  1383               	bcf	3,7	;select IRP bank0
  3166  0D3F  0800               	movf	0,w
  3167  0D40  00B5               	movwf	sprintf@val
  3168  0D41  0A84               	incf	4,f
  3169  0D42  0800               	movf	0,w
  3170  0D43  00B6               	movwf	sprintf@val+1
  3171  0D44                     l3092:
  3172  0D44  3002               	movlw	2
  3173  0D45  00AF               	movwf	??_sprintf
  3174  0D46  082F               	movf	??_sprintf,w
  3175  0D47  07B2               	addwf	sprintf@ap,f
  3176  0D48                     l3094:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3179  0D48  1FB6               	btfss	sprintf@val+1,7
  3180  0D49  2D4B               	goto	u3641
  3181  0D4A  2D4C               	goto	u3640
  3182  0D4B                     u3641:
  3183  0D4B  2D55               	goto	l3100
  3184  0D4C                     u3640:
  3185  0D4C                     l3096:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3188  0D4C  3003               	movlw	3
  3189  0D4D  00AF               	movwf	??_sprintf
  3190  0D4E  082F               	movf	??_sprintf,w
  3191  0D4F  04B3               	iorwf	sprintf@flag,f
  3192  0D50                     l3098:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3195  0D50  09B5               	comf	sprintf@val,f
  3196  0D51  09B6               	comf	sprintf@val+1,f
  3197  0D52  0AB5               	incf	sprintf@val,f
  3198  0D53  1903               	skipnz
  3199  0D54  0AB6               	incf	sprintf@val+1,f
  3200  0D55                     l3100:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3203  0D55  0837               	movf	sprintf@prec,w
  3204  0D56  1D03               	btfss	3,2
  3205  0D57  2D59               	goto	u3651
  3206  0D58  2D5A               	goto	u3650
  3207  0D59                     u3651:
  3208  0D59  2D64               	goto	l3106
  3209  0D5A                     u3650:
  3210  0D5A                     l3102:
  3211  0D5A  0835               	movf	sprintf@val,w
  3212  0D5B  0436               	iorwf	sprintf@val+1,w
  3213  0D5C  1D03               	btfss	3,2
  3214  0D5D  2D5F               	goto	u3661
  3215  0D5E  2D60               	goto	u3660
  3216  0D5F                     u3661:
  3217  0D5F  2D64               	goto	l3106
  3218  0D60                     u3660:
  3219  0D60                     l3104:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3222  0D60  3001               	movlw	1
  3223  0D61  00AF               	movwf	??_sprintf
  3224  0D62  082F               	movf	??_sprintf,w
  3225  0D63  07B7               	addwf	sprintf@prec,f
  3226  0D64                     l3106:
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3229  0D64  01B8               	clrf	sprintf@c
  3230  0D65  0AB8               	incf	sprintf@c,f
  3231  0D66                     l3110:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3234  0D66  0838               	movf	sprintf@c,w
  3235  0D67  00AF               	movwf	??_sprintf
  3236  0D68  072F               	addwf	??_sprintf,w
  3237  0D69  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3238  0D6A  0084               	movwf	4
  3239  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3240  0D70  00B0               	movwf	??_sprintf+1
  3241  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3242  0D76  00B1               	movwf	??_sprintf+2
  3243  0D77  0831               	movf	??_sprintf+2,w
  3244  0D78  0236               	subwf	sprintf@val+1,w
  3245  0D79  1D03               	skipz
  3246  0D7A  2D7D               	goto	u3675
  3247  0D7B  0830               	movf	??_sprintf+1,w
  3248  0D7C  0235               	subwf	sprintf@val,w
  3249  0D7D                     u3675:
  3250  0D7D  1803               	skipnc
  3251  0D7E  2D80               	goto	u3671
  3252  0D7F  2D81               	goto	u3670
  3253  0D80                     u3671:
  3254  0D80  2D82               	goto	l3114
  3255  0D81                     u3670:
  3256  0D81  2D8C               	goto	l3116
  3257  0D82                     l3114:
  3258  0D82  3001               	movlw	1
  3259  0D83  00AF               	movwf	??_sprintf
  3260  0D84  082F               	movf	??_sprintf,w
  3261  0D85  07B8               	addwf	sprintf@c,f
  3262  0D86  3005               	movlw	5
  3263  0D87  0638               	xorwf	sprintf@c,w
  3264  0D88  1D03               	btfss	3,2
  3265  0D89  2D8B               	goto	u3681
  3266  0D8A  2D8C               	goto	u3680
  3267  0D8B                     u3681:
  3268  0D8B  2D66               	goto	l3110
  3269  0D8C                     u3680:
  3270  0D8C                     l3116:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3273  0D8C  0837               	movf	sprintf@prec,w
  3274  0D8D  00AF               	movwf	??_sprintf
  3275  0D8E  01B0               	clrf	??_sprintf+1
  3276  0D8F  1BAF               	btfsc	??_sprintf,7
  3277  0D90  03B0               	decf	??_sprintf+1,f
  3278  0D91  0830               	movf	??_sprintf+1,w
  3279  0D92  3A80               	xorlw	128
  3280  0D93  3C80               	sublw	128
  3281  0D94  1D03               	skipz
  3282  0D95  2D98               	goto	u3695
  3283  0D96  082F               	movf	??_sprintf,w
  3284  0D97  0238               	subwf	sprintf@c,w
  3285  0D98                     u3695:
  3286  0D98  1803               	skipnc
  3287  0D99  2D9B               	goto	u3691
  3288  0D9A  2D9C               	goto	u3690
  3289  0D9B                     u3691:
  3290  0D9B  2D9D               	goto	l3120
  3291  0D9C                     u3690:
  3292  0D9C                     l3118:
  3293  0D9C  2DB7               	goto	l3124
  3294  0D9D                     l3120:
  3295  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0D9F  0837               	movf	sprintf@prec,w
  3298  0DA0  00AF               	movwf	??_sprintf
  3299  0DA1  01B0               	clrf	??_sprintf+1
  3300  0DA2  1BAF               	btfsc	??_sprintf,7
  3301  0DA3  03B0               	decf	??_sprintf+1,f
  3302  0DA4  0830               	movf	??_sprintf+1,w
  3303  0DA5  3A80               	xorlw	128
  3304  0DA6  00B1               	movwf	??_sprintf+2
  3305  0DA7  3080               	movlw	128
  3306  0DA8  0231               	subwf	??_sprintf+2,w
  3307  0DA9  1D03               	skipz
  3308  0DAA  2DAD               	goto	u3705
  3309  0DAB  0838               	movf	sprintf@c,w
  3310  0DAC  022F               	subwf	??_sprintf,w
  3311  0DAD                     u3705:
  3312  0DAD  1803               	skipnc
  3313  0DAE  2DB0               	goto	u3701
  3314  0DAF  2DB1               	goto	u3700
  3315  0DB0                     u3701:
  3316  0DB0  2DB7               	goto	l3124
  3317  0DB1                     u3700:
  3318  0DB1                     l3122:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3321  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0DB3  0838               	movf	sprintf@c,w
  3324  0DB4  00AF               	movwf	??_sprintf
  3325  0DB5  082F               	movf	??_sprintf,w
  3326  0DB6  00B7               	movwf	sprintf@prec
  3327  0DB7                     l3124:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3330  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0DB9  0833               	movf	sprintf@flag,w
  3333  0DBA  3903               	andlw	3
  3334  0DBB  1903               	btfsc	3,2
  3335  0DBC  2DBE               	goto	u3711
  3336  0DBD  2DBF               	goto	u3710
  3337  0DBE                     u3711:
  3338  0DBE  2E03               	goto	l3136
  3339  0DBF                     u3710:
  3340  0DBF                     l3126:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3343  0DBF  302D               	movlw	45
  3344  0DC0  00AF               	movwf	??_sprintf
  3345  0DC1  0834               	movf	sprintf@sp,w
  3346  0DC2  0084               	movwf	4
  3347  0DC3  082F               	movf	??_sprintf,w
  3348  0DC4  1383               	bcf	3,7	;select IRP bank0
  3349  0DC5  0080               	movwf	0
  3350  0DC6                     l3128:
  3351  0DC6  3001               	movlw	1
  3352  0DC7  00AF               	movwf	??_sprintf
  3353  0DC8  082F               	movf	??_sprintf,w
  3354  0DC9  07B4               	addwf	sprintf@sp,f
  3355  0DCA  2E03               	goto	l3136
  3356  0DCB                     l3130:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3359  0DCB  300A               	movlw	10
  3360  0DCC  00A7               	movwf	___lwmod@divisor
  3361  0DCD  3000               	movlw	0
  3362  0DCE  00A8               	movwf	___lwmod@divisor+1
  3363  0DCF  0837               	movf	sprintf@prec,w
  3364  0DD0  00AF               	movwf	??_sprintf
  3365  0DD1  072F               	addwf	??_sprintf,w
  3366  0DD2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3367  0DD3  0084               	movwf	4
  3368  0DD4  120A  158A  200A  120A  158A  	fcall	stringdir
  3369  0DD9  00A0               	movwf	___lwdiv@divisor
  3370  0DDA  120A  158A  200A  120A  158A  	fcall	stringdir
  3371  0DDF  00A1               	movwf	___lwdiv@divisor+1
  3372  0DE0  0836               	movf	sprintf@val+1,w
  3373  0DE1  00A3               	movwf	___lwdiv@dividend+1
  3374  0DE2  0835               	movf	sprintf@val,w
  3375  0DE3  00A2               	movwf	___lwdiv@dividend
  3376  0DE4  120A  158A  21C4  120A  158A  	fcall	___lwdiv
  3377  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0DEB  0821               	movf	?___lwdiv+1,w
  3380  0DEC  00AA               	movwf	___lwmod@dividend+1
  3381  0DED  0820               	movf	?___lwdiv,w
  3382  0DEE  00A9               	movwf	___lwmod@dividend
  3383  0DEF  120A  158A  2188  120A  158A  	fcall	___lwmod
  3384  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0DF6  0827               	movf	?___lwmod,w
  3387  0DF7  3E30               	addlw	48
  3388  0DF8  00B0               	movwf	??_sprintf+1
  3389  0DF9  0830               	movf	??_sprintf+1,w
  3390  0DFA  00B8               	movwf	sprintf@c
  3391  0DFB                     l3132:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3394  0DFB  0838               	movf	sprintf@c,w
  3395  0DFC  00AF               	movwf	??_sprintf
  3396  0DFD  0834               	movf	sprintf@sp,w
  3397  0DFE  0084               	movwf	4
  3398  0DFF  082F               	movf	??_sprintf,w
  3399  0E00  1383               	bcf	3,7	;select IRP bank0
  3400  0E01  0080               	movwf	0
  3401  0E02  2DC6               	goto	l3128
  3402  0E03                     l3136:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3405  0E03  30FF               	movlw	255
  3406  0E04  00AF               	movwf	??_sprintf
  3407  0E05  082F               	movf	??_sprintf,w
  3408  0E06  07B7               	addwf	sprintf@prec,f
  3409  0E07  0A37               	incf	sprintf@prec,w
  3410  0E08  1D03               	btfss	3,2
  3411  0E09  2E0B               	goto	u3721
  3412  0E0A  2E0C               	goto	u3720
  3413  0E0B                     u3721:
  3414  0E0B  2DCB               	goto	l3130
  3415  0E0C                     u3720:
  3416  0E0C                     l3138:
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3419  0E0C  3001               	movlw	1
  3420  0E0D  07AC               	addwf	sprintf@f,f
  3421  0E0E  30FF               	movlw	-1
  3422  0E0F  072C               	addwf	sprintf@f,w
  3423  0E10  0084               	movwf	4
  3424  0E11  120A  158A  200A  120A  158A  	fcall	stringdir
  3425  0E16  00AF               	movwf	??_sprintf
  3426  0E17  082F               	movf	??_sprintf,w
  3427  0E18  00B8               	movwf	sprintf@c
  3428  0E19  0838               	movf	sprintf@c,w
  3429  0E1A  1D03               	btfss	3,2
  3430  0E1B  2E1D               	goto	u3731
  3431  0E1C  2E1E               	goto	u3730
  3432  0E1D                     u3731:
  3433  0E1D  2CC6               	goto	l3062
  3434  0E1E                     u3730:
  3435  0E1E                     l3140:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3438  0E1E  0834               	movf	sprintf@sp,w
  3439  0E1F  0084               	movwf	4
  3440  0E20  1383               	bcf	3,7	;select IRP bank0
  3441  0E21  0180               	clrf	0
  3442  0E22                     l348:
  3443  0E22  0008               	return
  3444  0E23                     __end_of_sprintf:
  3445                           
  3446                           	psect	text9
  3447  0837                     __ptext9:	
  3448 ;; *************** function _isdigit *****************
  3449 ;; Defined at:
  3450 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  c               1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  c               1    5[COMMON] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         0       0       0       0       0
  3465 ;;      Locals:         2       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0
  3467 ;;      Totals:         2       0       0       0       0
  3468 ;;Total ram usage:        2 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    2
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_sprintf
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _isdigit
  3480  0837                     _isdigit:
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3484                           ;isdigit@c stored from wreg
  3485  0837  00F5               	movwf	isdigit@c
  3486  0838                     l1996:
  3487  0838  01F4               	clrf	_isdigit$988
  3488  0839                     l1998:
  3489  0839  303A               	movlw	58
  3490  083A  0275               	subwf	isdigit@c,w
  3491  083B  1803               	skipnc
  3492  083C  283E               	goto	u1881
  3493  083D  283F               	goto	u1880
  3494  083E                     u1881:
  3495  083E  2847               	goto	l2004
  3496  083F                     u1880:
  3497  083F                     l2000:
  3498  083F  3030               	movlw	48
  3499  0840  0275               	subwf	isdigit@c,w
  3500  0841  1C03               	skipc
  3501  0842  2844               	goto	u1891
  3502  0843  2845               	goto	u1890
  3503  0844                     u1891:
  3504  0844  2847               	goto	l2004
  3505  0845                     u1890:
  3506  0845                     l2002:
  3507  0845  01F4               	clrf	_isdigit$988
  3508  0846  0AF4               	incf	_isdigit$988,f
  3509  0847                     l2004:
  3510  0847  0C74               	rrf	_isdigit$988,w
  3511  0848                     l805:
  3512  0848  0008               	return
  3513  0849                     __end_of_isdigit:
  3514                           
  3515                           	psect	text10
  3516  178A                     __ptext10:	
  3517 ;; *************** function ___bmul *****************
  3518 ;; Defined at:
  3519 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  multiplier      1    wreg     unsigned char 
  3522 ;;  multiplicand    1    4[COMMON] unsigned char 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3525 ;;  product         1    0[BANK0 ] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      unsigned char 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         1       0       0       0       0
  3536 ;;      Locals:         0       2       0       0       0
  3537 ;;      Temps:          1       0       0       0       0
  3538 ;;      Totals:         2       2       0       0       0
  3539 ;;Total ram usage:        4 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    2
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_sprintf
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function ___bmul
  3551  178A                     ___bmul:
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3555                           ;___bmul@multiplier stored from wreg
  3556  178A  1283               	bcf	3,5	;RP0=0, select bank0
  3557  178B  1303               	bcf	3,6	;RP1=0, select bank0
  3558  178C  00A1               	movwf	___bmul@multiplier
  3559  178D                     l2954:
  3560  178D  01A0               	clrf	___bmul@product
  3561  178E                     l2956:
  3562  178E  1C21               	btfss	___bmul@multiplier,0
  3563  178F  2F91               	goto	u3481
  3564  1790  2F92               	goto	u3480
  3565  1791                     u3481:
  3566  1791  2F96               	goto	l2960
  3567  1792                     u3480:
  3568  1792                     l2958:
  3569  1792  0874               	movf	___bmul@multiplicand,w
  3570  1793  00F5               	movwf	??___bmul
  3571  1794  0875               	movf	??___bmul,w
  3572  1795  07A0               	addwf	___bmul@product,f
  3573  1796                     l2960:
  3574  1796  1003               	clrc
  3575  1797  0DF4               	rlf	___bmul@multiplicand,f
  3576  1798                     l2962:
  3577  1798  1003               	clrc
  3578  1799  0CA1               	rrf	___bmul@multiplier,f
  3579  179A  0821               	movf	___bmul@multiplier,w
  3580  179B  1D03               	btfss	3,2
  3581  179C  2F9E               	goto	u3491
  3582  179D  2F9F               	goto	u3490
  3583  179E                     u3491:
  3584  179E  2F8E               	goto	l2956
  3585  179F                     u3490:
  3586  179F                     l2964:
  3587  179F  0820               	movf	___bmul@product,w
  3588  17A0                     l378:
  3589  17A0  0008               	return
  3590  17A1                     __end_of___bmul:
  3591                           
  3592                           	psect	text11
  3593  08B9                     __ptext11:	
  3594 ;; *************** function _lcd_msg *****************
  3595 ;; Defined at:
  3596 ;;		line 50 in file "LCD.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  c               2    1[BANK0 ] PTR unsigned char 
  3599 ;;		 -> STR_6(3), STR_5(3), ContadorSend(5), ADCchar2C(5), 
  3600 ;;		 -> ADCchar1C(5), STR_1(18), 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       2       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       2       0       0       0
  3616 ;;Total ram usage:        2 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    4
  3619 ;; This function calls:
  3620 ;;		_lcd_dwr
  3621 ;; This function is called by:
  3622 ;;		_ADC
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function _lcd_msg
  3628  08B9                     _lcd_msg:
  3629  08B9                     l3022:	
  3630                           ;incstack = 0
  3631                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3632                           
  3633                           
  3634                           ;LCD.c: 51:     while(*c != 0)
  3635  08B9  28D0               	goto	l3028
  3636  08BA                     l3024:
  3637                           
  3638                           ;LCD.c: 52:         lcd_dwr(*c++);
  3639  08BA  0822               	movf	lcd_msg@c+1,w
  3640  08BB  00FF               	movwf	btemp+1
  3641  08BC  0821               	movf	lcd_msg@c,w
  3642  08BD  0084               	movwf	4
  3643  08BE  120A  158A  2000  120A  158A  	fcall	stringtab
  3644  08C3  160A  118A  2776  120A  158A  	fcall	_lcd_dwr
  3645  08C8                     l3026:
  3646  08C8  3001               	movlw	1
  3647  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  3648  08CA  1303               	bcf	3,6	;RP1=0, select bank0
  3649  08CB  07A1               	addwf	lcd_msg@c,f
  3650  08CC  1803               	skipnc
  3651  08CD  0AA2               	incf	lcd_msg@c+1,f
  3652  08CE  3000               	movlw	0
  3653  08CF  07A2               	addwf	lcd_msg@c+1,f
  3654  08D0                     l3028:
  3655                           
  3656                           ;LCD.c: 51:     while(*c != 0)
  3657  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  3658  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  3659  08D2  0822               	movf	lcd_msg@c+1,w
  3660  08D3  00FF               	movwf	btemp+1
  3661  08D4  0821               	movf	lcd_msg@c,w
  3662  08D5  0084               	movwf	4
  3663  08D6  120A  158A  2000  120A  158A  	fcall	stringtab
  3664  08DB  3A00               	xorlw	0
  3665  08DC  1D03               	skipz
  3666  08DD  28DF               	goto	u3561
  3667  08DE  28E0               	goto	u3560
  3668  08DF                     u3561:
  3669  08DF  28BA               	goto	l3024
  3670  08E0                     u3560:
  3671  08E0                     l78:
  3672  08E0  0008               	return
  3673  08E1                     __end_of_lcd_msg:
  3674                           
  3675                           	psect	text12
  3676  1776                     __ptext12:	
  3677 ;; *************** function _lcd_dwr *****************
  3678 ;; Defined at:
  3679 ;;		line 42 in file "LCD.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  x               1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  x               1    0[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       1       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       1       0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		_lcd_lat
  3702 ;;		_lcd_ready
  3703 ;; This function is called by:
  3704 ;;		_lcd_msg
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _lcd_dwr
  3710  1776                     _lcd_dwr:
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  3714                           ;lcd_dwr@x stored from wreg
  3715  1776  1283               	bcf	3,5	;RP0=0, select bank0
  3716  1777  1303               	bcf	3,6	;RP1=0, select bank0
  3717  1778  00A0               	movwf	lcd_dwr@x
  3718  1779                     l2944:
  3719                           
  3720                           ;LCD.c: 43:     lcd_ready();
  3721  1779  120A  158A  210A  160A  118A  	fcall	_lcd_ready
  3722  177E                     l2946:
  3723                           
  3724                           ;LCD.c: 44:     PORTD = x;
  3725  177E  1283               	bcf	3,5	;RP0=0, select bank0
  3726  177F  1303               	bcf	3,6	;RP1=0, select bank0
  3727  1780  0820               	movf	lcd_dwr@x,w
  3728  1781  0088               	movwf	8	;volatile
  3729  1782                     l2948:
  3730                           
  3731                           ;LCD.c: 45:     RE0 = 1;
  3732  1782  1409               	bsf	9,0	;volatile
  3733  1783                     l2950:
  3734                           
  3735                           ;LCD.c: 46:     RE1 = 0;
  3736  1783  1089               	bcf	9,1	;volatile
  3737  1784                     l2952:
  3738                           
  3739                           ;LCD.c: 47:     lcd_lat();
  3740  1784  160A  118A  2753  160A  118A  	fcall	_lcd_lat
  3741  1789                     l72:
  3742  1789  0008               	return
  3743  178A                     __end_of_lcd_dwr:
  3744                           
  3745                           	psect	text13
  3746  1762                     __ptext13:	
  3747 ;; *************** function _lcd_cmd *****************
  3748 ;; Defined at:
  3749 ;;		line 12 in file "LCD.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  x               1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  x               1    0[BANK0 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       1       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         0       1       0       0       0
  3767 ;;Total ram usage:        1 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    3
  3770 ;; This function calls:
  3771 ;;		_lcd_lat
  3772 ;;		_lcd_ready
  3773 ;; This function is called by:
  3774 ;;		_inicializacion
  3775 ;;		_ADC
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _lcd_cmd
  3781  1762                     _lcd_cmd:
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3785                           ;lcd_cmd@x stored from wreg
  3786  1762  1283               	bcf	3,5	;RP0=0, select bank0
  3787  1763  1303               	bcf	3,6	;RP1=0, select bank0
  3788  1764  00A0               	movwf	lcd_cmd@x
  3789  1765                     l3012:
  3790                           
  3791                           ;LCD.c: 13:     lcd_ready();
  3792  1765  120A  158A  210A  160A  118A  	fcall	_lcd_ready
  3793  176A                     l3014:
  3794                           
  3795                           ;LCD.c: 14:     PORTD = x;
  3796  176A  1283               	bcf	3,5	;RP0=0, select bank0
  3797  176B  1303               	bcf	3,6	;RP1=0, select bank0
  3798  176C  0820               	movf	lcd_cmd@x,w
  3799  176D  0088               	movwf	8	;volatile
  3800  176E                     l3016:
  3801                           
  3802                           ;LCD.c: 15:     RE0 = 0;
  3803  176E  1009               	bcf	9,0	;volatile
  3804  176F                     l3018:
  3805                           
  3806                           ;LCD.c: 16:     RE1 = 0;
  3807  176F  1089               	bcf	9,1	;volatile
  3808  1770                     l3020:
  3809                           
  3810                           ;LCD.c: 17:     lcd_lat();
  3811  1770  160A  118A  2753  160A  118A  	fcall	_lcd_lat
  3812  1775                     l61:
  3813  1775  0008               	return
  3814  1776                     __end_of_lcd_cmd:
  3815                           
  3816                           	psect	text14
  3817  090A                     __ptext14:	
  3818 ;; *************** function _lcd_ready *****************
  3819 ;; Defined at:
  3820 ;;		line 25 in file "LCD.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          2       0       0       0       0
  3837 ;;      Totals:         2       0       0       0       0
  3838 ;;Total ram usage:        2 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    2
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_lcd_cmd
  3845 ;;		_lcd_dwr
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _lcd_ready
  3851  090A                     _lcd_ready:
  3852  090A                     l2892:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  3855                           
  3856                           
  3857                           ;LCD.c: 26:     PORTD = 0xFF;
  3858  090A  30FF               	movlw	255
  3859  090B  1283               	bcf	3,5	;RP0=0, select bank0
  3860  090C  1303               	bcf	3,6	;RP1=0, select bank0
  3861  090D  0088               	movwf	8	;volatile
  3862  090E                     l2894:
  3863                           
  3864                           ;LCD.c: 27:     PORTD &= 0x80;
  3865  090E  3080               	movlw	128
  3866  090F  00F4               	movwf	??_lcd_ready
  3867  0910  0874               	movf	??_lcd_ready,w
  3868  0911  0588               	andwf	8,f	;volatile
  3869  0912                     l2896:
  3870                           
  3871                           ;LCD.c: 28:     RE0 = 0;
  3872  0912  1009               	bcf	9,0	;volatile
  3873  0913                     l2898:
  3874                           
  3875                           ;LCD.c: 29:     RE1 = 1;
  3876  0913  1489               	bsf	9,1	;volatile
  3877  0914                     l2900:
  3878                           
  3879                           ;LCD.c: 30:     RE2 = 0;
  3880  0914  1109               	bcf	9,2	;volatile
  3881  0915                     l2902:
  3882                           
  3883                           ;LCD.c: 31:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3884  0915  3027               	movlw	39
  3885  0916  00F5               	movwf	??_lcd_ready+1
  3886  0917  30F5               	movlw	245
  3887  0918  00F4               	movwf	??_lcd_ready
  3888  0919                     u4497:
  3889  0919  0BF4               	decfsz	??_lcd_ready,f
  3890  091A  2919               	goto	u4497
  3891  091B  0BF5               	decfsz	??_lcd_ready+1,f
  3892  091C  2919               	goto	u4497
  3893  091D                     l2904:
  3894                           
  3895                           ;LCD.c: 32:     RE2 = 1;
  3896  091D  1283               	bcf	3,5	;RP0=0, select bank0
  3897  091E  1303               	bcf	3,6	;RP1=0, select bank0
  3898  091F  1509               	bsf	9,2	;volatile
  3899                           
  3900                           ;LCD.c: 33:     if (PORTD == 0x80){
  3901  0920  3080               	movlw	128
  3902  0921  0608               	xorwf	8,w	;volatile
  3903  0922  1D03               	btfss	3,2
  3904  0923  2925               	goto	u3401
  3905  0924  2926               	goto	u3400
  3906  0925                     u3401:
  3907  0925  2932               	goto	l69
  3908  0926                     u3400:
  3909  0926                     l2906:
  3910                           
  3911                           ;LCD.c: 34:     RE2 = 0;
  3912  0926  1109               	bcf	9,2	;volatile
  3913  0927                     l2908:
  3914                           
  3915                           ;LCD.c: 35:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3916  0927  3027               	movlw	39
  3917  0928  00F5               	movwf	??_lcd_ready+1
  3918  0929  30F5               	movlw	245
  3919  092A  00F4               	movwf	??_lcd_ready
  3920  092B                     u4507:
  3921  092B  0BF4               	decfsz	??_lcd_ready,f
  3922  092C  292B               	goto	u4507
  3923  092D  0BF5               	decfsz	??_lcd_ready+1,f
  3924  092E  292B               	goto	u4507
  3925  092F                     l2910:
  3926                           
  3927                           ;LCD.c: 36:     RE2 = 1;
  3928  092F  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0930  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0931  1509               	bsf	9,2	;volatile
  3931  0932                     l69:	
  3932                           ;LCD.c: 37:     }
  3933                           
  3934  0932  0008               	return
  3935  0933                     __end_of_lcd_ready:
  3936                           
  3937                           	psect	text15
  3938  1753                     __ptext15:	
  3939 ;; *************** function _lcd_lat *****************
  3940 ;; Defined at:
  3941 ;;		line 20 in file "LCD.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0
  3957 ;;      Temps:          2       0       0       0       0
  3958 ;;      Totals:         2       0       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    2
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_lcd_cmd
  3966 ;;		_lcd_dwr
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _lcd_lat
  3972  1753                     _lcd_lat:
  3973  1753                     l2912:	
  3974                           ;incstack = 0
  3975                           ; Regs used in _lcd_lat: [wreg]
  3976                           
  3977                           
  3978                           ;LCD.c: 21:     RE2 = 1;
  3979  1753  1283               	bcf	3,5	;RP0=0, select bank0
  3980  1754  1303               	bcf	3,6	;RP1=0, select bank0
  3981  1755  1509               	bsf	9,2	;volatile
  3982  1756                     l2914:
  3983                           
  3984                           ;LCD.c: 22:    _delay((unsigned long)((30)*(4000000/4000.0)));
  3985  1756  3027               	movlw	39
  3986  1757  00F5               	movwf	??_lcd_lat+1
  3987  1758  30F5               	movlw	245
  3988  1759  00F4               	movwf	??_lcd_lat
  3989  175A                     u4517:
  3990  175A  0BF4               	decfsz	??_lcd_lat,f
  3991  175B  2F5A               	goto	u4517
  3992  175C  0BF5               	decfsz	??_lcd_lat+1,f
  3993  175D  2F5A               	goto	u4517
  3994  175E                     l2916:
  3995                           
  3996                           ;LCD.c: 23:    RE2 = 0;
  3997  175E  1283               	bcf	3,5	;RP0=0, select bank0
  3998  175F  1303               	bcf	3,6	;RP1=0, select bank0
  3999  1760  1109               	bcf	9,2	;volatile
  4000  1761                     l64:
  4001  1761  0008               	return
  4002  1762                     __end_of_lcd_lat:
  4003                           
  4004                           	psect	text16
  4005  0893                     __ptext16:	
  4006 ;; *************** function _itoa *****************
  4007 ;; Defined at:
  4008 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  buf             1    wreg     PTR unsigned char 
  4011 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  4012 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  4013 ;;  val             2   21[BANK0 ] int 
  4014 ;;  base            2   23[BANK0 ] int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  4017 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  4018 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  4019 ;;  cp              1    0        PTR unsigned char 
  4020 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  4021 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      PTR unsigned char 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       4       0       0       0
  4032 ;;      Locals:         0       2       0       0       0
  4033 ;;      Temps:          0       1       0       0       0
  4034 ;;      Totals:         0       7       0       0       0
  4035 ;;Total ram usage:        7 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    4
  4038 ;; This function calls:
  4039 ;;		_utoa
  4040 ;; This function is called by:
  4041 ;;		_ADC
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _itoa
  4047  0893                     _itoa:
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4051                           ;itoa@buf stored from wreg
  4052  0893  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0894  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0895  00BB               	movwf	itoa@buf
  4055  0896                     l3030:
  4056  0896                     l3032:
  4057  0896  1FB6               	btfss	itoa@val+1,7
  4058  0897  2899               	goto	u3571
  4059  0898  289A               	goto	u3570
  4060  0899                     u3571:
  4061  0899  28AA               	goto	l3040
  4062  089A                     u3570:
  4063  089A                     l3034:
  4064  089A  302D               	movlw	45
  4065  089B  00B9               	movwf	??_itoa
  4066  089C  083B               	movf	itoa@buf,w
  4067  089D  0084               	movwf	4
  4068  089E  0839               	movf	??_itoa,w
  4069  089F  1383               	bcf	3,7	;select IRP bank0
  4070  08A0  0080               	movwf	0
  4071  08A1                     l3036:
  4072  08A1  3001               	movlw	1
  4073  08A2  00B9               	movwf	??_itoa
  4074  08A3  0839               	movf	??_itoa,w
  4075  08A4  07BB               	addwf	itoa@buf,f
  4076  08A5                     l3038:
  4077  08A5  09B5               	comf	itoa@val,f
  4078  08A6  09B6               	comf	itoa@val+1,f
  4079  08A7  0AB5               	incf	itoa@val,f
  4080  08A8  1903               	skipnz
  4081  08A9  0AB6               	incf	itoa@val+1,f
  4082  08AA                     l3040:
  4083  08AA  0836               	movf	itoa@val+1,w
  4084  08AB  00AD               	movwf	utoa@val+1
  4085  08AC  0835               	movf	itoa@val,w
  4086  08AD  00AC               	movwf	utoa@val
  4087  08AE  0838               	movf	itoa@base+1,w
  4088  08AF  00AF               	movwf	utoa@base+1
  4089  08B0  0837               	movf	itoa@base,w
  4090  08B1  00AE               	movwf	utoa@base
  4091  08B2  083B               	movf	itoa@buf,w
  4092  08B3  120A  158A  2333  120A  158A  	fcall	_utoa
  4093  08B8                     l811:
  4094  08B8  0008               	return
  4095  08B9                     __end_of_itoa:
  4096                           
  4097                           	psect	text17
  4098  0B33                     __ptext17:	
  4099 ;; *************** function _utoa *****************
  4100 ;; Defined at:
  4101 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  buf             1    wreg     PTR unsigned char 
  4104 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  4105 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  4106 ;;  val             2   12[BANK0 ] unsigned int 
  4107 ;;  base            2   14[BANK0 ] int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  4110 ;;		 -> ADCchar2C(5), ADCchar2B(5), ADCchar2A(5), ADCchar1C(5), 
  4111 ;;		 -> ADCchar1B(5), ADCchar1A(5), 
  4112 ;;  v               2   17[BANK0 ] unsigned int 
  4113 ;;  c               1   19[BANK0 ] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      PTR unsigned char 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         0       4       0       0       0
  4124 ;;      Locals:         0       4       0       0       0
  4125 ;;      Temps:          0       1       0       0       0
  4126 ;;      Totals:         0       9       0       0       0
  4127 ;;Total ram usage:        9 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    3
  4130 ;; This function calls:
  4131 ;;		___lwdiv
  4132 ;;		___lwmod
  4133 ;; This function is called by:
  4134 ;;		_itoa
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function _utoa
  4140  0B33                     _utoa:
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4144                           ;utoa@buf stored from wreg
  4145  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0B35  00B4               	movwf	utoa@buf
  4148  0B36                     l2982:
  4149  0B36  082D               	movf	utoa@val+1,w
  4150  0B37  00B2               	movwf	utoa@v+1
  4151  0B38  082C               	movf	utoa@val,w
  4152  0B39  00B1               	movwf	utoa@v
  4153  0B3A                     l2984:
  4154  0B3A  082F               	movf	utoa@base+1,w
  4155  0B3B  00A1               	movwf	___lwdiv@divisor+1
  4156  0B3C  082E               	movf	utoa@base,w
  4157  0B3D  00A0               	movwf	___lwdiv@divisor
  4158  0B3E  0832               	movf	utoa@v+1,w
  4159  0B3F  00A3               	movwf	___lwdiv@dividend+1
  4160  0B40  0831               	movf	utoa@v,w
  4161  0B41  00A2               	movwf	___lwdiv@dividend
  4162  0B42  120A  158A  21C4  120A  158A  	fcall	___lwdiv
  4163  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0B49  0821               	movf	?___lwdiv+1,w
  4166  0B4A  00B2               	movwf	utoa@v+1
  4167  0B4B  0820               	movf	?___lwdiv,w
  4168  0B4C  00B1               	movwf	utoa@v
  4169  0B4D                     l2986:
  4170  0B4D  3001               	movlw	1
  4171  0B4E  00B0               	movwf	??_utoa
  4172  0B4F  0830               	movf	??_utoa,w
  4173  0B50  07B4               	addwf	utoa@buf,f
  4174  0B51                     l2988:
  4175  0B51  0831               	movf	utoa@v,w
  4176  0B52  0432               	iorwf	utoa@v+1,w
  4177  0B53  1D03               	btfss	3,2
  4178  0B54  2B56               	goto	u3531
  4179  0B55  2B57               	goto	u3530
  4180  0B56                     u3531:
  4181  0B56  2B3A               	goto	l2984
  4182  0B57                     u3530:
  4183  0B57                     l2990:
  4184  0B57  0834               	movf	utoa@buf,w
  4185  0B58  0084               	movwf	4
  4186  0B59  1383               	bcf	3,7	;select IRP bank0
  4187  0B5A  0180               	clrf	0
  4188  0B5B                     l2992:
  4189  0B5B  3001               	movlw	1
  4190  0B5C  02B4               	subwf	utoa@buf,f
  4191  0B5D                     l2994:
  4192  0B5D  082F               	movf	utoa@base+1,w
  4193  0B5E  00A8               	movwf	___lwmod@divisor+1
  4194  0B5F  082E               	movf	utoa@base,w
  4195  0B60  00A7               	movwf	___lwmod@divisor
  4196  0B61  082D               	movf	utoa@val+1,w
  4197  0B62  00AA               	movwf	___lwmod@dividend+1
  4198  0B63  082C               	movf	utoa@val,w
  4199  0B64  00A9               	movwf	___lwmod@dividend
  4200  0B65  120A  158A  2188  120A  158A  	fcall	___lwmod
  4201  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0B6C  0827               	movf	?___lwmod,w
  4204  0B6D  00B0               	movwf	??_utoa
  4205  0B6E  0830               	movf	??_utoa,w
  4206  0B6F  00B3               	movwf	utoa@c
  4207  0B70                     l2996:
  4208  0B70  082F               	movf	utoa@base+1,w
  4209  0B71  00A1               	movwf	___lwdiv@divisor+1
  4210  0B72  082E               	movf	utoa@base,w
  4211  0B73  00A0               	movwf	___lwdiv@divisor
  4212  0B74  082D               	movf	utoa@val+1,w
  4213  0B75  00A3               	movwf	___lwdiv@dividend+1
  4214  0B76  082C               	movf	utoa@val,w
  4215  0B77  00A2               	movwf	___lwdiv@dividend
  4216  0B78  120A  158A  21C4  120A  158A  	fcall	___lwdiv
  4217  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0B7F  0821               	movf	?___lwdiv+1,w
  4220  0B80  00AD               	movwf	utoa@val+1
  4221  0B81  0820               	movf	?___lwdiv,w
  4222  0B82  00AC               	movwf	utoa@val
  4223  0B83                     l2998:
  4224  0B83  300A               	movlw	10
  4225  0B84  0233               	subwf	utoa@c,w
  4226  0B85  1C03               	skipc
  4227  0B86  2B88               	goto	u3541
  4228  0B87  2B89               	goto	u3540
  4229  0B88                     u3541:
  4230  0B88  2B8D               	goto	l817
  4231  0B89                     u3540:
  4232  0B89                     l3000:
  4233  0B89  3007               	movlw	7
  4234  0B8A  00B0               	movwf	??_utoa
  4235  0B8B  0830               	movf	??_utoa,w
  4236  0B8C  07B3               	addwf	utoa@c,f
  4237  0B8D                     l817:
  4238  0B8D  3030               	movlw	48
  4239  0B8E  00B0               	movwf	??_utoa
  4240  0B8F  0830               	movf	??_utoa,w
  4241  0B90  07B3               	addwf	utoa@c,f
  4242  0B91                     l3002:
  4243  0B91  0833               	movf	utoa@c,w
  4244  0B92  00B0               	movwf	??_utoa
  4245  0B93  0834               	movf	utoa@buf,w
  4246  0B94  0084               	movwf	4
  4247  0B95  0830               	movf	??_utoa,w
  4248  0B96  1383               	bcf	3,7	;select IRP bank0
  4249  0B97  0080               	movwf	0
  4250  0B98                     l3004:
  4251  0B98  3001               	movlw	1
  4252  0B99  02B4               	subwf	utoa@buf,f
  4253  0B9A                     l3006:
  4254  0B9A  082C               	movf	utoa@val,w
  4255  0B9B  042D               	iorwf	utoa@val+1,w
  4256  0B9C  1D03               	btfss	3,2
  4257  0B9D  2B9F               	goto	u3551
  4258  0B9E  2BA0               	goto	u3550
  4259  0B9F                     u3551:
  4260  0B9F  2B5D               	goto	l2994
  4261  0BA0                     u3550:
  4262  0BA0                     l3008:
  4263                           
  4264                           ;	Return value of _utoa is never used
  4265  0BA0  3001               	movlw	1
  4266  0BA1  00B0               	movwf	??_utoa
  4267  0BA2  0830               	movf	??_utoa,w
  4268  0BA3  07B4               	addwf	utoa@buf,f
  4269  0BA4                     l819:
  4270  0BA4  0008               	return
  4271  0BA5                     __end_of_utoa:
  4272                           
  4273                           	psect	text18
  4274  0988                     __ptext18:	
  4275 ;; *************** function ___lwmod *****************
  4276 ;; Defined at:
  4277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  divisor         2    7[BANK0 ] unsigned int 
  4280 ;;  dividend        2    9[BANK0 ] unsigned int 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  counter         1   11[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  2    7[BANK0 ] unsigned int 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       4       0       0       0
  4293 ;;      Locals:         0       1       0       0       0
  4294 ;;      Temps:          1       0       0       0       0
  4295 ;;      Totals:         1       5       0       0       0
  4296 ;;Total ram usage:        6 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    2
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_sprintf
  4303 ;;		_utoa
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           
  4308                           ;psect for function ___lwmod
  4309  0988                     ___lwmod:
  4310  0988                     l1964:	
  4311                           ;incstack = 0
  4312                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4313                           
  4314  0988  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0989  1303               	bcf	3,6	;RP1=0, select bank0
  4316  098A  0827               	movf	___lwmod@divisor,w
  4317  098B  0428               	iorwf	___lwmod@divisor+1,w
  4318  098C  1903               	btfsc	3,2
  4319  098D  298F               	goto	u1821
  4320  098E  2990               	goto	u1820
  4321  098F                     u1821:
  4322  098F  29BF               	goto	l1982
  4323  0990                     u1820:
  4324  0990                     l1966:
  4325  0990  01AB               	clrf	___lwmod@counter
  4326  0991  0AAB               	incf	___lwmod@counter,f
  4327  0992  299E               	goto	l1972
  4328  0993                     l1968:
  4329  0993  3001               	movlw	1
  4330  0994                     u1835:
  4331  0994  1003               	clrc
  4332  0995  0DA7               	rlf	___lwmod@divisor,f
  4333  0996  0DA8               	rlf	___lwmod@divisor+1,f
  4334  0997  3EFF               	addlw	-1
  4335  0998  1D03               	skipz
  4336  0999  2994               	goto	u1835
  4337  099A                     l1970:
  4338  099A  3001               	movlw	1
  4339  099B  00F5               	movwf	??___lwmod
  4340  099C  0875               	movf	??___lwmod,w
  4341  099D  07AB               	addwf	___lwmod@counter,f
  4342  099E                     l1972:
  4343  099E  1FA8               	btfss	___lwmod@divisor+1,7
  4344  099F  29A1               	goto	u1841
  4345  09A0  29A2               	goto	u1840
  4346  09A1                     u1841:
  4347  09A1  2993               	goto	l1968
  4348  09A2                     u1840:
  4349  09A2                     l1974:
  4350  09A2  0828               	movf	___lwmod@divisor+1,w
  4351  09A3  022A               	subwf	___lwmod@dividend+1,w
  4352  09A4  1D03               	skipz
  4353  09A5  29A8               	goto	u1855
  4354  09A6  0827               	movf	___lwmod@divisor,w
  4355  09A7  0229               	subwf	___lwmod@dividend,w
  4356  09A8                     u1855:
  4357  09A8  1C03               	skipc
  4358  09A9  29AB               	goto	u1851
  4359  09AA  29AC               	goto	u1850
  4360  09AB                     u1851:
  4361  09AB  29B2               	goto	l1978
  4362  09AC                     u1850:
  4363  09AC                     l1976:
  4364  09AC  0827               	movf	___lwmod@divisor,w
  4365  09AD  02A9               	subwf	___lwmod@dividend,f
  4366  09AE  0828               	movf	___lwmod@divisor+1,w
  4367  09AF  1C03               	skipc
  4368  09B0  03AA               	decf	___lwmod@dividend+1,f
  4369  09B1  02AA               	subwf	___lwmod@dividend+1,f
  4370  09B2                     l1978:
  4371  09B2  3001               	movlw	1
  4372  09B3                     u1865:
  4373  09B3  1003               	clrc
  4374  09B4  0CA8               	rrf	___lwmod@divisor+1,f
  4375  09B5  0CA7               	rrf	___lwmod@divisor,f
  4376  09B6  3EFF               	addlw	-1
  4377  09B7  1D03               	skipz
  4378  09B8  29B3               	goto	u1865
  4379  09B9                     l1980:
  4380  09B9  3001               	movlw	1
  4381  09BA  02AB               	subwf	___lwmod@counter,f
  4382  09BB  1D03               	btfss	3,2
  4383  09BC  29BE               	goto	u1871
  4384  09BD  29BF               	goto	u1870
  4385  09BE                     u1871:
  4386  09BE  29A2               	goto	l1974
  4387  09BF                     u1870:
  4388  09BF                     l1982:
  4389  09BF  082A               	movf	___lwmod@dividend+1,w
  4390  09C0  00A8               	movwf	?___lwmod+1
  4391  09C1  0829               	movf	___lwmod@dividend,w
  4392  09C2  00A7               	movwf	?___lwmod
  4393  09C3                     l634:
  4394  09C3  0008               	return
  4395  09C4                     __end_of___lwmod:
  4396                           
  4397                           	psect	text19
  4398  09C4                     __ptext19:	
  4399 ;; *************** function ___lwdiv *****************
  4400 ;; Defined at:
  4401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  divisor         2    0[BANK0 ] unsigned int 
  4404 ;;  dividend        2    2[BANK0 ] unsigned int 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  quotient        2    5[BANK0 ] unsigned int 
  4407 ;;  counter         1    4[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    0[BANK0 ] unsigned int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       4       0       0       0
  4418 ;;      Locals:         0       3       0       0       0
  4419 ;;      Temps:          1       0       0       0       0
  4420 ;;      Totals:         1       7       0       0       0
  4421 ;;Total ram usage:        8 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    2
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_sprintf
  4428 ;;		_utoa
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function ___lwdiv
  4434  09C4                     ___lwdiv:
  4435  09C4                     l2918:	
  4436                           ;incstack = 0
  4437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4438                           
  4439  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  4440  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  4441  09C6  01A5               	clrf	___lwdiv@quotient
  4442  09C7  01A6               	clrf	___lwdiv@quotient+1
  4443  09C8                     l2920:
  4444  09C8  0820               	movf	___lwdiv@divisor,w
  4445  09C9  0421               	iorwf	___lwdiv@divisor+1,w
  4446  09CA  1903               	btfsc	3,2
  4447  09CB  29CD               	goto	u3411
  4448  09CC  29CE               	goto	u3410
  4449  09CD                     u3411:
  4450  09CD  2A05               	goto	l2940
  4451  09CE                     u3410:
  4452  09CE                     l2922:
  4453  09CE  01A4               	clrf	___lwdiv@counter
  4454  09CF  0AA4               	incf	___lwdiv@counter,f
  4455  09D0  29DC               	goto	l2928
  4456  09D1                     l2924:
  4457  09D1  3001               	movlw	1
  4458  09D2                     u3425:
  4459  09D2  1003               	clrc
  4460  09D3  0DA0               	rlf	___lwdiv@divisor,f
  4461  09D4  0DA1               	rlf	___lwdiv@divisor+1,f
  4462  09D5  3EFF               	addlw	-1
  4463  09D6  1D03               	skipz
  4464  09D7  29D2               	goto	u3425
  4465  09D8                     l2926:
  4466  09D8  3001               	movlw	1
  4467  09D9  00F4               	movwf	??___lwdiv
  4468  09DA  0874               	movf	??___lwdiv,w
  4469  09DB  07A4               	addwf	___lwdiv@counter,f
  4470  09DC                     l2928:
  4471  09DC  1FA1               	btfss	___lwdiv@divisor+1,7
  4472  09DD  29DF               	goto	u3431
  4473  09DE  29E0               	goto	u3430
  4474  09DF                     u3431:
  4475  09DF  29D1               	goto	l2924
  4476  09E0                     u3430:
  4477  09E0                     l2930:
  4478  09E0  3001               	movlw	1
  4479  09E1                     u3445:
  4480  09E1  1003               	clrc
  4481  09E2  0DA5               	rlf	___lwdiv@quotient,f
  4482  09E3  0DA6               	rlf	___lwdiv@quotient+1,f
  4483  09E4  3EFF               	addlw	-1
  4484  09E5  1D03               	skipz
  4485  09E6  29E1               	goto	u3445
  4486  09E7  0821               	movf	___lwdiv@divisor+1,w
  4487  09E8  0223               	subwf	___lwdiv@dividend+1,w
  4488  09E9  1D03               	skipz
  4489  09EA  29ED               	goto	u3455
  4490  09EB  0820               	movf	___lwdiv@divisor,w
  4491  09EC  0222               	subwf	___lwdiv@dividend,w
  4492  09ED                     u3455:
  4493  09ED  1C03               	skipc
  4494  09EE  29F0               	goto	u3451
  4495  09EF  29F1               	goto	u3450
  4496  09F0                     u3451:
  4497  09F0  29F8               	goto	l2936
  4498  09F1                     u3450:
  4499  09F1                     l2932:
  4500  09F1  0820               	movf	___lwdiv@divisor,w
  4501  09F2  02A2               	subwf	___lwdiv@dividend,f
  4502  09F3  0821               	movf	___lwdiv@divisor+1,w
  4503  09F4  1C03               	skipc
  4504  09F5  03A3               	decf	___lwdiv@dividend+1,f
  4505  09F6  02A3               	subwf	___lwdiv@dividend+1,f
  4506  09F7                     l2934:
  4507  09F7  1425               	bsf	___lwdiv@quotient,0
  4508  09F8                     l2936:
  4509  09F8  3001               	movlw	1
  4510  09F9                     u3465:
  4511  09F9  1003               	clrc
  4512  09FA  0CA1               	rrf	___lwdiv@divisor+1,f
  4513  09FB  0CA0               	rrf	___lwdiv@divisor,f
  4514  09FC  3EFF               	addlw	-1
  4515  09FD  1D03               	skipz
  4516  09FE  29F9               	goto	u3465
  4517  09FF                     l2938:
  4518  09FF  3001               	movlw	1
  4519  0A00  02A4               	subwf	___lwdiv@counter,f
  4520  0A01  1D03               	btfss	3,2
  4521  0A02  2A04               	goto	u3471
  4522  0A03  2A05               	goto	u3470
  4523  0A04                     u3471:
  4524  0A04  29E0               	goto	l2930
  4525  0A05                     u3470:
  4526  0A05                     l2940:
  4527  0A05  0826               	movf	___lwdiv@quotient+1,w
  4528  0A06  00A1               	movwf	?___lwdiv+1
  4529  0A07  0825               	movf	___lwdiv@quotient,w
  4530  0A08  00A0               	movwf	?___lwdiv
  4531  0A09                     l624:
  4532  0A09  0008               	return
  4533  0A0A                     __end_of___lwdiv:
  4534                           
  4535                           	psect	text20
  4536  06F4                     __ptext20:	
  4537 ;; *************** function ___xxtofl *****************
  4538 ;; Defined at:
  4539 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  sign            1    wreg     unsigned char 
  4542 ;;  val             4    0[BANK0 ] long 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  sign            1    8[BANK0 ] unsigned char 
  4545 ;;  arg             4   10[BANK0 ] unsigned long 
  4546 ;;  exp             1    9[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  4    0[BANK0 ] unsigned char 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       4       0       0       0
  4557 ;;      Locals:         0       6       0       0       0
  4558 ;;      Temps:          0       4       0       0       0
  4559 ;;      Totals:         0      14       0       0       0
  4560 ;;Total ram usage:       14 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    2
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_ADC
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function ___xxtofl
  4572  06F4                     ___xxtofl:
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4576                           ;___xxtofl@sign stored from wreg
  4577  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  4578  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  4579  06F6  00A8               	movwf	___xxtofl@sign
  4580  06F7                     l3370:
  4581  06F7  0828               	movf	___xxtofl@sign,w
  4582  06F8  1903               	btfsc	3,2
  4583  06F9  2EFB               	goto	u4311
  4584  06FA  2EFC               	goto	u4310
  4585  06FB                     u4311:
  4586  06FB  2F10               	goto	l3376
  4587  06FC                     u4310:
  4588  06FC                     l3372:
  4589  06FC  1FA3               	btfss	___xxtofl@val+3,7
  4590  06FD  2EFF               	goto	u4321
  4591  06FE  2F00               	goto	u4320
  4592  06FF                     u4321:
  4593  06FF  2F10               	goto	l3376
  4594  0700                     u4320:
  4595  0700                     l3374:
  4596  0700  0920               	comf	___xxtofl@val,w
  4597  0701  00AA               	movwf	___xxtofl@arg
  4598  0702  0921               	comf	___xxtofl@val+1,w
  4599  0703  00AB               	movwf	___xxtofl@arg+1
  4600  0704  0922               	comf	___xxtofl@val+2,w
  4601  0705  00AC               	movwf	___xxtofl@arg+2
  4602  0706  0923               	comf	___xxtofl@val+3,w
  4603  0707  00AD               	movwf	___xxtofl@arg+3
  4604  0708  0AAA               	incf	___xxtofl@arg,f
  4605  0709  1903               	skipnz
  4606  070A  0AAB               	incf	___xxtofl@arg+1,f
  4607  070B  1903               	skipnz
  4608  070C  0AAC               	incf	___xxtofl@arg+2,f
  4609  070D  1903               	skipnz
  4610  070E  0AAD               	incf	___xxtofl@arg+3,f
  4611  070F  2F18               	goto	l785
  4612  0710                     l3376:
  4613  0710  0823               	movf	___xxtofl@val+3,w
  4614  0711  00AD               	movwf	___xxtofl@arg+3
  4615  0712  0822               	movf	___xxtofl@val+2,w
  4616  0713  00AC               	movwf	___xxtofl@arg+2
  4617  0714  0821               	movf	___xxtofl@val+1,w
  4618  0715  00AB               	movwf	___xxtofl@arg+1
  4619  0716  0820               	movf	___xxtofl@val,w
  4620  0717  00AA               	movwf	___xxtofl@arg
  4621  0718                     l785:
  4622  0718  0823               	movf	___xxtofl@val+3,w
  4623  0719  0422               	iorwf	___xxtofl@val+2,w
  4624  071A  0421               	iorwf	___xxtofl@val+1,w
  4625  071B  0420               	iorwf	___xxtofl@val,w
  4626  071C  1D03               	skipz
  4627  071D  2F1F               	goto	u4331
  4628  071E  2F20               	goto	u4330
  4629  071F                     u4331:
  4630  071F  2F29               	goto	l3382
  4631  0720                     u4330:
  4632  0720                     l3378:
  4633  0720  3000               	movlw	0
  4634  0721  00A3               	movwf	?___xxtofl+3
  4635  0722  3000               	movlw	0
  4636  0723  00A2               	movwf	?___xxtofl+2
  4637  0724  3000               	movlw	0
  4638  0725  00A1               	movwf	?___xxtofl+1
  4639  0726  3000               	movlw	0
  4640  0727  00A0               	movwf	?___xxtofl
  4641  0728  2FAF               	goto	l787
  4642  0729                     l3382:
  4643  0729  3096               	movlw	150
  4644  072A  00A4               	movwf	??___xxtofl
  4645  072B  0824               	movf	??___xxtofl,w
  4646  072C  00A9               	movwf	___xxtofl@exp
  4647  072D  2F3B               	goto	l3386
  4648  072E                     l3384:
  4649  072E  3001               	movlw	1
  4650  072F  00A4               	movwf	??___xxtofl
  4651  0730  0824               	movf	??___xxtofl,w
  4652  0731  07A9               	addwf	___xxtofl@exp,f
  4653  0732  3001               	movlw	1
  4654  0733                     u4345:
  4655  0733  1003               	clrc
  4656  0734  0CAD               	rrf	___xxtofl@arg+3,f
  4657  0735  0CAC               	rrf	___xxtofl@arg+2,f
  4658  0736  0CAB               	rrf	___xxtofl@arg+1,f
  4659  0737  0CAA               	rrf	___xxtofl@arg,f
  4660  0738  3EFF               	addlw	-1
  4661  0739  1D03               	skipz
  4662  073A  2F33               	goto	u4345
  4663  073B                     l3386:
  4664  073B  30FE               	movlw	254
  4665  073C  052D               	andwf	___xxtofl@arg+3,w
  4666  073D  1D03               	btfss	3,2
  4667  073E  2F40               	goto	u4351
  4668  073F  2F41               	goto	u4350
  4669  0740                     u4351:
  4670  0740  2F2E               	goto	l3384
  4671  0741                     u4350:
  4672  0741  2F5D               	goto	l791
  4673  0742                     l3388:
  4674  0742  3001               	movlw	1
  4675  0743  00A4               	movwf	??___xxtofl
  4676  0744  0824               	movf	??___xxtofl,w
  4677  0745  07A9               	addwf	___xxtofl@exp,f
  4678  0746                     l3390:
  4679  0746  3001               	movlw	1
  4680  0747  07AA               	addwf	___xxtofl@arg,f
  4681  0748  3000               	movlw	0
  4682  0749  1803               	skipnc
  4683  074A  3001               	movlw	1
  4684  074B  07AB               	addwf	___xxtofl@arg+1,f
  4685  074C  3000               	movlw	0
  4686  074D  1803               	skipnc
  4687  074E  3001               	movlw	1
  4688  074F  07AC               	addwf	___xxtofl@arg+2,f
  4689  0750  3000               	movlw	0
  4690  0751  1803               	skipnc
  4691  0752  3001               	movlw	1
  4692  0753  07AD               	addwf	___xxtofl@arg+3,f
  4693  0754                     l3392:
  4694  0754  3001               	movlw	1
  4695  0755                     u4365:
  4696  0755  1003               	clrc
  4697  0756  0CAD               	rrf	___xxtofl@arg+3,f
  4698  0757  0CAC               	rrf	___xxtofl@arg+2,f
  4699  0758  0CAB               	rrf	___xxtofl@arg+1,f
  4700  0759  0CAA               	rrf	___xxtofl@arg,f
  4701  075A  3EFF               	addlw	-1
  4702  075B  1D03               	skipz
  4703  075C  2F55               	goto	u4365
  4704  075D                     l791:
  4705  075D  30FF               	movlw	255
  4706  075E  052D               	andwf	___xxtofl@arg+3,w
  4707  075F  1D03               	btfss	3,2
  4708  0760  2F62               	goto	u4371
  4709  0761  2F63               	goto	u4370
  4710  0762                     u4371:
  4711  0762  2F42               	goto	l3388
  4712  0763                     u4370:
  4713  0763  2F6F               	goto	l3396
  4714  0764                     l3394:
  4715  0764  3001               	movlw	1
  4716  0765  02A9               	subwf	___xxtofl@exp,f
  4717  0766  3001               	movlw	1
  4718  0767  00A4               	movwf	??___xxtofl
  4719  0768                     u4385:
  4720  0768  1003               	clrc
  4721  0769  0DAA               	rlf	___xxtofl@arg,f
  4722  076A  0DAB               	rlf	___xxtofl@arg+1,f
  4723  076B  0DAC               	rlf	___xxtofl@arg+2,f
  4724  076C  0DAD               	rlf	___xxtofl@arg+3,f
  4725  076D  0BA4               	decfsz	??___xxtofl,f
  4726  076E  2F68               	goto	u4385
  4727  076F                     l3396:
  4728  076F  1BAC               	btfsc	___xxtofl@arg+2,7
  4729  0770  2F72               	goto	u4391
  4730  0771  2F73               	goto	u4390
  4731  0772                     u4391:
  4732  0772  2F79               	goto	l798
  4733  0773                     u4390:
  4734  0773                     l3398:
  4735  0773  3002               	movlw	2
  4736  0774  0229               	subwf	___xxtofl@exp,w
  4737  0775  1803               	skipnc
  4738  0776  2F78               	goto	u4401
  4739  0777  2F79               	goto	u4400
  4740  0778                     u4401:
  4741  0778  2F64               	goto	l3394
  4742  0779                     u4400:
  4743  0779                     l798:
  4744  0779  1829               	btfsc	___xxtofl@exp,0
  4745  077A  2F7C               	goto	u4411
  4746  077B  2F7D               	goto	u4410
  4747  077C                     u4411:
  4748  077C  2F85               	goto	l799
  4749  077D                     u4410:
  4750  077D                     l3400:
  4751  077D  30FF               	movlw	255
  4752  077E  05AA               	andwf	___xxtofl@arg,f
  4753  077F  30FF               	movlw	255
  4754  0780  05AB               	andwf	___xxtofl@arg+1,f
  4755  0781  307F               	movlw	127
  4756  0782  05AC               	andwf	___xxtofl@arg+2,f
  4757  0783  30FF               	movlw	255
  4758  0784  05AD               	andwf	___xxtofl@arg+3,f
  4759  0785                     l799:
  4760  0785  1003               	clrc
  4761  0786  0CA9               	rrf	___xxtofl@exp,f
  4762  0787                     l3402:
  4763  0787  0829               	movf	___xxtofl@exp,w
  4764  0788  00A4               	movwf	??___xxtofl
  4765  0789  01A5               	clrf	??___xxtofl+1
  4766  078A  01A6               	clrf	??___xxtofl+2
  4767  078B  01A7               	clrf	??___xxtofl+3
  4768  078C  3018               	movlw	24
  4769  078D                     u4425:
  4770  078D  1003               	clrc
  4771  078E  0DA4               	rlf	??___xxtofl,f
  4772  078F  0DA5               	rlf	??___xxtofl+1,f
  4773  0790  0DA6               	rlf	??___xxtofl+2,f
  4774  0791  0DA7               	rlf	??___xxtofl+3,f
  4775  0792                     u4420:
  4776  0792  3EFF               	addlw	-1
  4777  0793  1D03               	skipz
  4778  0794  2F8D               	goto	u4425
  4779  0795  0824               	movf	??___xxtofl,w
  4780  0796  04AA               	iorwf	___xxtofl@arg,f
  4781  0797  0825               	movf	??___xxtofl+1,w
  4782  0798  04AB               	iorwf	___xxtofl@arg+1,f
  4783  0799  0826               	movf	??___xxtofl+2,w
  4784  079A  04AC               	iorwf	___xxtofl@arg+2,f
  4785  079B  0827               	movf	??___xxtofl+3,w
  4786  079C  04AD               	iorwf	___xxtofl@arg+3,f
  4787  079D                     l3404:
  4788  079D  0828               	movf	___xxtofl@sign,w
  4789  079E  1903               	btfsc	3,2
  4790  079F  2FA1               	goto	u4431
  4791  07A0  2FA2               	goto	u4430
  4792  07A1                     u4431:
  4793  07A1  2FA7               	goto	l3410
  4794  07A2                     u4430:
  4795  07A2                     l3406:
  4796  07A2  1FA3               	btfss	___xxtofl@val+3,7
  4797  07A3  2FA5               	goto	u4441
  4798  07A4  2FA6               	goto	u4440
  4799  07A5                     u4441:
  4800  07A5  2FA7               	goto	l3410
  4801  07A6                     u4440:
  4802  07A6                     l3408:
  4803  07A6  17AD               	bsf	___xxtofl@arg+3,7
  4804  07A7                     l3410:
  4805  07A7  082D               	movf	___xxtofl@arg+3,w
  4806  07A8  00A3               	movwf	?___xxtofl+3
  4807  07A9  082C               	movf	___xxtofl@arg+2,w
  4808  07AA  00A2               	movwf	?___xxtofl+2
  4809  07AB  082B               	movf	___xxtofl@arg+1,w
  4810  07AC  00A1               	movwf	?___xxtofl+1
  4811  07AD  082A               	movf	___xxtofl@arg,w
  4812  07AE  00A0               	movwf	?___xxtofl
  4813  07AF                     l787:
  4814  07AF  0008               	return
  4815  07B0                     __end_of___xxtofl:
  4816                           
  4817                           	psect	text21
  4818  0BA5                     __ptext21:	
  4819 ;; *************** function ___fltol *****************
  4820 ;; Defined at:
  4821 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  f1              4   40[BANK0 ] unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  exp1            1   50[BANK0 ] unsigned char 
  4826 ;;  sign1           1   49[BANK0 ] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  4   40[BANK0 ] long 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4836 ;;      Params:         0       4       0       0       0
  4837 ;;      Locals:         0       2       0       0       0
  4838 ;;      Temps:          0       5       0       0       0
  4839 ;;      Totals:         0      11       0       0       0
  4840 ;;Total ram usage:       11 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_ADC
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function ___fltol
  4852  0BA5                     ___fltol:
  4853  0BA5                     l3194:	
  4854                           ;incstack = 0
  4855                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4856                           
  4857  0BA5  1003               	clrc
  4858  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0BA8  0D4A               	rlf	___fltol@f1+2,w
  4861  0BA9  0D4B               	rlf	___fltol@f1+3,w
  4862  0BAA  00CC               	movwf	??___fltol
  4863  0BAB  084C               	movf	??___fltol,w
  4864  0BAC  00D2               	movwf	___fltol@exp1
  4865  0BAD  0852               	movf	___fltol@exp1,w
  4866  0BAE  1D03               	btfss	3,2
  4867  0BAF  2BB1               	goto	u3841
  4868  0BB0  2BB2               	goto	u3840
  4869  0BB1                     u3841:
  4870  0BB1  2BBB               	goto	l3200
  4871  0BB2                     u3840:
  4872  0BB2                     l3196:
  4873  0BB2  3000               	movlw	0
  4874  0BB3  00CB               	movwf	?___fltol+3
  4875  0BB4  3000               	movlw	0
  4876  0BB5  00CA               	movwf	?___fltol+2
  4877  0BB6  3000               	movlw	0
  4878  0BB7  00C9               	movwf	?___fltol+1
  4879  0BB8  3000               	movlw	0
  4880  0BB9  00C8               	movwf	?___fltol
  4881  0BBA  2C20               	goto	l538
  4882  0BBB                     l3200:
  4883  0BBB  0848               	movf	___fltol@f1,w
  4884  0BBC  00CC               	movwf	??___fltol
  4885  0BBD  0849               	movf	___fltol@f1+1,w
  4886  0BBE  00CD               	movwf	??___fltol+1
  4887  0BBF  084A               	movf	___fltol@f1+2,w
  4888  0BC0  00CE               	movwf	??___fltol+2
  4889  0BC1  084B               	movf	___fltol@f1+3,w
  4890  0BC2  00CF               	movwf	??___fltol+3
  4891  0BC3  301F               	movlw	31
  4892  0BC4                     u3855:
  4893  0BC4  1003               	clrc
  4894  0BC5  0CCF               	rrf	??___fltol+3,f
  4895  0BC6  0CCE               	rrf	??___fltol+2,f
  4896  0BC7  0CCD               	rrf	??___fltol+1,f
  4897  0BC8  0CCC               	rrf	??___fltol,f
  4898  0BC9                     u3850:
  4899  0BC9  3EFF               	addlw	-1
  4900  0BCA  1D03               	skipz
  4901  0BCB  2BC4               	goto	u3855
  4902  0BCC  084C               	movf	??___fltol,w
  4903  0BCD  00D0               	movwf	??___fltol+4
  4904  0BCE  0850               	movf	??___fltol+4,w
  4905  0BCF  00D1               	movwf	___fltol@sign1
  4906  0BD0                     l3202:
  4907  0BD0  17CA               	bsf	___fltol@f1+2,7
  4908  0BD1                     l3204:
  4909  0BD1  30FF               	movlw	255
  4910  0BD2  05C8               	andwf	___fltol@f1,f
  4911  0BD3  30FF               	movlw	255
  4912  0BD4  05C9               	andwf	___fltol@f1+1,f
  4913  0BD5  30FF               	movlw	255
  4914  0BD6  05CA               	andwf	___fltol@f1+2,f
  4915  0BD7  3000               	movlw	0
  4916  0BD8  05CB               	andwf	___fltol@f1+3,f
  4917  0BD9                     l3206:
  4918  0BD9  3096               	movlw	150
  4919  0BDA  02D2               	subwf	___fltol@exp1,f
  4920  0BDB                     l3208:
  4921  0BDB  1FD2               	btfss	___fltol@exp1,7
  4922  0BDC  2BDE               	goto	u3861
  4923  0BDD  2BDF               	goto	u3860
  4924  0BDE                     u3861:
  4925  0BDE  2BF9               	goto	l3218
  4926  0BDF                     u3860:
  4927  0BDF                     l3210:
  4928  0BDF  0852               	movf	___fltol@exp1,w
  4929  0BE0  3A80               	xorlw	128
  4930  0BE1  3E97               	addlw	151
  4931  0BE2  1803               	skipnc
  4932  0BE3  2BE5               	goto	u3871
  4933  0BE4  2BE6               	goto	u3870
  4934  0BE5                     u3871:
  4935  0BE5  2BE7               	goto	l3216
  4936  0BE6                     u3870:
  4937  0BE6  2BB2               	goto	l3196
  4938  0BE7                     l3216:
  4939  0BE7  3001               	movlw	1
  4940  0BE8                     u3885:
  4941  0BE8  1003               	clrc
  4942  0BE9  0CCB               	rrf	___fltol@f1+3,f
  4943  0BEA  0CCA               	rrf	___fltol@f1+2,f
  4944  0BEB  0CC9               	rrf	___fltol@f1+1,f
  4945  0BEC  0CC8               	rrf	___fltol@f1,f
  4946  0BED  3EFF               	addlw	-1
  4947  0BEE  1D03               	skipz
  4948  0BEF  2BE8               	goto	u3885
  4949  0BF0  3001               	movlw	1
  4950  0BF1  00CC               	movwf	??___fltol
  4951  0BF2  084C               	movf	??___fltol,w
  4952  0BF3  07D2               	addwf	___fltol@exp1,f
  4953  0BF4  1D03               	btfss	3,2
  4954  0BF5  2BF7               	goto	u3891
  4955  0BF6  2BF8               	goto	u3890
  4956  0BF7                     u3891:
  4957  0BF7  2BE7               	goto	l3216
  4958  0BF8                     u3890:
  4959  0BF8  2C10               	goto	l3226
  4960  0BF9                     l3218:
  4961  0BF9  3020               	movlw	32
  4962  0BFA  0252               	subwf	___fltol@exp1,w
  4963  0BFB  1C03               	skipc
  4964  0BFC  2BFE               	goto	u3901
  4965  0BFD  2BFF               	goto	u3900
  4966  0BFE                     u3901:
  4967  0BFE  2C0B               	goto	l545
  4968  0BFF                     u3900:
  4969  0BFF  2BB2               	goto	l3196
  4970  0C00                     l3224:
  4971  0C00  3001               	movlw	1
  4972  0C01  00CC               	movwf	??___fltol
  4973  0C02                     u3915:
  4974  0C02  1003               	clrc
  4975  0C03  0DC8               	rlf	___fltol@f1,f
  4976  0C04  0DC9               	rlf	___fltol@f1+1,f
  4977  0C05  0DCA               	rlf	___fltol@f1+2,f
  4978  0C06  0DCB               	rlf	___fltol@f1+3,f
  4979  0C07  0BCC               	decfsz	??___fltol,f
  4980  0C08  2C02               	goto	u3915
  4981  0C09  3001               	movlw	1
  4982  0C0A  02D2               	subwf	___fltol@exp1,f
  4983  0C0B                     l545:
  4984  0C0B  0852               	movf	___fltol@exp1,w
  4985  0C0C  1D03               	btfss	3,2
  4986  0C0D  2C0F               	goto	u3921
  4987  0C0E  2C10               	goto	u3920
  4988  0C0F                     u3921:
  4989  0C0F  2C00               	goto	l3224
  4990  0C10                     u3920:
  4991  0C10                     l3226:
  4992  0C10  0851               	movf	___fltol@sign1,w
  4993  0C11  1903               	btfsc	3,2
  4994  0C12  2C14               	goto	u3931
  4995  0C13  2C15               	goto	u3930
  4996  0C14                     u3931:
  4997  0C14  2C20               	goto	l548
  4998  0C15                     u3930:
  4999  0C15                     l3228:
  5000  0C15  09C8               	comf	___fltol@f1,f
  5001  0C16  09C9               	comf	___fltol@f1+1,f
  5002  0C17  09CA               	comf	___fltol@f1+2,f
  5003  0C18  09CB               	comf	___fltol@f1+3,f
  5004  0C19  0AC8               	incf	___fltol@f1,f
  5005  0C1A  1903               	skipnz
  5006  0C1B  0AC9               	incf	___fltol@f1+1,f
  5007  0C1C  1903               	skipnz
  5008  0C1D  0ACA               	incf	___fltol@f1+2,f
  5009  0C1E  1903               	skipnz
  5010  0C1F  0ACB               	incf	___fltol@f1+3,f
  5011  0C20                     l548:
  5012  0C20                     l538:
  5013  0C20  0008               	return
  5014  0C21                     __end_of___fltol:
  5015                           
  5016                           	psect	text22
  5017  0393                     __ptext22:	
  5018 ;; *************** function ___flmul *****************
  5019 ;; Defined at:
  5020 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  b               4   14[BANK0 ] long 
  5023 ;;  a               4   18[BANK0 ] long 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  prod            4   34[BANK0 ] struct .
  5026 ;;  grs             4   29[BANK0 ] unsigned long 
  5027 ;;  temp            2   38[BANK0 ] struct .
  5028 ;;  bexp            1   33[BANK0 ] unsigned char 
  5029 ;;  aexp            1   28[BANK0 ] unsigned char 
  5030 ;;  sign            1   27[BANK0 ] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  4   14[BANK0 ] unsigned char 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5040 ;;      Params:         0       8       0       0       0
  5041 ;;      Locals:         0      13       0       0       0
  5042 ;;      Temps:          0       5       0       0       0
  5043 ;;      Totals:         0      26       0       0       0
  5044 ;;Total ram usage:       26 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    3
  5047 ;; This function calls:
  5048 ;;		__Umul8_16
  5049 ;; This function is called by:
  5050 ;;		_ADC
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           
  5055                           ;psect for function ___flmul
  5056  0393                     ___flmul:
  5057  0393                     l3230:	
  5058                           ;incstack = 0
  5059                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5060                           
  5061  0393  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0394  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0395  0831               	movf	___flmul@b+3,w
  5064  0396  3980               	andlw	128
  5065  0397  00B6               	movwf	??___flmul
  5066  0398  0836               	movf	??___flmul,w
  5067  0399  00BB               	movwf	___flmul@sign
  5068  039A                     l3232:
  5069  039A  0831               	movf	___flmul@b+3,w
  5070  039B  00B6               	movwf	??___flmul
  5071  039C  0736               	addwf	??___flmul,w
  5072  039D  00B7               	movwf	??___flmul+1
  5073  039E  0837               	movf	??___flmul+1,w
  5074  039F  00C1               	movwf	___flmul@bexp
  5075  03A0                     l3234:
  5076  03A0  1FB0               	btfss	___flmul@b+2,7
  5077  03A1  2BA3               	goto	u3941
  5078  03A2  2BA4               	goto	u3940
  5079  03A3                     u3941:
  5080  03A3  2BA5               	goto	l3238
  5081  03A4                     u3940:
  5082  03A4                     l3236:
  5083  03A4  1441               	bsf	___flmul@bexp,0
  5084  03A5                     l3238:
  5085  03A5  0841               	movf	___flmul@bexp,w
  5086  03A6  1903               	btfsc	3,2
  5087  03A7  2BA9               	goto	u3951
  5088  03A8  2BAA               	goto	u3950
  5089  03A9                     u3951:
  5090  03A9  2BB9               	goto	l3246
  5091  03AA                     u3950:
  5092  03AA                     l3240:
  5093  03AA  0A41               	incf	___flmul@bexp,w
  5094  03AB  1D03               	btfss	3,2
  5095  03AC  2BAE               	goto	u3961
  5096  03AD  2BAF               	goto	u3960
  5097  03AE                     u3961:
  5098  03AE  2BB7               	goto	l3244
  5099  03AF                     u3960:
  5100  03AF                     l3242:
  5101  03AF  3000               	movlw	0
  5102  03B0  00B1               	movwf	___flmul@b+3
  5103  03B1  3000               	movlw	0
  5104  03B2  00B0               	movwf	___flmul@b+2
  5105  03B3  3000               	movlw	0
  5106  03B4  00AF               	movwf	___flmul@b+1
  5107  03B5  3000               	movlw	0
  5108  03B6  00AE               	movwf	___flmul@b
  5109  03B7                     l3244:
  5110  03B7  17B0               	bsf	___flmul@b+2,7
  5111  03B8  2BC1               	goto	l3248
  5112  03B9                     l3246:
  5113  03B9  3000               	movlw	0
  5114  03BA  00B1               	movwf	___flmul@b+3
  5115  03BB  3000               	movlw	0
  5116  03BC  00B0               	movwf	___flmul@b+2
  5117  03BD  3000               	movlw	0
  5118  03BE  00AF               	movwf	___flmul@b+1
  5119  03BF  3000               	movlw	0
  5120  03C0  00AE               	movwf	___flmul@b
  5121  03C1                     l3248:
  5122  03C1  0835               	movf	___flmul@a+3,w
  5123  03C2  3980               	andlw	128
  5124  03C3  00B6               	movwf	??___flmul
  5125  03C4  0836               	movf	??___flmul,w
  5126  03C5  06BB               	xorwf	___flmul@sign,f
  5127  03C6                     l3250:
  5128  03C6  0835               	movf	___flmul@a+3,w
  5129  03C7  00B6               	movwf	??___flmul
  5130  03C8  0736               	addwf	??___flmul,w
  5131  03C9  00B7               	movwf	??___flmul+1
  5132  03CA  0837               	movf	??___flmul+1,w
  5133  03CB  00BC               	movwf	___flmul@aexp
  5134  03CC                     l3252:
  5135  03CC  1FB4               	btfss	___flmul@a+2,7
  5136  03CD  2BCF               	goto	u3971
  5137  03CE  2BD0               	goto	u3970
  5138  03CF                     u3971:
  5139  03CF  2BD1               	goto	l3256
  5140  03D0                     u3970:
  5141  03D0                     l3254:
  5142  03D0  143C               	bsf	___flmul@aexp,0
  5143  03D1                     l3256:
  5144  03D1  083C               	movf	___flmul@aexp,w
  5145  03D2  1903               	btfsc	3,2
  5146  03D3  2BD5               	goto	u3981
  5147  03D4  2BD6               	goto	u3980
  5148  03D5                     u3981:
  5149  03D5  2BE5               	goto	l3264
  5150  03D6                     u3980:
  5151  03D6                     l3258:
  5152  03D6  0A3C               	incf	___flmul@aexp,w
  5153  03D7  1D03               	btfss	3,2
  5154  03D8  2BDA               	goto	u3991
  5155  03D9  2BDB               	goto	u3990
  5156  03DA                     u3991:
  5157  03DA  2BE3               	goto	l3262
  5158  03DB                     u3990:
  5159  03DB                     l3260:
  5160  03DB  3000               	movlw	0
  5161  03DC  00B5               	movwf	___flmul@a+3
  5162  03DD  3000               	movlw	0
  5163  03DE  00B4               	movwf	___flmul@a+2
  5164  03DF  3000               	movlw	0
  5165  03E0  00B3               	movwf	___flmul@a+1
  5166  03E1  3000               	movlw	0
  5167  03E2  00B2               	movwf	___flmul@a
  5168  03E3                     l3262:
  5169  03E3  17B4               	bsf	___flmul@a+2,7
  5170  03E4  2BED               	goto	l3266
  5171  03E5                     l3264:
  5172  03E5  3000               	movlw	0
  5173  03E6  00B5               	movwf	___flmul@a+3
  5174  03E7  3000               	movlw	0
  5175  03E8  00B4               	movwf	___flmul@a+2
  5176  03E9  3000               	movlw	0
  5177  03EA  00B3               	movwf	___flmul@a+1
  5178  03EB  3000               	movlw	0
  5179  03EC  00B2               	movwf	___flmul@a
  5180  03ED                     l3266:
  5181  03ED  083C               	movf	___flmul@aexp,w
  5182  03EE  1903               	btfsc	3,2
  5183  03EF  2BF1               	goto	u4001
  5184  03F0  2BF2               	goto	u4000
  5185  03F1                     u4001:
  5186  03F1  2BF7               	goto	l3270
  5187  03F2                     u4000:
  5188  03F2                     l3268:
  5189  03F2  0841               	movf	___flmul@bexp,w
  5190  03F3  1D03               	btfss	3,2
  5191  03F4  2BF6               	goto	u4011
  5192  03F5  2BF7               	goto	u4010
  5193  03F6                     u4011:
  5194  03F6  2C00               	goto	l3274
  5195  03F7                     u4010:
  5196  03F7                     l3270:
  5197  03F7  3000               	movlw	0
  5198  03F8  00B1               	movwf	?___flmul+3
  5199  03F9  3000               	movlw	0
  5200  03FA  00B0               	movwf	?___flmul+2
  5201  03FB  3000               	movlw	0
  5202  03FC  00AF               	movwf	?___flmul+1
  5203  03FD  3000               	movlw	0
  5204  03FE  00AE               	movwf	?___flmul
  5205  03FF  2EF3               	goto	l741
  5206  0400                     l3274:
  5207  0400  082E               	movf	___flmul@b,w
  5208  0401  00B6               	movwf	??___flmul
  5209  0402  0836               	movf	??___flmul,w
  5210  0403  00F4               	movwf	__Umul8_16@multiplicand
  5211  0404  0834               	movf	___flmul@a+2,w
  5212  0405  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5213  040A  0875               	movf	?__Umul8_16+1,w
  5214  040B  1283               	bcf	3,5	;RP0=0, select bank0
  5215  040C  1303               	bcf	3,6	;RP1=0, select bank0
  5216  040D  00C7               	movwf	___flmul@temp+1
  5217  040E  0874               	movf	?__Umul8_16,w
  5218  040F  00C6               	movwf	___flmul@temp
  5219  0410                     l3276:
  5220  0410  0846               	movf	___flmul@temp,w
  5221  0411  00B6               	movwf	??___flmul
  5222  0412  01B7               	clrf	??___flmul+1
  5223  0413  01B8               	clrf	??___flmul+2
  5224  0414  01B9               	clrf	??___flmul+3
  5225  0415  0839               	movf	??___flmul+3,w
  5226  0416  00C0               	movwf	___flmul@grs+3
  5227  0417  0838               	movf	??___flmul+2,w
  5228  0418  00BF               	movwf	___flmul@grs+2
  5229  0419  0837               	movf	??___flmul+1,w
  5230  041A  00BE               	movwf	___flmul@grs+1
  5231  041B  0836               	movf	??___flmul,w
  5232  041C  00BD               	movwf	___flmul@grs
  5233  041D                     l3278:
  5234  041D  0847               	movf	___flmul@temp+1,w
  5235  041E  00B6               	movwf	??___flmul
  5236  041F  01B7               	clrf	??___flmul+1
  5237  0420  01B8               	clrf	??___flmul+2
  5238  0421  01B9               	clrf	??___flmul+3
  5239  0422  0839               	movf	??___flmul+3,w
  5240  0423  00C5               	movwf	___flmul@prod+3
  5241  0424  0838               	movf	??___flmul+2,w
  5242  0425  00C4               	movwf	___flmul@prod+2
  5243  0426  0837               	movf	??___flmul+1,w
  5244  0427  00C3               	movwf	___flmul@prod+1
  5245  0428  0836               	movf	??___flmul,w
  5246  0429  00C2               	movwf	___flmul@prod
  5247  042A  082F               	movf	___flmul@b+1,w
  5248  042B  00B6               	movwf	??___flmul
  5249  042C  0836               	movf	??___flmul,w
  5250  042D  00F4               	movwf	__Umul8_16@multiplicand
  5251  042E  0833               	movf	___flmul@a+1,w
  5252  042F  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5253  0434  0875               	movf	?__Umul8_16+1,w
  5254  0435  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0436  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0437  00C7               	movwf	___flmul@temp+1
  5257  0438  0874               	movf	?__Umul8_16,w
  5258  0439  00C6               	movwf	___flmul@temp
  5259  043A                     l3280:
  5260  043A  0846               	movf	___flmul@temp,w
  5261  043B  00B6               	movwf	??___flmul
  5262  043C  01B7               	clrf	??___flmul+1
  5263  043D  01B8               	clrf	??___flmul+2
  5264  043E  01B9               	clrf	??___flmul+3
  5265  043F  0836               	movf	??___flmul,w
  5266  0440  07BD               	addwf	___flmul@grs,f
  5267  0441  0837               	movf	??___flmul+1,w
  5268  0442  1103               	clrz
  5269  0443  1803               	skipnc
  5270  0444  3E01               	addlw	1
  5271  0445  1903               	skipnz
  5272  0446  2C48               	goto	u4021
  5273  0447  07BE               	addwf	___flmul@grs+1,f
  5274  0448                     u4021:
  5275  0448  0838               	movf	??___flmul+2,w
  5276  0449  1103               	clrz
  5277  044A  1803               	skipnc
  5278  044B  3E01               	addlw	1
  5279  044C  1903               	skipnz
  5280  044D  2C4F               	goto	u4022
  5281  044E  07BF               	addwf	___flmul@grs+2,f
  5282  044F                     u4022:
  5283  044F  0839               	movf	??___flmul+3,w
  5284  0450  1103               	clrz
  5285  0451  1803               	skipnc
  5286  0452  3E01               	addlw	1
  5287  0453  1903               	skipnz
  5288  0454  2C56               	goto	u4023
  5289  0455  07C0               	addwf	___flmul@grs+3,f
  5290  0456                     u4023:
  5291  0456                     l3282:
  5292  0456  0847               	movf	___flmul@temp+1,w
  5293  0457  00B6               	movwf	??___flmul
  5294  0458  01B7               	clrf	??___flmul+1
  5295  0459  01B8               	clrf	??___flmul+2
  5296  045A  01B9               	clrf	??___flmul+3
  5297  045B  0836               	movf	??___flmul,w
  5298  045C  07C2               	addwf	___flmul@prod,f
  5299  045D  0837               	movf	??___flmul+1,w
  5300  045E  1103               	clrz
  5301  045F  1803               	skipnc
  5302  0460  3E01               	addlw	1
  5303  0461  1903               	skipnz
  5304  0462  2C64               	goto	u4031
  5305  0463  07C3               	addwf	___flmul@prod+1,f
  5306  0464                     u4031:
  5307  0464  0838               	movf	??___flmul+2,w
  5308  0465  1103               	clrz
  5309  0466  1803               	skipnc
  5310  0467  3E01               	addlw	1
  5311  0468  1903               	skipnz
  5312  0469  2C6B               	goto	u4032
  5313  046A  07C4               	addwf	___flmul@prod+2,f
  5314  046B                     u4032:
  5315  046B  0839               	movf	??___flmul+3,w
  5316  046C  1103               	clrz
  5317  046D  1803               	skipnc
  5318  046E  3E01               	addlw	1
  5319  046F  1903               	skipnz
  5320  0470  2C72               	goto	u4033
  5321  0471  07C5               	addwf	___flmul@prod+3,f
  5322  0472                     u4033:
  5323  0472  0830               	movf	___flmul@b+2,w
  5324  0473  00B6               	movwf	??___flmul
  5325  0474  0836               	movf	??___flmul,w
  5326  0475  00F4               	movwf	__Umul8_16@multiplicand
  5327  0476  0832               	movf	___flmul@a,w
  5328  0477  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5329  047C  0875               	movf	?__Umul8_16+1,w
  5330  047D  1283               	bcf	3,5	;RP0=0, select bank0
  5331  047E  1303               	bcf	3,6	;RP1=0, select bank0
  5332  047F  00C7               	movwf	___flmul@temp+1
  5333  0480  0874               	movf	?__Umul8_16,w
  5334  0481  00C6               	movwf	___flmul@temp
  5335  0482                     l3284:
  5336  0482  0846               	movf	___flmul@temp,w
  5337  0483  00B6               	movwf	??___flmul
  5338  0484  01B7               	clrf	??___flmul+1
  5339  0485  01B8               	clrf	??___flmul+2
  5340  0486  01B9               	clrf	??___flmul+3
  5341  0487  0836               	movf	??___flmul,w
  5342  0488  07BD               	addwf	___flmul@grs,f
  5343  0489  0837               	movf	??___flmul+1,w
  5344  048A  1103               	clrz
  5345  048B  1803               	skipnc
  5346  048C  3E01               	addlw	1
  5347  048D  1903               	skipnz
  5348  048E  2C90               	goto	u4041
  5349  048F  07BE               	addwf	___flmul@grs+1,f
  5350  0490                     u4041:
  5351  0490  0838               	movf	??___flmul+2,w
  5352  0491  1103               	clrz
  5353  0492  1803               	skipnc
  5354  0493  3E01               	addlw	1
  5355  0494  1903               	skipnz
  5356  0495  2C97               	goto	u4042
  5357  0496  07BF               	addwf	___flmul@grs+2,f
  5358  0497                     u4042:
  5359  0497  0839               	movf	??___flmul+3,w
  5360  0498  1103               	clrz
  5361  0499  1803               	skipnc
  5362  049A  3E01               	addlw	1
  5363  049B  1903               	skipnz
  5364  049C  2C9E               	goto	u4043
  5365  049D  07C0               	addwf	___flmul@grs+3,f
  5366  049E                     u4043:
  5367  049E                     l3286:
  5368  049E  0847               	movf	___flmul@temp+1,w
  5369  049F  00B6               	movwf	??___flmul
  5370  04A0  01B7               	clrf	??___flmul+1
  5371  04A1  01B8               	clrf	??___flmul+2
  5372  04A2  01B9               	clrf	??___flmul+3
  5373  04A3  0836               	movf	??___flmul,w
  5374  04A4  07C2               	addwf	___flmul@prod,f
  5375  04A5  0837               	movf	??___flmul+1,w
  5376  04A6  1103               	clrz
  5377  04A7  1803               	skipnc
  5378  04A8  3E01               	addlw	1
  5379  04A9  1903               	skipnz
  5380  04AA  2CAC               	goto	u4051
  5381  04AB  07C3               	addwf	___flmul@prod+1,f
  5382  04AC                     u4051:
  5383  04AC  0838               	movf	??___flmul+2,w
  5384  04AD  1103               	clrz
  5385  04AE  1803               	skipnc
  5386  04AF  3E01               	addlw	1
  5387  04B0  1903               	skipnz
  5388  04B1  2CB3               	goto	u4052
  5389  04B2  07C4               	addwf	___flmul@prod+2,f
  5390  04B3                     u4052:
  5391  04B3  0839               	movf	??___flmul+3,w
  5392  04B4  1103               	clrz
  5393  04B5  1803               	skipnc
  5394  04B6  3E01               	addlw	1
  5395  04B7  1903               	skipnz
  5396  04B8  2CBA               	goto	u4053
  5397  04B9  07C5               	addwf	___flmul@prod+3,f
  5398  04BA                     u4053:
  5399  04BA                     l3288:
  5400  04BA  3008               	movlw	8
  5401  04BB  00B6               	movwf	??___flmul
  5402  04BC                     u4065:
  5403  04BC  1003               	clrc
  5404  04BD  0DBD               	rlf	___flmul@grs,f
  5405  04BE  0DBE               	rlf	___flmul@grs+1,f
  5406  04BF  0DBF               	rlf	___flmul@grs+2,f
  5407  04C0  0DC0               	rlf	___flmul@grs+3,f
  5408  04C1  0BB6               	decfsz	??___flmul,f
  5409  04C2  2CBC               	goto	u4065
  5410  04C3                     l3290:
  5411  04C3  082F               	movf	___flmul@b+1,w
  5412  04C4  00B6               	movwf	??___flmul
  5413  04C5  0836               	movf	??___flmul,w
  5414  04C6  00F4               	movwf	__Umul8_16@multiplicand
  5415  04C7  0832               	movf	___flmul@a,w
  5416  04C8  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5417  04CD  0875               	movf	?__Umul8_16+1,w
  5418  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  5419  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  5420  04D0  00C7               	movwf	___flmul@temp+1
  5421  04D1  0874               	movf	?__Umul8_16,w
  5422  04D2  00C6               	movwf	___flmul@temp
  5423  04D3                     l3292:
  5424  04D3  0846               	movf	___flmul@temp,w
  5425  04D4  00B6               	movwf	??___flmul
  5426  04D5  0847               	movf	___flmul@temp+1,w
  5427  04D6  00B7               	movwf	??___flmul+1
  5428  04D7  01B8               	clrf	??___flmul+2
  5429  04D8  01B9               	clrf	??___flmul+3
  5430  04D9  0836               	movf	??___flmul,w
  5431  04DA  07BD               	addwf	___flmul@grs,f
  5432  04DB  0837               	movf	??___flmul+1,w
  5433  04DC  1103               	clrz
  5434  04DD  1803               	skipnc
  5435  04DE  3E01               	addlw	1
  5436  04DF  1903               	skipnz
  5437  04E0  2CE2               	goto	u4071
  5438  04E1  07BE               	addwf	___flmul@grs+1,f
  5439  04E2                     u4071:
  5440  04E2  0838               	movf	??___flmul+2,w
  5441  04E3  1103               	clrz
  5442  04E4  1803               	skipnc
  5443  04E5  3E01               	addlw	1
  5444  04E6  1903               	skipnz
  5445  04E7  2CE9               	goto	u4072
  5446  04E8  07BF               	addwf	___flmul@grs+2,f
  5447  04E9                     u4072:
  5448  04E9  0839               	movf	??___flmul+3,w
  5449  04EA  1103               	clrz
  5450  04EB  1803               	skipnc
  5451  04EC  3E01               	addlw	1
  5452  04ED  1903               	skipnz
  5453  04EE  2CF0               	goto	u4073
  5454  04EF  07C0               	addwf	___flmul@grs+3,f
  5455  04F0                     u4073:
  5456  04F0                     l3294:
  5457  04F0  082E               	movf	___flmul@b,w
  5458  04F1  00B6               	movwf	??___flmul
  5459  04F2  0836               	movf	??___flmul,w
  5460  04F3  00F4               	movwf	__Umul8_16@multiplicand
  5461  04F4  0833               	movf	___flmul@a+1,w
  5462  04F5  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5463  04FA  0875               	movf	?__Umul8_16+1,w
  5464  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  5465  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  5466  04FD  00C7               	movwf	___flmul@temp+1
  5467  04FE  0874               	movf	?__Umul8_16,w
  5468  04FF  00C6               	movwf	___flmul@temp
  5469  0500                     l3296:
  5470  0500  0846               	movf	___flmul@temp,w
  5471  0501  00B6               	movwf	??___flmul
  5472  0502  0847               	movf	___flmul@temp+1,w
  5473  0503  00B7               	movwf	??___flmul+1
  5474  0504  01B8               	clrf	??___flmul+2
  5475  0505  01B9               	clrf	??___flmul+3
  5476  0506  0836               	movf	??___flmul,w
  5477  0507  07BD               	addwf	___flmul@grs,f
  5478  0508  0837               	movf	??___flmul+1,w
  5479  0509  1103               	clrz
  5480  050A  1803               	skipnc
  5481  050B  3E01               	addlw	1
  5482  050C  1903               	skipnz
  5483  050D  2D0F               	goto	u4081
  5484  050E  07BE               	addwf	___flmul@grs+1,f
  5485  050F                     u4081:
  5486  050F  0838               	movf	??___flmul+2,w
  5487  0510  1103               	clrz
  5488  0511  1803               	skipnc
  5489  0512  3E01               	addlw	1
  5490  0513  1903               	skipnz
  5491  0514  2D16               	goto	u4082
  5492  0515  07BF               	addwf	___flmul@grs+2,f
  5493  0516                     u4082:
  5494  0516  0839               	movf	??___flmul+3,w
  5495  0517  1103               	clrz
  5496  0518  1803               	skipnc
  5497  0519  3E01               	addlw	1
  5498  051A  1903               	skipnz
  5499  051B  2D1D               	goto	u4083
  5500  051C  07C0               	addwf	___flmul@grs+3,f
  5501  051D                     u4083:
  5502  051D                     l3298:
  5503  051D  3008               	movlw	8
  5504  051E  00B6               	movwf	??___flmul
  5505  051F                     u4095:
  5506  051F  1003               	clrc
  5507  0520  0DBD               	rlf	___flmul@grs,f
  5508  0521  0DBE               	rlf	___flmul@grs+1,f
  5509  0522  0DBF               	rlf	___flmul@grs+2,f
  5510  0523  0DC0               	rlf	___flmul@grs+3,f
  5511  0524  0BB6               	decfsz	??___flmul,f
  5512  0525  2D1F               	goto	u4095
  5513  0526  082E               	movf	___flmul@b,w
  5514  0527  00B6               	movwf	??___flmul
  5515  0528  0836               	movf	??___flmul,w
  5516  0529  00F4               	movwf	__Umul8_16@multiplicand
  5517  052A  0832               	movf	___flmul@a,w
  5518  052B  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5519  0530  0875               	movf	?__Umul8_16+1,w
  5520  0531  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0532  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0533  00C7               	movwf	___flmul@temp+1
  5523  0534  0874               	movf	?__Umul8_16,w
  5524  0535  00C6               	movwf	___flmul@temp
  5525  0536                     l3300:
  5526  0536  0846               	movf	___flmul@temp,w
  5527  0537  00B6               	movwf	??___flmul
  5528  0538  0847               	movf	___flmul@temp+1,w
  5529  0539  00B7               	movwf	??___flmul+1
  5530  053A  01B8               	clrf	??___flmul+2
  5531  053B  01B9               	clrf	??___flmul+3
  5532  053C  0836               	movf	??___flmul,w
  5533  053D  07BD               	addwf	___flmul@grs,f
  5534  053E  0837               	movf	??___flmul+1,w
  5535  053F  1103               	clrz
  5536  0540  1803               	skipnc
  5537  0541  3E01               	addlw	1
  5538  0542  1903               	skipnz
  5539  0543  2D45               	goto	u4101
  5540  0544  07BE               	addwf	___flmul@grs+1,f
  5541  0545                     u4101:
  5542  0545  0838               	movf	??___flmul+2,w
  5543  0546  1103               	clrz
  5544  0547  1803               	skipnc
  5545  0548  3E01               	addlw	1
  5546  0549  1903               	skipnz
  5547  054A  2D4C               	goto	u4102
  5548  054B  07BF               	addwf	___flmul@grs+2,f
  5549  054C                     u4102:
  5550  054C  0839               	movf	??___flmul+3,w
  5551  054D  1103               	clrz
  5552  054E  1803               	skipnc
  5553  054F  3E01               	addlw	1
  5554  0550  1903               	skipnz
  5555  0551  2D53               	goto	u4103
  5556  0552  07C0               	addwf	___flmul@grs+3,f
  5557  0553                     u4103:
  5558  0553                     l3302:
  5559  0553  082F               	movf	___flmul@b+1,w
  5560  0554  00B6               	movwf	??___flmul
  5561  0555  0836               	movf	??___flmul,w
  5562  0556  00F4               	movwf	__Umul8_16@multiplicand
  5563  0557  0834               	movf	___flmul@a+2,w
  5564  0558  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5565  055D  0875               	movf	?__Umul8_16+1,w
  5566  055E  1283               	bcf	3,5	;RP0=0, select bank0
  5567  055F  1303               	bcf	3,6	;RP1=0, select bank0
  5568  0560  00C7               	movwf	___flmul@temp+1
  5569  0561  0874               	movf	?__Umul8_16,w
  5570  0562  00C6               	movwf	___flmul@temp
  5571  0563  0846               	movf	___flmul@temp,w
  5572  0564  00B6               	movwf	??___flmul
  5573  0565  0847               	movf	___flmul@temp+1,w
  5574  0566  00B7               	movwf	??___flmul+1
  5575  0567  01B8               	clrf	??___flmul+2
  5576  0568  01B9               	clrf	??___flmul+3
  5577  0569  0836               	movf	??___flmul,w
  5578  056A  07C2               	addwf	___flmul@prod,f
  5579  056B  0837               	movf	??___flmul+1,w
  5580  056C  1103               	clrz
  5581  056D  1803               	skipnc
  5582  056E  3E01               	addlw	1
  5583  056F  1903               	skipnz
  5584  0570  2D72               	goto	u4111
  5585  0571  07C3               	addwf	___flmul@prod+1,f
  5586  0572                     u4111:
  5587  0572  0838               	movf	??___flmul+2,w
  5588  0573  1103               	clrz
  5589  0574  1803               	skipnc
  5590  0575  3E01               	addlw	1
  5591  0576  1903               	skipnz
  5592  0577  2D79               	goto	u4112
  5593  0578  07C4               	addwf	___flmul@prod+2,f
  5594  0579                     u4112:
  5595  0579  0839               	movf	??___flmul+3,w
  5596  057A  1103               	clrz
  5597  057B  1803               	skipnc
  5598  057C  3E01               	addlw	1
  5599  057D  1903               	skipnz
  5600  057E  2D80               	goto	u4113
  5601  057F  07C5               	addwf	___flmul@prod+3,f
  5602  0580                     u4113:
  5603  0580                     l3304:
  5604  0580  0830               	movf	___flmul@b+2,w
  5605  0581  00B6               	movwf	??___flmul
  5606  0582  0836               	movf	??___flmul,w
  5607  0583  00F4               	movwf	__Umul8_16@multiplicand
  5608  0584  0833               	movf	___flmul@a+1,w
  5609  0585  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5610  058A  0875               	movf	?__Umul8_16+1,w
  5611  058B  1283               	bcf	3,5	;RP0=0, select bank0
  5612  058C  1303               	bcf	3,6	;RP1=0, select bank0
  5613  058D  00C7               	movwf	___flmul@temp+1
  5614  058E  0874               	movf	?__Umul8_16,w
  5615  058F  00C6               	movwf	___flmul@temp
  5616  0590                     l3306:
  5617  0590  0846               	movf	___flmul@temp,w
  5618  0591  00B6               	movwf	??___flmul
  5619  0592  0847               	movf	___flmul@temp+1,w
  5620  0593  00B7               	movwf	??___flmul+1
  5621  0594  01B8               	clrf	??___flmul+2
  5622  0595  01B9               	clrf	??___flmul+3
  5623  0596  0836               	movf	??___flmul,w
  5624  0597  07C2               	addwf	___flmul@prod,f
  5625  0598  0837               	movf	??___flmul+1,w
  5626  0599  1103               	clrz
  5627  059A  1803               	skipnc
  5628  059B  3E01               	addlw	1
  5629  059C  1903               	skipnz
  5630  059D  2D9F               	goto	u4121
  5631  059E  07C3               	addwf	___flmul@prod+1,f
  5632  059F                     u4121:
  5633  059F  0838               	movf	??___flmul+2,w
  5634  05A0  1103               	clrz
  5635  05A1  1803               	skipnc
  5636  05A2  3E01               	addlw	1
  5637  05A3  1903               	skipnz
  5638  05A4  2DA6               	goto	u4122
  5639  05A5  07C4               	addwf	___flmul@prod+2,f
  5640  05A6                     u4122:
  5641  05A6  0839               	movf	??___flmul+3,w
  5642  05A7  1103               	clrz
  5643  05A8  1803               	skipnc
  5644  05A9  3E01               	addlw	1
  5645  05AA  1903               	skipnz
  5646  05AB  2DAD               	goto	u4123
  5647  05AC  07C5               	addwf	___flmul@prod+3,f
  5648  05AD                     u4123:
  5649  05AD  0830               	movf	___flmul@b+2,w
  5650  05AE  00B6               	movwf	??___flmul
  5651  05AF  0836               	movf	??___flmul,w
  5652  05B0  00F4               	movwf	__Umul8_16@multiplicand
  5653  05B1  0834               	movf	___flmul@a+2,w
  5654  05B2  120A  158A  20E1  120A  118A  	fcall	__Umul8_16
  5655  05B7  0875               	movf	?__Umul8_16+1,w
  5656  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  5657  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  5658  05BA  00C7               	movwf	___flmul@temp+1
  5659  05BB  0874               	movf	?__Umul8_16,w
  5660  05BC  00C6               	movwf	___flmul@temp
  5661  05BD                     l3308:
  5662  05BD  0846               	movf	___flmul@temp,w
  5663  05BE  00B6               	movwf	??___flmul
  5664  05BF  0847               	movf	___flmul@temp+1,w
  5665  05C0  00B7               	movwf	??___flmul+1
  5666  05C1  01B8               	clrf	??___flmul+2
  5667  05C2  01B9               	clrf	??___flmul+3
  5668  05C3  3008               	movlw	8
  5669  05C4                     u4135:
  5670  05C4  1003               	clrc
  5671  05C5  0DB6               	rlf	??___flmul,f
  5672  05C6  0DB7               	rlf	??___flmul+1,f
  5673  05C7  0DB8               	rlf	??___flmul+2,f
  5674  05C8  0DB9               	rlf	??___flmul+3,f
  5675  05C9                     u4130:
  5676  05C9  3EFF               	addlw	-1
  5677  05CA  1D03               	skipz
  5678  05CB  2DC4               	goto	u4135
  5679  05CC  0836               	movf	??___flmul,w
  5680  05CD  07C2               	addwf	___flmul@prod,f
  5681  05CE  0837               	movf	??___flmul+1,w
  5682  05CF  1103               	clrz
  5683  05D0  1803               	skipnc
  5684  05D1  3E01               	addlw	1
  5685  05D2  1903               	skipnz
  5686  05D3  2DD5               	goto	u4141
  5687  05D4  07C3               	addwf	___flmul@prod+1,f
  5688  05D5                     u4141:
  5689  05D5  0838               	movf	??___flmul+2,w
  5690  05D6  1103               	clrz
  5691  05D7  1803               	skipnc
  5692  05D8  3E01               	addlw	1
  5693  05D9  1903               	skipnz
  5694  05DA  2DDC               	goto	u4142
  5695  05DB  07C4               	addwf	___flmul@prod+2,f
  5696  05DC                     u4142:
  5697  05DC  0839               	movf	??___flmul+3,w
  5698  05DD  1103               	clrz
  5699  05DE  1803               	skipnc
  5700  05DF  3E01               	addlw	1
  5701  05E0  1903               	skipnz
  5702  05E1  2DE3               	goto	u4143
  5703  05E2  07C5               	addwf	___flmul@prod+3,f
  5704  05E3                     u4143:
  5705  05E3                     l3310:
  5706  05E3  083D               	movf	___flmul@grs,w
  5707  05E4  00B6               	movwf	??___flmul
  5708  05E5  083E               	movf	___flmul@grs+1,w
  5709  05E6  00B7               	movwf	??___flmul+1
  5710  05E7  083F               	movf	___flmul@grs+2,w
  5711  05E8  00B8               	movwf	??___flmul+2
  5712  05E9  0840               	movf	___flmul@grs+3,w
  5713  05EA  00B9               	movwf	??___flmul+3
  5714  05EB  3018               	movlw	24
  5715  05EC                     u4155:
  5716  05EC  1003               	clrc
  5717  05ED  0CB9               	rrf	??___flmul+3,f
  5718  05EE  0CB8               	rrf	??___flmul+2,f
  5719  05EF  0CB7               	rrf	??___flmul+1,f
  5720  05F0  0CB6               	rrf	??___flmul,f
  5721  05F1                     u4150:
  5722  05F1  3EFF               	addlw	-1
  5723  05F2  1D03               	skipz
  5724  05F3  2DEC               	goto	u4155
  5725  05F4  0836               	movf	??___flmul,w
  5726  05F5  07C2               	addwf	___flmul@prod,f
  5727  05F6  0837               	movf	??___flmul+1,w
  5728  05F7  1103               	clrz
  5729  05F8  1803               	skipnc
  5730  05F9  3E01               	addlw	1
  5731  05FA  1903               	skipnz
  5732  05FB  2DFD               	goto	u4161
  5733  05FC  07C3               	addwf	___flmul@prod+1,f
  5734  05FD                     u4161:
  5735  05FD  0838               	movf	??___flmul+2,w
  5736  05FE  1103               	clrz
  5737  05FF  1803               	skipnc
  5738  0600  3E01               	addlw	1
  5739  0601  1903               	skipnz
  5740  0602  2E04               	goto	u4162
  5741  0603  07C4               	addwf	___flmul@prod+2,f
  5742  0604                     u4162:
  5743  0604  0839               	movf	??___flmul+3,w
  5744  0605  1103               	clrz
  5745  0606  1803               	skipnc
  5746  0607  3E01               	addlw	1
  5747  0608  1903               	skipnz
  5748  0609  2E0B               	goto	u4163
  5749  060A  07C5               	addwf	___flmul@prod+3,f
  5750  060B                     u4163:
  5751  060B                     l3312:
  5752  060B  3008               	movlw	8
  5753  060C  00B6               	movwf	??___flmul
  5754  060D                     u4175:
  5755  060D  1003               	clrc
  5756  060E  0DBD               	rlf	___flmul@grs,f
  5757  060F  0DBE               	rlf	___flmul@grs+1,f
  5758  0610  0DBF               	rlf	___flmul@grs+2,f
  5759  0611  0DC0               	rlf	___flmul@grs+3,f
  5760  0612  0BB6               	decfsz	??___flmul,f
  5761  0613  2E0D               	goto	u4175
  5762  0614                     l3314:
  5763  0614  0841               	movf	___flmul@bexp,w
  5764  0615  073C               	addwf	___flmul@aexp,w
  5765  0616  00B6               	movwf	??___flmul
  5766  0617  01B7               	clrf	??___flmul+1
  5767  0618  0DB7               	rlf	??___flmul+1,f
  5768  0619  0836               	movf	??___flmul,w
  5769  061A  3E82               	addlw	130
  5770  061B  00C6               	movwf	___flmul@temp
  5771  061C  0837               	movf	??___flmul+1,w
  5772  061D  1803               	skipnc
  5773  061E  3E01               	addlw	1
  5774  061F  3EFF               	addlw	255
  5775  0620  00C7               	movwf	___flmul@temp+1
  5776  0621  2E3F               	goto	l3326
  5777  0622                     l3316:
  5778  0622  3001               	movlw	1
  5779  0623  00B6               	movwf	??___flmul
  5780  0624                     u4185:
  5781  0624  1003               	clrc
  5782  0625  0DC2               	rlf	___flmul@prod,f
  5783  0626  0DC3               	rlf	___flmul@prod+1,f
  5784  0627  0DC4               	rlf	___flmul@prod+2,f
  5785  0628  0DC5               	rlf	___flmul@prod+3,f
  5786  0629  0BB6               	decfsz	??___flmul,f
  5787  062A  2E24               	goto	u4185
  5788  062B                     l3318:
  5789  062B  1FC0               	btfss	___flmul@grs+3,7
  5790  062C  2E2E               	goto	u4191
  5791  062D  2E2F               	goto	u4190
  5792  062E                     u4191:
  5793  062E  2E30               	goto	l3322
  5794  062F                     u4190:
  5795  062F                     l3320:
  5796  062F  1442               	bsf	___flmul@prod,0
  5797  0630                     l3322:
  5798  0630  3001               	movlw	1
  5799  0631  00B6               	movwf	??___flmul
  5800  0632                     u4205:
  5801  0632  1003               	clrc
  5802  0633  0DBD               	rlf	___flmul@grs,f
  5803  0634  0DBE               	rlf	___flmul@grs+1,f
  5804  0635  0DBF               	rlf	___flmul@grs+2,f
  5805  0636  0DC0               	rlf	___flmul@grs+3,f
  5806  0637  0BB6               	decfsz	??___flmul,f
  5807  0638  2E32               	goto	u4205
  5808  0639                     l3324:
  5809  0639  30FF               	movlw	255
  5810  063A  07C6               	addwf	___flmul@temp,f
  5811  063B  1803               	skipnc
  5812  063C  0AC7               	incf	___flmul@temp+1,f
  5813  063D  30FF               	movlw	255
  5814  063E  07C7               	addwf	___flmul@temp+1,f
  5815  063F                     l3326:
  5816  063F  1FC4               	btfss	___flmul@prod+2,7
  5817  0640  2E42               	goto	u4211
  5818  0641  2E43               	goto	u4210
  5819  0642                     u4211:
  5820  0642  2E22               	goto	l3316
  5821  0643                     u4210:
  5822  0643                     l3328:
  5823  0643  01BC               	clrf	___flmul@aexp
  5824  0644                     l3330:
  5825  0644  1FC0               	btfss	___flmul@grs+3,7
  5826  0645  2E47               	goto	u4221
  5827  0646  2E48               	goto	u4220
  5828  0647                     u4221:
  5829  0647  2E64               	goto	l3338
  5830  0648                     u4220:
  5831  0648                     l3332:
  5832  0648  30FF               	movlw	255
  5833  0649  053D               	andwf	___flmul@grs,w
  5834  064A  00B6               	movwf	??___flmul
  5835  064B  30FF               	movlw	255
  5836  064C  053E               	andwf	___flmul@grs+1,w
  5837  064D  00B7               	movwf	??___flmul+1
  5838  064E  30FF               	movlw	255
  5839  064F  053F               	andwf	___flmul@grs+2,w
  5840  0650  00B8               	movwf	??___flmul+2
  5841  0651  307F               	movlw	127
  5842  0652  0540               	andwf	___flmul@grs+3,w
  5843  0653  00B9               	movwf	??___flmul+3
  5844  0654  0839               	movf	??___flmul+3,w
  5845  0655  0438               	iorwf	??___flmul+2,w
  5846  0656  0437               	iorwf	??___flmul+1,w
  5847  0657  0436               	iorwf	??___flmul,w
  5848  0658  1903               	skipnz
  5849  0659  2E5B               	goto	u4231
  5850  065A  2E5C               	goto	u4230
  5851  065B                     u4231:
  5852  065B  2E5F               	goto	l747
  5853  065C                     u4230:
  5854  065C                     l3334:
  5855  065C  01BC               	clrf	___flmul@aexp
  5856  065D  0ABC               	incf	___flmul@aexp,f
  5857  065E  2E64               	goto	l3338
  5858  065F                     l747:
  5859  065F  1C42               	btfss	___flmul@prod,0
  5860  0660  2E62               	goto	u4241
  5861  0661  2E63               	goto	u4240
  5862  0662                     u4241:
  5863  0662  2E64               	goto	l3338
  5864  0663                     u4240:
  5865  0663  2E5C               	goto	l3334
  5866  0664                     l3338:
  5867  0664  083C               	movf	___flmul@aexp,w
  5868  0665  1903               	btfsc	3,2
  5869  0666  2E68               	goto	u4251
  5870  0667  2E69               	goto	u4250
  5871  0668                     u4251:
  5872  0668  2E9A               	goto	l3348
  5873  0669                     u4250:
  5874  0669                     l3340:
  5875  0669  3001               	movlw	1
  5876  066A  07C2               	addwf	___flmul@prod,f
  5877  066B  3000               	movlw	0
  5878  066C  1803               	skipnc
  5879  066D  3001               	movlw	1
  5880  066E  07C3               	addwf	___flmul@prod+1,f
  5881  066F  3000               	movlw	0
  5882  0670  1803               	skipnc
  5883  0671  3001               	movlw	1
  5884  0672  07C4               	addwf	___flmul@prod+2,f
  5885  0673  3000               	movlw	0
  5886  0674  1803               	skipnc
  5887  0675  3001               	movlw	1
  5888  0676  07C5               	addwf	___flmul@prod+3,f
  5889  0677                     l3342:
  5890  0677  1C45               	btfss	___flmul@prod+3,0
  5891  0678  2E7A               	goto	u4261
  5892  0679  2E7B               	goto	u4260
  5893  067A                     u4261:
  5894  067A  2E9A               	goto	l3348
  5895  067B                     u4260:
  5896  067B                     l3344:
  5897  067B  0842               	movf	___flmul@prod,w
  5898  067C  00B6               	movwf	??___flmul
  5899  067D  0843               	movf	___flmul@prod+1,w
  5900  067E  00B7               	movwf	??___flmul+1
  5901  067F  0844               	movf	___flmul@prod+2,w
  5902  0680  00B8               	movwf	??___flmul+2
  5903  0681  0845               	movf	___flmul@prod+3,w
  5904  0682  00B9               	movwf	??___flmul+3
  5905  0683  3001               	movlw	1
  5906  0684  00BA               	movwf	??___flmul+4
  5907  0685                     u4275:
  5908  0685  0D39               	rlf	??___flmul+3,w
  5909  0686  0CB9               	rrf	??___flmul+3,f
  5910  0687  0CB8               	rrf	??___flmul+2,f
  5911  0688  0CB7               	rrf	??___flmul+1,f
  5912  0689  0CB6               	rrf	??___flmul,f
  5913  068A                     u4270:
  5914  068A  0BBA               	decfsz	??___flmul+4,f
  5915  068B  2E85               	goto	u4275
  5916  068C  0839               	movf	??___flmul+3,w
  5917  068D  00C5               	movwf	___flmul@prod+3
  5918  068E  0838               	movf	??___flmul+2,w
  5919  068F  00C4               	movwf	___flmul@prod+2
  5920  0690  0837               	movf	??___flmul+1,w
  5921  0691  00C3               	movwf	___flmul@prod+1
  5922  0692  0836               	movf	??___flmul,w
  5923  0693  00C2               	movwf	___flmul@prod
  5924  0694                     l3346:
  5925  0694  3001               	movlw	1
  5926  0695  07C6               	addwf	___flmul@temp,f
  5927  0696  1803               	skipnc
  5928  0697  0AC7               	incf	___flmul@temp+1,f
  5929  0698  3000               	movlw	0
  5930  0699  07C7               	addwf	___flmul@temp+1,f
  5931  069A                     l3348:
  5932  069A  0847               	movf	___flmul@temp+1,w
  5933  069B  3A80               	xorlw	128
  5934  069C  00FF               	movwf	btemp+1
  5935  069D  3080               	movlw	128
  5936  069E  027F               	subwf	btemp+1,w
  5937  069F  1D03               	skipz
  5938  06A0  2EA3               	goto	u4285
  5939  06A1  30FF               	movlw	255
  5940  06A2  0246               	subwf	___flmul@temp,w
  5941  06A3                     u4285:
  5942  06A3  1C03               	skipc
  5943  06A4  2EA6               	goto	u4281
  5944  06A5  2EA7               	goto	u4280
  5945  06A6                     u4281:
  5946  06A6  2EB2               	goto	l3352
  5947  06A7                     u4280:
  5948  06A7                     l3350:
  5949  06A7  307F               	movlw	127
  5950  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  5951  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  5952  06AA  00C5               	movwf	___flmul@prod+3
  5953  06AB  3080               	movlw	128
  5954  06AC  00C4               	movwf	___flmul@prod+2
  5955  06AD  3000               	movlw	0
  5956  06AE  00C3               	movwf	___flmul@prod+1
  5957  06AF  3000               	movlw	0
  5958  06B0  00C2               	movwf	___flmul@prod
  5959  06B1  2EE7               	goto	l753
  5960  06B2                     l3352:
  5961  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  5962  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  5963  06B4  0847               	movf	___flmul@temp+1,w
  5964  06B5  3A80               	xorlw	128
  5965  06B6  00FF               	movwf	btemp+1
  5966  06B7  3080               	movlw	128
  5967  06B8  027F               	subwf	btemp+1,w
  5968  06B9  1D03               	skipz
  5969  06BA  2EBD               	goto	u4295
  5970  06BB  3001               	movlw	1
  5971  06BC  0246               	subwf	___flmul@temp,w
  5972  06BD                     u4295:
  5973  06BD  1803               	skipnc
  5974  06BE  2EC0               	goto	u4291
  5975  06BF  2EC1               	goto	u4290
  5976  06C0                     u4291:
  5977  06C0  2ECD               	goto	l3358
  5978  06C1                     u4290:
  5979  06C1                     l3354:
  5980  06C1  3000               	movlw	0
  5981  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  5982  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  5983  06C4  00C5               	movwf	___flmul@prod+3
  5984  06C5  3000               	movlw	0
  5985  06C6  00C4               	movwf	___flmul@prod+2
  5986  06C7  3000               	movlw	0
  5987  06C8  00C3               	movwf	___flmul@prod+1
  5988  06C9  3000               	movlw	0
  5989  06CA  00C2               	movwf	___flmul@prod
  5990  06CB                     l3356:
  5991  06CB  01BB               	clrf	___flmul@sign
  5992  06CC  2EE7               	goto	l753
  5993  06CD                     l3358:
  5994  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  5995  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  5996  06CF  0846               	movf	___flmul@temp,w
  5997  06D0  00B6               	movwf	??___flmul
  5998  06D1  0836               	movf	??___flmul,w
  5999  06D2  00C1               	movwf	___flmul@bexp
  6000  06D3  30FF               	movlw	255
  6001  06D4  05C2               	andwf	___flmul@prod,f
  6002  06D5  30FF               	movlw	255
  6003  06D6  05C3               	andwf	___flmul@prod+1,f
  6004  06D7  307F               	movlw	127
  6005  06D8  05C4               	andwf	___flmul@prod+2,f
  6006  06D9  3000               	movlw	0
  6007  06DA  05C5               	andwf	___flmul@prod+3,f
  6008  06DB                     l3360:
  6009  06DB  1C41               	btfss	___flmul@bexp,0
  6010  06DC  2EDE               	goto	u4301
  6011  06DD  2EDF               	goto	u4300
  6012  06DE                     u4301:
  6013  06DE  2EE0               	goto	l3364
  6014  06DF                     u4300:
  6015  06DF                     l3362:
  6016  06DF  17C4               	bsf	___flmul@prod+2,7
  6017  06E0                     l3364:
  6018  06E0  0841               	movf	___flmul@bexp,w
  6019  06E1  00B6               	movwf	??___flmul
  6020  06E2  1003               	clrc
  6021  06E3  0C36               	rrf	??___flmul,w
  6022  06E4  00B7               	movwf	??___flmul+1
  6023  06E5  0837               	movf	??___flmul+1,w
  6024  06E6  00C5               	movwf	___flmul@prod+3
  6025  06E7                     l753:
  6026  06E7  083B               	movf	___flmul@sign,w
  6027  06E8  00B6               	movwf	??___flmul
  6028  06E9  0836               	movf	??___flmul,w
  6029  06EA  04C5               	iorwf	___flmul@prod+3,f
  6030  06EB                     l3366:
  6031  06EB  0845               	movf	___flmul@prod+3,w
  6032  06EC  00B1               	movwf	?___flmul+3
  6033  06ED  0844               	movf	___flmul@prod+2,w
  6034  06EE  00B0               	movwf	?___flmul+2
  6035  06EF  0843               	movf	___flmul@prod+1,w
  6036  06F0  00AF               	movwf	?___flmul+1
  6037  06F1  0842               	movf	___flmul@prod,w
  6038  06F2  00AE               	movwf	?___flmul
  6039  06F3                     l741:
  6040  06F3  0008               	return
  6041  06F4                     __end_of___flmul:
  6042                           
  6043                           	psect	text23
  6044  08E1                     __ptext23:	
  6045 ;; *************** function __Umul8_16 *****************
  6046 ;; Defined at:
  6047 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  multiplier      1    wreg     unsigned char 
  6050 ;;  multiplicand    1    4[COMMON] unsigned char 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  multiplier      1    6[BANK0 ] unsigned char 
  6053 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  6054 ;;  product         2    2[BANK0 ] unsigned int 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    4[COMMON] unsigned int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         2       0       0       0       0
  6065 ;;      Locals:         0       5       0       0       0
  6066 ;;      Temps:          0       2       0       0       0
  6067 ;;      Totals:         2       7       0       0       0
  6068 ;;Total ram usage:        9 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    2
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		___flmul
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           
  6079                           ;psect for function __Umul8_16
  6080  08E1                     __Umul8_16:
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6084                           ;__Umul8_16@multiplier stored from wreg
  6085  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  6086  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  6087  08E3  00A6               	movwf	__Umul8_16@multiplier
  6088  08E4                     l2968:
  6089  08E4  01A2               	clrf	__Umul8_16@product
  6090  08E5  01A3               	clrf	__Umul8_16@product+1
  6091  08E6                     l2970:
  6092  08E6  0874               	movf	__Umul8_16@multiplicand,w
  6093  08E7  00A0               	movwf	??__Umul8_16
  6094  08E8  01A1               	clrf	??__Umul8_16+1
  6095  08E9  0820               	movf	??__Umul8_16,w
  6096  08EA  00A4               	movwf	__Umul8_16@word_mpld
  6097  08EB  0821               	movf	??__Umul8_16+1,w
  6098  08EC  00A5               	movwf	__Umul8_16@word_mpld+1
  6099  08ED                     l2972:
  6100  08ED  1C26               	btfss	__Umul8_16@multiplier,0
  6101  08EE  28F0               	goto	u3501
  6102  08EF  28F1               	goto	u3500
  6103  08F0                     u3501:
  6104  08F0  28F7               	goto	l760
  6105  08F1                     u3500:
  6106  08F1                     l2974:
  6107  08F1  0824               	movf	__Umul8_16@word_mpld,w
  6108  08F2  07A2               	addwf	__Umul8_16@product,f
  6109  08F3  1803               	skipnc
  6110  08F4  0AA3               	incf	__Umul8_16@product+1,f
  6111  08F5  0825               	movf	__Umul8_16@word_mpld+1,w
  6112  08F6  07A3               	addwf	__Umul8_16@product+1,f
  6113  08F7                     l760:
  6114  08F7  3001               	movlw	1
  6115  08F8                     u3515:
  6116  08F8  1003               	clrc
  6117  08F9  0DA4               	rlf	__Umul8_16@word_mpld,f
  6118  08FA  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  6119  08FB  3EFF               	addlw	-1
  6120  08FC  1D03               	skipz
  6121  08FD  28F8               	goto	u3515
  6122  08FE  1003               	clrc
  6123  08FF  0CA6               	rrf	__Umul8_16@multiplier,f
  6124  0900                     l2976:
  6125  0900  0826               	movf	__Umul8_16@multiplier,w
  6126  0901  1D03               	btfss	3,2
  6127  0902  2904               	goto	u3521
  6128  0903  2905               	goto	u3520
  6129  0904                     u3521:
  6130  0904  28ED               	goto	l2972
  6131  0905                     u3520:
  6132  0905                     l2978:
  6133  0905  0823               	movf	__Umul8_16@product+1,w
  6134  0906  00F5               	movwf	?__Umul8_16+1
  6135  0907  0822               	movf	__Umul8_16@product,w
  6136  0908  00F4               	movwf	?__Umul8_16
  6137  0909                     l762:
  6138  0909  0008               	return
  6139  090A                     __end_of__Umul8_16:
  6140                           
  6141                           	psect	text24
  6142  0E23                     __ptext24:	
  6143 ;; *************** function ___fldiv *****************
  6144 ;; Defined at:
  6145 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  a               4   40[BANK0 ] unsigned int 
  6148 ;;  b               4   44[BANK0 ] unsigned int 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  grs             4   60[BANK0 ] unsigned long 
  6151 ;;  rem             4   53[BANK0 ] unsigned long 
  6152 ;;  new_exp         2   58[BANK0 ] int 
  6153 ;;  aexp            1   65[BANK0 ] unsigned char 
  6154 ;;  bexp            1   64[BANK0 ] unsigned char 
  6155 ;;  sign            1   57[BANK0 ] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  4   40[BANK0 ] unsigned char 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, btemp+1
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6165 ;;      Params:         0       8       0       0       0
  6166 ;;      Locals:         0      13       0       0       0
  6167 ;;      Temps:          0       5       0       0       0
  6168 ;;      Totals:         0      26       0       0       0
  6169 ;;Total ram usage:       26 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    2
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_ADC
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           
  6180                           ;psect for function ___fldiv
  6181  0E23                     ___fldiv:
  6182  0E23                     l2378:	
  6183                           ;incstack = 0
  6184                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6185                           
  6186  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  6188  0E25  084F               	movf	___fldiv@b+3,w
  6189  0E26  3980               	andlw	128
  6190  0E27  00D0               	movwf	??___fldiv
  6191  0E28  0850               	movf	??___fldiv,w
  6192  0E29  00D9               	movwf	___fldiv@sign
  6193  0E2A                     l2380:
  6194  0E2A  084F               	movf	___fldiv@b+3,w
  6195  0E2B  00D0               	movwf	??___fldiv
  6196  0E2C  0750               	addwf	??___fldiv,w
  6197  0E2D  00D1               	movwf	??___fldiv+1
  6198  0E2E  0851               	movf	??___fldiv+1,w
  6199  0E2F  00E0               	movwf	___fldiv@bexp
  6200  0E30                     l2382:
  6201  0E30  1FCE               	btfss	___fldiv@b+2,7
  6202  0E31  2E33               	goto	u2551
  6203  0E32  2E34               	goto	u2550
  6204  0E33                     u2551:
  6205  0E33  2E35               	goto	l2386
  6206  0E34                     u2550:
  6207  0E34                     l2384:
  6208  0E34  1460               	bsf	___fldiv@bexp,0
  6209  0E35                     l2386:
  6210  0E35  0860               	movf	___fldiv@bexp,w
  6211  0E36  1903               	btfsc	3,2
  6212  0E37  2E39               	goto	u2561
  6213  0E38  2E3A               	goto	u2560
  6214  0E39                     u2561:
  6215  0E39  2E4A               	goto	l2396
  6216  0E3A                     u2560:
  6217  0E3A                     l2388:
  6218  0E3A  0A60               	incf	___fldiv@bexp,w
  6219  0E3B  1D03               	btfss	3,2
  6220  0E3C  2E3E               	goto	u2571
  6221  0E3D  2E3F               	goto	u2570
  6222  0E3E                     u2571:
  6223  0E3E  2E47               	goto	l2392
  6224  0E3F                     u2570:
  6225  0E3F                     l2390:
  6226  0E3F  3000               	movlw	0
  6227  0E40  00CF               	movwf	___fldiv@b+3
  6228  0E41  3000               	movlw	0
  6229  0E42  00CE               	movwf	___fldiv@b+2
  6230  0E43  3000               	movlw	0
  6231  0E44  00CD               	movwf	___fldiv@b+1
  6232  0E45  3000               	movlw	0
  6233  0E46  00CC               	movwf	___fldiv@b
  6234  0E47                     l2392:
  6235  0E47  17CE               	bsf	___fldiv@b+2,7
  6236  0E48                     l2394:
  6237  0E48  01CF               	clrf	___fldiv@b+3
  6238  0E49  2E52               	goto	l2398
  6239  0E4A                     l2396:
  6240  0E4A  3000               	movlw	0
  6241  0E4B  00CF               	movwf	___fldiv@b+3
  6242  0E4C  3000               	movlw	0
  6243  0E4D  00CE               	movwf	___fldiv@b+2
  6244  0E4E  3000               	movlw	0
  6245  0E4F  00CD               	movwf	___fldiv@b+1
  6246  0E50  3000               	movlw	0
  6247  0E51  00CC               	movwf	___fldiv@b
  6248  0E52                     l2398:
  6249  0E52  084B               	movf	___fldiv@a+3,w
  6250  0E53  3980               	andlw	128
  6251  0E54  00D0               	movwf	??___fldiv
  6252  0E55  0850               	movf	??___fldiv,w
  6253  0E56  06D9               	xorwf	___fldiv@sign,f
  6254  0E57                     l2400:
  6255  0E57  084B               	movf	___fldiv@a+3,w
  6256  0E58  00D0               	movwf	??___fldiv
  6257  0E59  0750               	addwf	??___fldiv,w
  6258  0E5A  00D1               	movwf	??___fldiv+1
  6259  0E5B  0851               	movf	??___fldiv+1,w
  6260  0E5C  00E1               	movwf	___fldiv@aexp
  6261  0E5D                     l2402:
  6262  0E5D  1FCA               	btfss	___fldiv@a+2,7
  6263  0E5E  2E60               	goto	u2581
  6264  0E5F  2E61               	goto	u2580
  6265  0E60                     u2581:
  6266  0E60  2E62               	goto	l2406
  6267  0E61                     u2580:
  6268  0E61                     l2404:
  6269  0E61  1461               	bsf	___fldiv@aexp,0
  6270  0E62                     l2406:
  6271  0E62  0861               	movf	___fldiv@aexp,w
  6272  0E63  1903               	btfsc	3,2
  6273  0E64  2E66               	goto	u2591
  6274  0E65  2E67               	goto	u2590
  6275  0E66                     u2591:
  6276  0E66  2E77               	goto	l2416
  6277  0E67                     u2590:
  6278  0E67                     l2408:
  6279  0E67  0A61               	incf	___fldiv@aexp,w
  6280  0E68  1D03               	btfss	3,2
  6281  0E69  2E6B               	goto	u2601
  6282  0E6A  2E6C               	goto	u2600
  6283  0E6B                     u2601:
  6284  0E6B  2E74               	goto	l2412
  6285  0E6C                     u2600:
  6286  0E6C                     l2410:
  6287  0E6C  3000               	movlw	0
  6288  0E6D  00CB               	movwf	___fldiv@a+3
  6289  0E6E  3000               	movlw	0
  6290  0E6F  00CA               	movwf	___fldiv@a+2
  6291  0E70  3000               	movlw	0
  6292  0E71  00C9               	movwf	___fldiv@a+1
  6293  0E72  3000               	movlw	0
  6294  0E73  00C8               	movwf	___fldiv@a
  6295  0E74                     l2412:
  6296  0E74  17CA               	bsf	___fldiv@a+2,7
  6297  0E75                     l2414:
  6298  0E75  01CB               	clrf	___fldiv@a+3
  6299  0E76  2E7F               	goto	l701
  6300  0E77                     l2416:
  6301  0E77  3000               	movlw	0
  6302  0E78  00CB               	movwf	___fldiv@a+3
  6303  0E79  3000               	movlw	0
  6304  0E7A  00CA               	movwf	___fldiv@a+2
  6305  0E7B  3000               	movlw	0
  6306  0E7C  00C9               	movwf	___fldiv@a+1
  6307  0E7D  3000               	movlw	0
  6308  0E7E  00C8               	movwf	___fldiv@a
  6309  0E7F                     l701:
  6310  0E7F  084B               	movf	___fldiv@a+3,w
  6311  0E80  044A               	iorwf	___fldiv@a+2,w
  6312  0E81  0449               	iorwf	___fldiv@a+1,w
  6313  0E82  0448               	iorwf	___fldiv@a,w
  6314  0E83  1D03               	skipz
  6315  0E84  2E86               	goto	u2611
  6316  0E85  2E87               	goto	u2610
  6317  0E86                     u2611:
  6318  0E86  2EA0               	goto	l2426
  6319  0E87                     u2610:
  6320  0E87                     l2418:
  6321  0E87  3000               	movlw	0
  6322  0E88  00CF               	movwf	___fldiv@b+3
  6323  0E89  3000               	movlw	0
  6324  0E8A  00CE               	movwf	___fldiv@b+2
  6325  0E8B  3000               	movlw	0
  6326  0E8C  00CD               	movwf	___fldiv@b+1
  6327  0E8D  3000               	movlw	0
  6328  0E8E  00CC               	movwf	___fldiv@b
  6329  0E8F  3080               	movlw	128
  6330  0E90  04CE               	iorwf	___fldiv@b+2,f
  6331  0E91  307F               	movlw	127
  6332  0E92  04CF               	iorwf	___fldiv@b+3,f
  6333  0E93                     l2420:
  6334  0E93  0859               	movf	___fldiv@sign,w
  6335  0E94  00D0               	movwf	??___fldiv
  6336  0E95  0850               	movf	??___fldiv,w
  6337  0E96  04CF               	iorwf	___fldiv@b+3,f
  6338  0E97                     l2422:
  6339  0E97  084F               	movf	___fldiv@b+3,w
  6340  0E98  00CB               	movwf	?___fldiv+3
  6341  0E99  084E               	movf	___fldiv@b+2,w
  6342  0E9A  00CA               	movwf	?___fldiv+2
  6343  0E9B  084D               	movf	___fldiv@b+1,w
  6344  0E9C  00C9               	movwf	?___fldiv+1
  6345  0E9D  084C               	movf	___fldiv@b,w
  6346  0E9E  00C8               	movwf	?___fldiv
  6347  0E9F  2FFF               	goto	l703
  6348  0EA0                     l2426:
  6349  0EA0  0860               	movf	___fldiv@bexp,w
  6350  0EA1  1D03               	btfss	3,2
  6351  0EA2  2EA4               	goto	u2621
  6352  0EA3  2EA5               	goto	u2620
  6353  0EA4                     u2621:
  6354  0EA4  2EAE               	goto	l2432
  6355  0EA5                     u2620:
  6356  0EA5                     l2428:
  6357  0EA5  3000               	movlw	0
  6358  0EA6  00CB               	movwf	?___fldiv+3
  6359  0EA7  3000               	movlw	0
  6360  0EA8  00CA               	movwf	?___fldiv+2
  6361  0EA9  3000               	movlw	0
  6362  0EAA  00C9               	movwf	?___fldiv+1
  6363  0EAB  3000               	movlw	0
  6364  0EAC  00C8               	movwf	?___fldiv
  6365  0EAD  2FFF               	goto	l703
  6366  0EAE                     l2432:
  6367  0EAE  0860               	movf	___fldiv@bexp,w
  6368  0EAF  00D0               	movwf	??___fldiv
  6369  0EB0  01D1               	clrf	??___fldiv+1
  6370  0EB1  0851               	movf	??___fldiv+1,w
  6371  0EB2  00D3               	movwf	??___fldiv+3
  6372  0EB3  0861               	movf	___fldiv@aexp,w
  6373  0EB4  0250               	subwf	??___fldiv,w
  6374  0EB5  00D2               	movwf	??___fldiv+2
  6375  0EB6  1C03               	skipc
  6376  0EB7  03D3               	decf	??___fldiv+3,f
  6377  0EB8  0852               	movf	??___fldiv+2,w
  6378  0EB9  3E7F               	addlw	127
  6379  0EBA  00DA               	movwf	___fldiv@new_exp
  6380  0EBB  0853               	movf	??___fldiv+3,w
  6381  0EBC  1803               	skipnc
  6382  0EBD  3E01               	addlw	1
  6383  0EBE  3E00               	addlw	0
  6384  0EBF  00DB               	movwf	___fldiv@new_exp+1
  6385  0EC0                     l2434:
  6386  0EC0  084F               	movf	___fldiv@b+3,w
  6387  0EC1  00D8               	movwf	___fldiv@rem+3
  6388  0EC2  084E               	movf	___fldiv@b+2,w
  6389  0EC3  00D7               	movwf	___fldiv@rem+2
  6390  0EC4  084D               	movf	___fldiv@b+1,w
  6391  0EC5  00D6               	movwf	___fldiv@rem+1
  6392  0EC6  084C               	movf	___fldiv@b,w
  6393  0EC7  00D5               	movwf	___fldiv@rem
  6394  0EC8                     l2436:
  6395  0EC8  3000               	movlw	0
  6396  0EC9  00CF               	movwf	___fldiv@b+3
  6397  0ECA  3000               	movlw	0
  6398  0ECB  00CE               	movwf	___fldiv@b+2
  6399  0ECC  3000               	movlw	0
  6400  0ECD  00CD               	movwf	___fldiv@b+1
  6401  0ECE  3000               	movlw	0
  6402  0ECF  00CC               	movwf	___fldiv@b
  6403  0ED0                     l2438:
  6404  0ED0  3000               	movlw	0
  6405  0ED1  00DF               	movwf	___fldiv@grs+3
  6406  0ED2  3000               	movlw	0
  6407  0ED3  00DE               	movwf	___fldiv@grs+2
  6408  0ED4  3000               	movlw	0
  6409  0ED5  00DD               	movwf	___fldiv@grs+1
  6410  0ED6  3000               	movlw	0
  6411  0ED7  00DC               	movwf	___fldiv@grs
  6412  0ED8                     l2440:
  6413  0ED8  01E1               	clrf	___fldiv@aexp
  6414  0ED9  2F24               	goto	l2460
  6415  0EDA                     l2442:
  6416  0EDA  0861               	movf	___fldiv@aexp,w
  6417  0EDB  1903               	btfsc	3,2
  6418  0EDC  2EDE               	goto	u2631
  6419  0EDD  2EDF               	goto	u2630
  6420  0EDE                     u2631:
  6421  0EDE  2EFF               	goto	l2452
  6422  0EDF                     u2630:
  6423  0EDF                     l2444:
  6424  0EDF  3001               	movlw	1
  6425  0EE0  00D0               	movwf	??___fldiv
  6426  0EE1                     u2645:
  6427  0EE1  1003               	clrc
  6428  0EE2  0DD5               	rlf	___fldiv@rem,f
  6429  0EE3  0DD6               	rlf	___fldiv@rem+1,f
  6430  0EE4  0DD7               	rlf	___fldiv@rem+2,f
  6431  0EE5  0DD8               	rlf	___fldiv@rem+3,f
  6432  0EE6  0BD0               	decfsz	??___fldiv,f
  6433  0EE7  2EE1               	goto	u2645
  6434  0EE8  3001               	movlw	1
  6435  0EE9  00D0               	movwf	??___fldiv
  6436  0EEA                     u2655:
  6437  0EEA  1003               	clrc
  6438  0EEB  0DCC               	rlf	___fldiv@b,f
  6439  0EEC  0DCD               	rlf	___fldiv@b+1,f
  6440  0EED  0DCE               	rlf	___fldiv@b+2,f
  6441  0EEE  0DCF               	rlf	___fldiv@b+3,f
  6442  0EEF  0BD0               	decfsz	??___fldiv,f
  6443  0EF0  2EEA               	goto	u2655
  6444  0EF1                     l2446:
  6445  0EF1  1FDF               	btfss	___fldiv@grs+3,7
  6446  0EF2  2EF4               	goto	u2661
  6447  0EF3  2EF5               	goto	u2660
  6448  0EF4                     u2661:
  6449  0EF4  2EF6               	goto	l2450
  6450  0EF5                     u2660:
  6451  0EF5                     l2448:
  6452  0EF5  144C               	bsf	___fldiv@b,0
  6453  0EF6                     l2450:
  6454  0EF6  3001               	movlw	1
  6455  0EF7  00D0               	movwf	??___fldiv
  6456  0EF8                     u2675:
  6457  0EF8  1003               	clrc
  6458  0EF9  0DDC               	rlf	___fldiv@grs,f
  6459  0EFA  0DDD               	rlf	___fldiv@grs+1,f
  6460  0EFB  0DDE               	rlf	___fldiv@grs+2,f
  6461  0EFC  0DDF               	rlf	___fldiv@grs+3,f
  6462  0EFD  0BD0               	decfsz	??___fldiv,f
  6463  0EFE  2EF8               	goto	u2675
  6464  0EFF                     l2452:
  6465  0EFF  084B               	movf	___fldiv@a+3,w
  6466  0F00  0258               	subwf	___fldiv@rem+3,w
  6467  0F01  1D03               	skipz
  6468  0F02  2F0D               	goto	u2685
  6469  0F03  084A               	movf	___fldiv@a+2,w
  6470  0F04  0257               	subwf	___fldiv@rem+2,w
  6471  0F05  1D03               	skipz
  6472  0F06  2F0D               	goto	u2685
  6473  0F07  0849               	movf	___fldiv@a+1,w
  6474  0F08  0256               	subwf	___fldiv@rem+1,w
  6475  0F09  1D03               	skipz
  6476  0F0A  2F0D               	goto	u2685
  6477  0F0B  0848               	movf	___fldiv@a,w
  6478  0F0C  0255               	subwf	___fldiv@rem,w
  6479  0F0D                     u2685:
  6480  0F0D  1C03               	skipc
  6481  0F0E  2F10               	goto	u2681
  6482  0F0F  2F11               	goto	u2680
  6483  0F10                     u2681:
  6484  0F10  2F20               	goto	l2458
  6485  0F11                     u2680:
  6486  0F11                     l2454:
  6487  0F11  175F               	bsf	___fldiv@grs+3,6
  6488  0F12                     l2456:
  6489  0F12  0848               	movf	___fldiv@a,w
  6490  0F13  02D5               	subwf	___fldiv@rem,f
  6491  0F14  0849               	movf	___fldiv@a+1,w
  6492  0F15  1C03               	skipc
  6493  0F16  0F49               	incfsz	___fldiv@a+1,w
  6494  0F17  02D6               	subwf	___fldiv@rem+1,f
  6495  0F18  084A               	movf	___fldiv@a+2,w
  6496  0F19  1C03               	skipc
  6497  0F1A  0F4A               	incfsz	___fldiv@a+2,w
  6498  0F1B  02D7               	subwf	___fldiv@rem+2,f
  6499  0F1C  084B               	movf	___fldiv@a+3,w
  6500  0F1D  1C03               	skipc
  6501  0F1E  0F4B               	incfsz	___fldiv@a+3,w
  6502  0F1F  02D8               	subwf	___fldiv@rem+3,f
  6503  0F20                     l2458:
  6504  0F20  3001               	movlw	1
  6505  0F21  00D0               	movwf	??___fldiv
  6506  0F22  0850               	movf	??___fldiv,w
  6507  0F23  07E1               	addwf	___fldiv@aexp,f
  6508  0F24                     l2460:
  6509  0F24  301A               	movlw	26
  6510  0F25  0261               	subwf	___fldiv@aexp,w
  6511  0F26  1C03               	skipc
  6512  0F27  2F29               	goto	u2691
  6513  0F28  2F2A               	goto	u2690
  6514  0F29                     u2691:
  6515  0F29  2EDA               	goto	l2442
  6516  0F2A                     u2690:
  6517  0F2A                     l2462:
  6518  0F2A  0858               	movf	___fldiv@rem+3,w
  6519  0F2B  0457               	iorwf	___fldiv@rem+2,w
  6520  0F2C  0456               	iorwf	___fldiv@rem+1,w
  6521  0F2D  0455               	iorwf	___fldiv@rem,w
  6522  0F2E  1903               	skipnz
  6523  0F2F  2F31               	goto	u2701
  6524  0F30  2F32               	goto	u2700
  6525  0F31                     u2701:
  6526  0F31  2F51               	goto	l2476
  6527  0F32                     u2700:
  6528  0F32                     l2464:
  6529  0F32  145C               	bsf	___fldiv@grs,0
  6530  0F33  2F51               	goto	l2476
  6531  0F34                     l2466:
  6532  0F34  3001               	movlw	1
  6533  0F35  00D0               	movwf	??___fldiv
  6534  0F36                     u2715:
  6535  0F36  1003               	clrc
  6536  0F37  0DCC               	rlf	___fldiv@b,f
  6537  0F38  0DCD               	rlf	___fldiv@b+1,f
  6538  0F39  0DCE               	rlf	___fldiv@b+2,f
  6539  0F3A  0DCF               	rlf	___fldiv@b+3,f
  6540  0F3B  0BD0               	decfsz	??___fldiv,f
  6541  0F3C  2F36               	goto	u2715
  6542  0F3D                     l2468:
  6543  0F3D  1FDF               	btfss	___fldiv@grs+3,7
  6544  0F3E  2F40               	goto	u2721
  6545  0F3F  2F41               	goto	u2720
  6546  0F40                     u2721:
  6547  0F40  2F42               	goto	l2472
  6548  0F41                     u2720:
  6549  0F41                     l2470:
  6550  0F41  144C               	bsf	___fldiv@b,0
  6551  0F42                     l2472:
  6552  0F42  3001               	movlw	1
  6553  0F43  00D0               	movwf	??___fldiv
  6554  0F44                     u2735:
  6555  0F44  1003               	clrc
  6556  0F45  0DDC               	rlf	___fldiv@grs,f
  6557  0F46  0DDD               	rlf	___fldiv@grs+1,f
  6558  0F47  0DDE               	rlf	___fldiv@grs+2,f
  6559  0F48  0DDF               	rlf	___fldiv@grs+3,f
  6560  0F49  0BD0               	decfsz	??___fldiv,f
  6561  0F4A  2F44               	goto	u2735
  6562  0F4B                     l2474:
  6563  0F4B  30FF               	movlw	255
  6564  0F4C  07DA               	addwf	___fldiv@new_exp,f
  6565  0F4D  1803               	skipnc
  6566  0F4E  0ADB               	incf	___fldiv@new_exp+1,f
  6567  0F4F  30FF               	movlw	255
  6568  0F50  07DB               	addwf	___fldiv@new_exp+1,f
  6569  0F51                     l2476:
  6570  0F51  1FCE               	btfss	___fldiv@b+2,7
  6571  0F52  2F54               	goto	u2741
  6572  0F53  2F55               	goto	u2740
  6573  0F54                     u2741:
  6574  0F54  2F34               	goto	l2466
  6575  0F55                     u2740:
  6576  0F55                     l2478:
  6577  0F55  01E1               	clrf	___fldiv@aexp
  6578  0F56                     l2480:
  6579  0F56  1FDF               	btfss	___fldiv@grs+3,7
  6580  0F57  2F59               	goto	u2751
  6581  0F58  2F5A               	goto	u2750
  6582  0F59                     u2751:
  6583  0F59  2F76               	goto	l2488
  6584  0F5A                     u2750:
  6585  0F5A                     l2482:
  6586  0F5A  30FF               	movlw	255
  6587  0F5B  055C               	andwf	___fldiv@grs,w
  6588  0F5C  00D0               	movwf	??___fldiv
  6589  0F5D  30FF               	movlw	255
  6590  0F5E  055D               	andwf	___fldiv@grs+1,w
  6591  0F5F  00D1               	movwf	??___fldiv+1
  6592  0F60  30FF               	movlw	255
  6593  0F61  055E               	andwf	___fldiv@grs+2,w
  6594  0F62  00D2               	movwf	??___fldiv+2
  6595  0F63  307F               	movlw	127
  6596  0F64  055F               	andwf	___fldiv@grs+3,w
  6597  0F65  00D3               	movwf	??___fldiv+3
  6598  0F66  0853               	movf	??___fldiv+3,w
  6599  0F67  0452               	iorwf	??___fldiv+2,w
  6600  0F68  0451               	iorwf	??___fldiv+1,w
  6601  0F69  0450               	iorwf	??___fldiv,w
  6602  0F6A  1903               	skipnz
  6603  0F6B  2F6D               	goto	u2761
  6604  0F6C  2F6E               	goto	u2760
  6605  0F6D                     u2761:
  6606  0F6D  2F71               	goto	l717
  6607  0F6E                     u2760:
  6608  0F6E                     l2484:
  6609  0F6E  01E1               	clrf	___fldiv@aexp
  6610  0F6F  0AE1               	incf	___fldiv@aexp,f
  6611  0F70  2F76               	goto	l2488
  6612  0F71                     l717:
  6613  0F71  1C4C               	btfss	___fldiv@b,0
  6614  0F72  2F74               	goto	u2771
  6615  0F73  2F75               	goto	u2770
  6616  0F74                     u2771:
  6617  0F74  2F76               	goto	l2488
  6618  0F75                     u2770:
  6619  0F75  2F6E               	goto	l2484
  6620  0F76                     l2488:
  6621  0F76  0861               	movf	___fldiv@aexp,w
  6622  0F77  1903               	btfsc	3,2
  6623  0F78  2F7A               	goto	u2781
  6624  0F79  2F7B               	goto	u2780
  6625  0F7A                     u2781:
  6626  0F7A  2FAC               	goto	l2498
  6627  0F7B                     u2780:
  6628  0F7B                     l2490:
  6629  0F7B  3001               	movlw	1
  6630  0F7C  07CC               	addwf	___fldiv@b,f
  6631  0F7D  3000               	movlw	0
  6632  0F7E  1803               	skipnc
  6633  0F7F  3001               	movlw	1
  6634  0F80  07CD               	addwf	___fldiv@b+1,f
  6635  0F81  3000               	movlw	0
  6636  0F82  1803               	skipnc
  6637  0F83  3001               	movlw	1
  6638  0F84  07CE               	addwf	___fldiv@b+2,f
  6639  0F85  3000               	movlw	0
  6640  0F86  1803               	skipnc
  6641  0F87  3001               	movlw	1
  6642  0F88  07CF               	addwf	___fldiv@b+3,f
  6643  0F89                     l2492:
  6644  0F89  1C4F               	btfss	___fldiv@b+3,0
  6645  0F8A  2F8C               	goto	u2791
  6646  0F8B  2F8D               	goto	u2790
  6647  0F8C                     u2791:
  6648  0F8C  2FAC               	goto	l2498
  6649  0F8D                     u2790:
  6650  0F8D                     l2494:
  6651  0F8D  084C               	movf	___fldiv@b,w
  6652  0F8E  00D0               	movwf	??___fldiv
  6653  0F8F  084D               	movf	___fldiv@b+1,w
  6654  0F90  00D1               	movwf	??___fldiv+1
  6655  0F91  084E               	movf	___fldiv@b+2,w
  6656  0F92  00D2               	movwf	??___fldiv+2
  6657  0F93  084F               	movf	___fldiv@b+3,w
  6658  0F94  00D3               	movwf	??___fldiv+3
  6659  0F95  3001               	movlw	1
  6660  0F96  00D4               	movwf	??___fldiv+4
  6661  0F97                     u2805:
  6662  0F97  0D53               	rlf	??___fldiv+3,w
  6663  0F98  0CD3               	rrf	??___fldiv+3,f
  6664  0F99  0CD2               	rrf	??___fldiv+2,f
  6665  0F9A  0CD1               	rrf	??___fldiv+1,f
  6666  0F9B  0CD0               	rrf	??___fldiv,f
  6667  0F9C                     u2800:
  6668  0F9C  0BD4               	decfsz	??___fldiv+4,f
  6669  0F9D  2F97               	goto	u2805
  6670  0F9E  0853               	movf	??___fldiv+3,w
  6671  0F9F  00CF               	movwf	___fldiv@b+3
  6672  0FA0  0852               	movf	??___fldiv+2,w
  6673  0FA1  00CE               	movwf	___fldiv@b+2
  6674  0FA2  0851               	movf	??___fldiv+1,w
  6675  0FA3  00CD               	movwf	___fldiv@b+1
  6676  0FA4  0850               	movf	??___fldiv,w
  6677  0FA5  00CC               	movwf	___fldiv@b
  6678  0FA6                     l2496:
  6679  0FA6  3001               	movlw	1
  6680  0FA7  07DA               	addwf	___fldiv@new_exp,f
  6681  0FA8  1803               	skipnc
  6682  0FA9  0ADB               	incf	___fldiv@new_exp+1,f
  6683  0FAA  3000               	movlw	0
  6684  0FAB  07DB               	addwf	___fldiv@new_exp+1,f
  6685  0FAC                     l2498:
  6686  0FAC  085B               	movf	___fldiv@new_exp+1,w
  6687  0FAD  3A80               	xorlw	128
  6688  0FAE  00FF               	movwf	btemp+1
  6689  0FAF  3080               	movlw	128
  6690  0FB0  027F               	subwf	btemp+1,w
  6691  0FB1  1D03               	skipz
  6692  0FB2  2FB5               	goto	u2815
  6693  0FB3  30FF               	movlw	255
  6694  0FB4  025A               	subwf	___fldiv@new_exp,w
  6695  0FB5                     u2815:
  6696  0FB5  1C03               	skipc
  6697  0FB6  2FB8               	goto	u2811
  6698  0FB7  2FB9               	goto	u2810
  6699  0FB8                     u2811:
  6700  0FB8  2FC7               	goto	l2502
  6701  0FB9                     u2810:
  6702  0FB9                     l2500:
  6703  0FB9  30FF               	movlw	255
  6704  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0FBC  00DA               	movwf	___fldiv@new_exp
  6707  0FBD  3000               	movlw	0
  6708  0FBE  00DB               	movwf	___fldiv@new_exp+1
  6709  0FBF  3000               	movlw	0
  6710  0FC0  00CF               	movwf	___fldiv@b+3
  6711  0FC1  3000               	movlw	0
  6712  0FC2  00CE               	movwf	___fldiv@b+2
  6713  0FC3  3000               	movlw	0
  6714  0FC4  00CD               	movwf	___fldiv@b+1
  6715  0FC5  3000               	movlw	0
  6716  0FC6  00CC               	movwf	___fldiv@b
  6717  0FC7                     l2502:
  6718  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  6719  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  6720  0FC9  085B               	movf	___fldiv@new_exp+1,w
  6721  0FCA  3A80               	xorlw	128
  6722  0FCB  00FF               	movwf	btemp+1
  6723  0FCC  3080               	movlw	128
  6724  0FCD  027F               	subwf	btemp+1,w
  6725  0FCE  1D03               	skipz
  6726  0FCF  2FD2               	goto	u2825
  6727  0FD0  3001               	movlw	1
  6728  0FD1  025A               	subwf	___fldiv@new_exp,w
  6729  0FD2                     u2825:
  6730  0FD2  1803               	skipnc
  6731  0FD3  2FD5               	goto	u2821
  6732  0FD4  2FD6               	goto	u2820
  6733  0FD5                     u2821:
  6734  0FD5  2FE3               	goto	l723
  6735  0FD6                     u2820:
  6736  0FD6                     l2504:
  6737  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0FD8  01DA               	clrf	___fldiv@new_exp
  6740  0FD9  01DB               	clrf	___fldiv@new_exp+1
  6741  0FDA                     l2506:
  6742  0FDA  3000               	movlw	0
  6743  0FDB  00CF               	movwf	___fldiv@b+3
  6744  0FDC  3000               	movlw	0
  6745  0FDD  00CE               	movwf	___fldiv@b+2
  6746  0FDE  3000               	movlw	0
  6747  0FDF  00CD               	movwf	___fldiv@b+1
  6748  0FE0  3000               	movlw	0
  6749  0FE1  00CC               	movwf	___fldiv@b
  6750  0FE2                     l2508:
  6751  0FE2  01D9               	clrf	___fldiv@sign
  6752  0FE3                     l723:
  6753  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6754  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6755  0FE5  085A               	movf	___fldiv@new_exp,w
  6756  0FE6  00D0               	movwf	??___fldiv
  6757  0FE7  0850               	movf	??___fldiv,w
  6758  0FE8  00E0               	movwf	___fldiv@bexp
  6759  0FE9                     l2510:
  6760  0FE9  1C60               	btfss	___fldiv@bexp,0
  6761  0FEA  2FEC               	goto	u2831
  6762  0FEB  2FED               	goto	u2830
  6763  0FEC                     u2831:
  6764  0FEC  2FEF               	goto	l2514
  6765  0FED                     u2830:
  6766  0FED                     l2512:
  6767  0FED  17CE               	bsf	___fldiv@b+2,7
  6768  0FEE  2FF3               	goto	l725
  6769  0FEF                     l2514:
  6770  0FEF  307F               	movlw	127
  6771  0FF0  00D0               	movwf	??___fldiv
  6772  0FF1  0850               	movf	??___fldiv,w
  6773  0FF2  05CE               	andwf	___fldiv@b+2,f
  6774  0FF3                     l725:
  6775  0FF3  0860               	movf	___fldiv@bexp,w
  6776  0FF4  00D0               	movwf	??___fldiv
  6777  0FF5  1003               	clrc
  6778  0FF6  0C50               	rrf	??___fldiv,w
  6779  0FF7  00D1               	movwf	??___fldiv+1
  6780  0FF8  0851               	movf	??___fldiv+1,w
  6781  0FF9  00CF               	movwf	___fldiv@b+3
  6782  0FFA  0859               	movf	___fldiv@sign,w
  6783  0FFB  00D0               	movwf	??___fldiv
  6784  0FFC  0850               	movf	??___fldiv,w
  6785  0FFD  04CF               	iorwf	___fldiv@b+3,f
  6786  0FFE  2E97               	goto	l2422
  6787  0FFF                     l703:
  6788  0FFF  0008               	return
  6789  1000                     __end_of___fldiv:
  6790                           
  6791                           	psect	text25
  6792  0A0A                     __ptext25:	
  6793 ;; *************** function ___awmod *****************
  6794 ;; Defined at:
  6795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  divisor         2    8[BANK0 ] int 
  6798 ;;  dividend        2   10[BANK0 ] int 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  sign            1   13[BANK0 ] unsigned char 
  6801 ;;  counter         1   12[BANK0 ] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  2    8[BANK0 ] int 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         0       4       0       0       0
  6812 ;;      Locals:         0       2       0       0       0
  6813 ;;      Temps:          1       0       0       0       0
  6814 ;;      Totals:         1       6       0       0       0
  6815 ;;Total ram usage:        7 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    2
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_ADC
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function ___awmod
  6827  0A0A                     ___awmod:
  6828  0A0A                     l2304:	
  6829                           ;incstack = 0
  6830                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6831                           
  6832  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0A0C  01AD               	clrf	___awmod@sign
  6835  0A0D                     l2306:
  6836  0A0D  1FAB               	btfss	___awmod@dividend+1,7
  6837  0A0E  2A10               	goto	u2361
  6838  0A0F  2A11               	goto	u2360
  6839  0A10                     u2361:
  6840  0A10  2A18               	goto	l2312
  6841  0A11                     u2360:
  6842  0A11                     l2308:
  6843  0A11  09AA               	comf	___awmod@dividend,f
  6844  0A12  09AB               	comf	___awmod@dividend+1,f
  6845  0A13  0AAA               	incf	___awmod@dividend,f
  6846  0A14  1903               	skipnz
  6847  0A15  0AAB               	incf	___awmod@dividend+1,f
  6848  0A16                     l2310:
  6849  0A16  01AD               	clrf	___awmod@sign
  6850  0A17  0AAD               	incf	___awmod@sign,f
  6851  0A18                     l2312:
  6852  0A18  1FA9               	btfss	___awmod@divisor+1,7
  6853  0A19  2A1B               	goto	u2371
  6854  0A1A  2A1C               	goto	u2370
  6855  0A1B                     u2371:
  6856  0A1B  2A21               	goto	l2316
  6857  0A1C                     u2370:
  6858  0A1C                     l2314:
  6859  0A1C  09A8               	comf	___awmod@divisor,f
  6860  0A1D  09A9               	comf	___awmod@divisor+1,f
  6861  0A1E  0AA8               	incf	___awmod@divisor,f
  6862  0A1F  1903               	skipnz
  6863  0A20  0AA9               	incf	___awmod@divisor+1,f
  6864  0A21                     l2316:
  6865  0A21  0828               	movf	___awmod@divisor,w
  6866  0A22  0429               	iorwf	___awmod@divisor+1,w
  6867  0A23  1903               	btfsc	3,2
  6868  0A24  2A26               	goto	u2381
  6869  0A25  2A27               	goto	u2380
  6870  0A26                     u2381:
  6871  0A26  2A56               	goto	l2334
  6872  0A27                     u2380:
  6873  0A27                     l2318:
  6874  0A27  01AC               	clrf	___awmod@counter
  6875  0A28  0AAC               	incf	___awmod@counter,f
  6876  0A29  2A35               	goto	l2324
  6877  0A2A                     l2320:
  6878  0A2A  3001               	movlw	1
  6879  0A2B                     u2395:
  6880  0A2B  1003               	clrc
  6881  0A2C  0DA8               	rlf	___awmod@divisor,f
  6882  0A2D  0DA9               	rlf	___awmod@divisor+1,f
  6883  0A2E  3EFF               	addlw	-1
  6884  0A2F  1D03               	skipz
  6885  0A30  2A2B               	goto	u2395
  6886  0A31                     l2322:
  6887  0A31  3001               	movlw	1
  6888  0A32  00F5               	movwf	??___awmod
  6889  0A33  0875               	movf	??___awmod,w
  6890  0A34  07AC               	addwf	___awmod@counter,f
  6891  0A35                     l2324:
  6892  0A35  1FA9               	btfss	___awmod@divisor+1,7
  6893  0A36  2A38               	goto	u2401
  6894  0A37  2A39               	goto	u2400
  6895  0A38                     u2401:
  6896  0A38  2A2A               	goto	l2320
  6897  0A39                     u2400:
  6898  0A39                     l2326:
  6899  0A39  0829               	movf	___awmod@divisor+1,w
  6900  0A3A  022B               	subwf	___awmod@dividend+1,w
  6901  0A3B  1D03               	skipz
  6902  0A3C  2A3F               	goto	u2415
  6903  0A3D  0828               	movf	___awmod@divisor,w
  6904  0A3E  022A               	subwf	___awmod@dividend,w
  6905  0A3F                     u2415:
  6906  0A3F  1C03               	skipc
  6907  0A40  2A42               	goto	u2411
  6908  0A41  2A43               	goto	u2410
  6909  0A42                     u2411:
  6910  0A42  2A49               	goto	l2330
  6911  0A43                     u2410:
  6912  0A43                     l2328:
  6913  0A43  0828               	movf	___awmod@divisor,w
  6914  0A44  02AA               	subwf	___awmod@dividend,f
  6915  0A45  0829               	movf	___awmod@divisor+1,w
  6916  0A46  1C03               	skipc
  6917  0A47  03AB               	decf	___awmod@dividend+1,f
  6918  0A48  02AB               	subwf	___awmod@dividend+1,f
  6919  0A49                     l2330:
  6920  0A49  3001               	movlw	1
  6921  0A4A                     u2425:
  6922  0A4A  1003               	clrc
  6923  0A4B  0CA9               	rrf	___awmod@divisor+1,f
  6924  0A4C  0CA8               	rrf	___awmod@divisor,f
  6925  0A4D  3EFF               	addlw	-1
  6926  0A4E  1D03               	skipz
  6927  0A4F  2A4A               	goto	u2425
  6928  0A50                     l2332:
  6929  0A50  3001               	movlw	1
  6930  0A51  02AC               	subwf	___awmod@counter,f
  6931  0A52  1D03               	btfss	3,2
  6932  0A53  2A55               	goto	u2431
  6933  0A54  2A56               	goto	u2430
  6934  0A55                     u2431:
  6935  0A55  2A39               	goto	l2326
  6936  0A56                     u2430:
  6937  0A56                     l2334:
  6938  0A56  082D               	movf	___awmod@sign,w
  6939  0A57  1903               	btfsc	3,2
  6940  0A58  2A5A               	goto	u2441
  6941  0A59  2A5B               	goto	u2440
  6942  0A5A                     u2441:
  6943  0A5A  2A60               	goto	l2338
  6944  0A5B                     u2440:
  6945  0A5B                     l2336:
  6946  0A5B  09AA               	comf	___awmod@dividend,f
  6947  0A5C  09AB               	comf	___awmod@dividend+1,f
  6948  0A5D  0AAA               	incf	___awmod@dividend,f
  6949  0A5E  1903               	skipnz
  6950  0A5F  0AAB               	incf	___awmod@dividend+1,f
  6951  0A60                     l2338:
  6952  0A60  082B               	movf	___awmod@dividend+1,w
  6953  0A61  00A9               	movwf	?___awmod+1
  6954  0A62  082A               	movf	___awmod@dividend,w
  6955  0A63  00A8               	movwf	?___awmod
  6956  0A64                     l518:
  6957  0A64  0008               	return
  6958  0A65                     __end_of___awmod:
  6959                           
  6960                           	psect	text26
  6961  0ACA                     __ptext26:	
  6962 ;; *************** function ___awdiv *****************
  6963 ;; Defined at:
  6964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  divisor         2    0[BANK0 ] int 
  6967 ;;  dividend        2    2[BANK0 ] int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  quotient        2    6[BANK0 ] int 
  6970 ;;  sign            1    5[BANK0 ] unsigned char 
  6971 ;;  counter         1    4[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2    0[BANK0 ] int 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6981 ;;      Params:         0       4       0       0       0
  6982 ;;      Locals:         0       4       0       0       0
  6983 ;;      Temps:          1       0       0       0       0
  6984 ;;      Totals:         1       8       0       0       0
  6985 ;;Total ram usage:        9 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    2
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_ADC
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function ___awdiv
  6997  0ACA                     ___awdiv:
  6998  0ACA                     l3150:	
  6999                           ;incstack = 0
  7000                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7001                           
  7002  0ACA  1283               	bcf	3,5	;RP0=0, select bank0
  7003  0ACB  1303               	bcf	3,6	;RP1=0, select bank0
  7004  0ACC  01A5               	clrf	___awdiv@sign
  7005  0ACD                     l3152:
  7006  0ACD  1FA1               	btfss	___awdiv@divisor+1,7
  7007  0ACE  2AD0               	goto	u3741
  7008  0ACF  2AD1               	goto	u3740
  7009  0AD0                     u3741:
  7010  0AD0  2AD8               	goto	l3158
  7011  0AD1                     u3740:
  7012  0AD1                     l3154:
  7013  0AD1  09A0               	comf	___awdiv@divisor,f
  7014  0AD2  09A1               	comf	___awdiv@divisor+1,f
  7015  0AD3  0AA0               	incf	___awdiv@divisor,f
  7016  0AD4  1903               	skipnz
  7017  0AD5  0AA1               	incf	___awdiv@divisor+1,f
  7018  0AD6                     l3156:
  7019  0AD6  01A5               	clrf	___awdiv@sign
  7020  0AD7  0AA5               	incf	___awdiv@sign,f
  7021  0AD8                     l3158:
  7022  0AD8  1FA3               	btfss	___awdiv@dividend+1,7
  7023  0AD9  2ADB               	goto	u3751
  7024  0ADA  2ADC               	goto	u3750
  7025  0ADB                     u3751:
  7026  0ADB  2AE5               	goto	l3164
  7027  0ADC                     u3750:
  7028  0ADC                     l3160:
  7029  0ADC  09A2               	comf	___awdiv@dividend,f
  7030  0ADD  09A3               	comf	___awdiv@dividend+1,f
  7031  0ADE  0AA2               	incf	___awdiv@dividend,f
  7032  0ADF  1903               	skipnz
  7033  0AE0  0AA3               	incf	___awdiv@dividend+1,f
  7034  0AE1                     l3162:
  7035  0AE1  3001               	movlw	1
  7036  0AE2  00F4               	movwf	??___awdiv
  7037  0AE3  0874               	movf	??___awdiv,w
  7038  0AE4  06A5               	xorwf	___awdiv@sign,f
  7039  0AE5                     l3164:
  7040  0AE5  01A6               	clrf	___awdiv@quotient
  7041  0AE6  01A7               	clrf	___awdiv@quotient+1
  7042  0AE7                     l3166:
  7043  0AE7  0820               	movf	___awdiv@divisor,w
  7044  0AE8  0421               	iorwf	___awdiv@divisor+1,w
  7045  0AE9  1903               	btfsc	3,2
  7046  0AEA  2AEC               	goto	u3761
  7047  0AEB  2AED               	goto	u3760
  7048  0AEC                     u3761:
  7049  0AEC  2B24               	goto	l3186
  7050  0AED                     u3760:
  7051  0AED                     l3168:
  7052  0AED  01A4               	clrf	___awdiv@counter
  7053  0AEE  0AA4               	incf	___awdiv@counter,f
  7054  0AEF  2AFB               	goto	l3174
  7055  0AF0                     l3170:
  7056  0AF0  3001               	movlw	1
  7057  0AF1                     u3775:
  7058  0AF1  1003               	clrc
  7059  0AF2  0DA0               	rlf	___awdiv@divisor,f
  7060  0AF3  0DA1               	rlf	___awdiv@divisor+1,f
  7061  0AF4  3EFF               	addlw	-1
  7062  0AF5  1D03               	skipz
  7063  0AF6  2AF1               	goto	u3775
  7064  0AF7                     l3172:
  7065  0AF7  3001               	movlw	1
  7066  0AF8  00F4               	movwf	??___awdiv
  7067  0AF9  0874               	movf	??___awdiv,w
  7068  0AFA  07A4               	addwf	___awdiv@counter,f
  7069  0AFB                     l3174:
  7070  0AFB  1FA1               	btfss	___awdiv@divisor+1,7
  7071  0AFC  2AFE               	goto	u3781
  7072  0AFD  2AFF               	goto	u3780
  7073  0AFE                     u3781:
  7074  0AFE  2AF0               	goto	l3170
  7075  0AFF                     u3780:
  7076  0AFF                     l3176:
  7077  0AFF  3001               	movlw	1
  7078  0B00                     u3795:
  7079  0B00  1003               	clrc
  7080  0B01  0DA6               	rlf	___awdiv@quotient,f
  7081  0B02  0DA7               	rlf	___awdiv@quotient+1,f
  7082  0B03  3EFF               	addlw	-1
  7083  0B04  1D03               	skipz
  7084  0B05  2B00               	goto	u3795
  7085  0B06  0821               	movf	___awdiv@divisor+1,w
  7086  0B07  0223               	subwf	___awdiv@dividend+1,w
  7087  0B08  1D03               	skipz
  7088  0B09  2B0C               	goto	u3805
  7089  0B0A  0820               	movf	___awdiv@divisor,w
  7090  0B0B  0222               	subwf	___awdiv@dividend,w
  7091  0B0C                     u3805:
  7092  0B0C  1C03               	skipc
  7093  0B0D  2B0F               	goto	u3801
  7094  0B0E  2B10               	goto	u3800
  7095  0B0F                     u3801:
  7096  0B0F  2B17               	goto	l3182
  7097  0B10                     u3800:
  7098  0B10                     l3178:
  7099  0B10  0820               	movf	___awdiv@divisor,w
  7100  0B11  02A2               	subwf	___awdiv@dividend,f
  7101  0B12  0821               	movf	___awdiv@divisor+1,w
  7102  0B13  1C03               	skipc
  7103  0B14  03A3               	decf	___awdiv@dividend+1,f
  7104  0B15  02A3               	subwf	___awdiv@dividend+1,f
  7105  0B16                     l3180:
  7106  0B16  1426               	bsf	___awdiv@quotient,0
  7107  0B17                     l3182:
  7108  0B17  3001               	movlw	1
  7109  0B18                     u3815:
  7110  0B18  1003               	clrc
  7111  0B19  0CA1               	rrf	___awdiv@divisor+1,f
  7112  0B1A  0CA0               	rrf	___awdiv@divisor,f
  7113  0B1B  3EFF               	addlw	-1
  7114  0B1C  1D03               	skipz
  7115  0B1D  2B18               	goto	u3815
  7116  0B1E                     l3184:
  7117  0B1E  3001               	movlw	1
  7118  0B1F  02A4               	subwf	___awdiv@counter,f
  7119  0B20  1D03               	btfss	3,2
  7120  0B21  2B23               	goto	u3821
  7121  0B22  2B24               	goto	u3820
  7122  0B23                     u3821:
  7123  0B23  2AFF               	goto	l3176
  7124  0B24                     u3820:
  7125  0B24                     l3186:
  7126  0B24  0825               	movf	___awdiv@sign,w
  7127  0B25  1903               	btfsc	3,2
  7128  0B26  2B28               	goto	u3831
  7129  0B27  2B29               	goto	u3830
  7130  0B28                     u3831:
  7131  0B28  2B2E               	goto	l3190
  7132  0B29                     u3830:
  7133  0B29                     l3188:
  7134  0B29  09A6               	comf	___awdiv@quotient,f
  7135  0B2A  09A7               	comf	___awdiv@quotient+1,f
  7136  0B2B  0AA6               	incf	___awdiv@quotient,f
  7137  0B2C  1903               	skipnz
  7138  0B2D  0AA7               	incf	___awdiv@quotient+1,f
  7139  0B2E                     l3190:
  7140  0B2E  0827               	movf	___awdiv@quotient+1,w
  7141  0B2F  00A1               	movwf	?___awdiv+1
  7142  0B30  0826               	movf	___awdiv@quotient,w
  7143  0B31  00A0               	movwf	?___awdiv
  7144  0B32                     l505:
  7145  0B32  0008               	return
  7146  0B33                     __end_of___awdiv:
  7147                           
  7148                           	psect	text27
  7149  17A1                     __ptext27:	
  7150 ;; *************** function _SerialCom *****************
  7151 ;; Defined at:
  7152 ;;		line 56 in file "adc.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;		None
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7166 ;;      Params:         0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    2
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_main
  7177 ;;		_ADC
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           
  7182                           ;psect for function _SerialCom
  7183  17A1                     _SerialCom:
  7184  17A1                     l2066:	
  7185                           ;incstack = 0
  7186                           ; Regs used in _SerialCom: [wreg+status,2]
  7187                           
  7188                           
  7189                           ;adc.c: 58:     INTCONbits.GIE = 1;
  7190  17A1  178B               	bsf	11,7	;volatile
  7191                           
  7192                           ;adc.c: 59:     INTCONbits.PEIE = 1;
  7193  17A2  170B               	bsf	11,6	;volatile
  7194                           
  7195                           ;adc.c: 60:     PIE1bits.RCIE = 1;
  7196  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  7197  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  7198  17A5  168C               	bsf	12,5	;volatile
  7199                           
  7200                           ;adc.c: 61:     PIE1bits.TXIE = 0;
  7201  17A6  120C               	bcf	12,4	;volatile
  7202                           
  7203                           ;adc.c: 63:     PIR1bits.RCIF = 0;
  7204  17A7  1283               	bcf	3,5	;RP0=0, select bank0
  7205  17A8  1303               	bcf	3,6	;RP1=0, select bank0
  7206  17A9  128C               	bcf	12,5	;volatile
  7207                           
  7208                           ;adc.c: 64:     PIR1bits.TXIF = 0;
  7209  17AA  120C               	bcf	12,4	;volatile
  7210  17AB                     l2068:
  7211                           
  7212                           ;adc.c: 65:     SPBRGH = 0;
  7213  17AB  1683               	bsf	3,5	;RP0=1, select bank1
  7214  17AC  1303               	bcf	3,6	;RP1=0, select bank1
  7215  17AD  019A               	clrf	26	;volatile
  7216  17AE                     l2070:
  7217                           
  7218                           ;adc.c: 66:     SPBRG = 25;
  7219  17AE  3019               	movlw	25
  7220  17AF  0099               	movwf	25	;volatile
  7221  17B0                     l2072:
  7222                           
  7223                           ;adc.c: 67:     TXSTA = 0b00100100;
  7224  17B0  3024               	movlw	36
  7225  17B1  0098               	movwf	24	;volatile
  7226  17B2                     l2074:
  7227                           
  7228                           ;adc.c: 68:     RCSTA = 0b10010000;
  7229  17B2  3090               	movlw	144
  7230  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7231  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7232  17B5  0098               	movwf	24	;volatile
  7233  17B6                     l2076:
  7234                           
  7235                           ;adc.c: 69:     BAUDCTLbits.BRG16 = 0;
  7236  17B6  1683               	bsf	3,5	;RP0=1, select bank3
  7237  17B7  1703               	bsf	3,6	;RP1=1, select bank3
  7238  17B8  1187               	bcf	7,3	;volatile
  7239  17B9                     l2078:
  7240                           
  7241                           ;adc.c: 70:     Contador = 0;
  7242  17B9  01F8               	clrf	_Contador
  7243  17BA  01F9               	clrf	_Contador+1
  7244  17BB                     l2080:
  7245                           
  7246                           ;adc.c: 71:     Lectura = 0;
  7247  17BB  01F6               	clrf	_Lectura
  7248  17BC  01F7               	clrf	_Lectura+1
  7249  17BD                     l176:
  7250  17BD  0008               	return
  7251  17BE                     __end_of_SerialCom:
  7252                           
  7253                           	psect	text28
  7254  0933                     __ptext28:	
  7255 ;; *************** function _ISR *****************
  7256 ;; Defined at:
  7257 ;;		line 87 in file "adc.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0, pclath, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7271 ;;      Params:         0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0
  7273 ;;      Temps:          4       0       0       0       0
  7274 ;;      Totals:         4       0       0       0       0
  7275 ;;Total ram usage:        4 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    1
  7278 ;; This function calls:
  7279 ;;		i1_Counter
  7280 ;; This function is called by:
  7281 ;;		Interrupt level 1
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _ISR
  7287  0933                     _ISR:
  7288  0933                     i1l1868:
  7289                           
  7290                           ;adc.c: 88:     if (PIR1bits.RCIF==1) {
  7291  0933  1283               	bcf	3,5	;RP0=0, select bank0
  7292  0934  1303               	bcf	3,6	;RP1=0, select bank0
  7293  0935  1E8C               	btfss	12,5	;volatile
  7294  0936  2938               	goto	u171_21
  7295  0937  2939               	goto	u171_20
  7296  0938                     u171_21:
  7297  0938  2949               	goto	i1l186
  7298  0939                     u171_20:
  7299  0939                     i1l1870:
  7300                           
  7301                           ;adc.c: 89:         Lectura = RCREG;
  7302  0939  081A               	movf	26,w	;volatile
  7303  093A  00F0               	movwf	??_ISR
  7304  093B  01F1               	clrf	??_ISR+1
  7305  093C  0870               	movf	??_ISR,w
  7306  093D  00F6               	movwf	_Lectura
  7307  093E  0871               	movf	??_ISR+1,w
  7308  093F  00F7               	movwf	_Lectura+1
  7309  0940                     i1l1872:
  7310                           
  7311                           ;adc.c: 90:         Counter();
  7312  0940  120A  158A  2049  120A  158A  	fcall	i1_Counter
  7313  0945                     i1l1874:
  7314                           
  7315                           ;adc.c: 91:         PIR1bits.RCIF = 0;
  7316  0945  1283               	bcf	3,5	;RP0=0, select bank0
  7317  0946  1303               	bcf	3,6	;RP1=0, select bank0
  7318  0947  128C               	bcf	12,5	;volatile
  7319  0948  2956               	goto	i1l187
  7320  0949                     i1l186:	
  7321                           ;adc.c: 93:     }
  7322                           
  7323                           
  7324                           ;adc.c: 94:     RCSTAbits.CREN = 0;
  7325  0949  1218               	bcf	24,4	;volatile
  7326  094A                     i1l1878:
  7327                           
  7328                           ;adc.c: 95:     _delay((unsigned long)((10)*(4000000/4000.0)));
  7329  094A  300D               	movlw	13
  7330  094B  00F1               	movwf	??_ISR+1
  7331  094C  30FB               	movlw	251
  7332  094D  00F0               	movwf	??_ISR
  7333  094E                     u452_27:
  7334  094E  0BF0               	decfsz	??_ISR,f
  7335  094F  294E               	goto	u452_27
  7336  0950  0BF1               	decfsz	??_ISR+1,f
  7337  0951  294E               	goto	u452_27
  7338  0952  2953               	nop2
  7339  0953                     i1l1880:
  7340                           
  7341                           ;adc.c: 96:     RCSTAbits.CREN = 1;
  7342  0953  1283               	bcf	3,5	;RP0=0, select bank0
  7343  0954  1303               	bcf	3,6	;RP1=0, select bank0
  7344  0955  1618               	bsf	24,4	;volatile
  7345  0956                     i1l187:
  7346  0956  0873               	movf	??_ISR+3,w
  7347  0957  008A               	movwf	10
  7348  0958  0E72               	swapf	??_ISR+2,w
  7349  0959  0083               	movwf	3
  7350  095A  0EFE               	swapf	btemp,f
  7351  095B  0E7E               	swapf	btemp,w
  7352  095C  0009               	retfie
  7353  095D                     __end_of_ISR:
  7354                           
  7355                           	psect	intentry
  7356  0004                     __pintentry:	
  7357                           ;incstack = 0
  7358                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7359                           
  7360  0004                     interrupt_function:
  7361  007E                     saved_w	set	btemp
  7362  0004  00FE               	movwf	btemp
  7363  0005  0E03               	swapf	3,w
  7364  0006  00F2               	movwf	??_ISR+2
  7365  0007  080A               	movf	10,w
  7366  0008  00F3               	movwf	??_ISR+3
  7367  0009  120A  158A  2933   	ljmp	_ISR
  7368                           
  7369                           	psect	text29
  7370  0849                     __ptext29:	
  7371 ;; *************** function i1_Counter *****************
  7372 ;; Defined at:
  7373 ;;		line 74 in file "adc.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7387 ;;      Params:         0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0
  7390 ;;      Totals:         0       0       0       0       0
  7391 ;;Total ram usage:        0 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_ISR
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function i1_Counter
  7402  0849                     i1_Counter:
  7403  0849                     i1l1810:	
  7404                           ;incstack = 0
  7405                           ; Regs used in i1_Counter: [wreg+status,2+status,0]
  7406                           
  7407                           
  7408                           ;adc.c: 75:     if (Lectura == '+') {
  7409  0849  302B               	movlw	43
  7410  084A  0676               	xorwf	_Lectura,w
  7411  084B  0477               	iorwf	_Lectura+1,w
  7412  084C  1D03               	btfss	3,2
  7413  084D  284F               	goto	u169_21
  7414  084E  2850               	goto	u169_20
  7415  084F                     u169_21:
  7416  084F  2859               	goto	i1l1816
  7417  0850                     u169_20:
  7418  0850                     i1l1812:
  7419                           
  7420                           ;adc.c: 76:         Contador = Contador + 1;
  7421  0850  0878               	movf	_Contador,w
  7422  0851  3E01               	addlw	1
  7423  0852  00F8               	movwf	_Contador
  7424  0853  0879               	movf	_Contador+1,w
  7425  0854  1803               	skipnc
  7426  0855  3E01               	addlw	1
  7427  0856  3E00               	addlw	0
  7428  0857  00F9               	movwf	_Contador+1
  7429  0858  286D               	goto	i1l180
  7430  0859                     i1l1816:
  7431                           
  7432                           ;adc.c: 80:     if (Lectura == '-') {
  7433  0859  302D               	movlw	45
  7434  085A  0676               	xorwf	_Lectura,w
  7435  085B  0477               	iorwf	_Lectura+1,w
  7436  085C  1D03               	btfss	3,2
  7437  085D  285F               	goto	u170_21
  7438  085E  2860               	goto	u170_20
  7439  085F                     u170_21:
  7440  085F  2869               	goto	i1l1822
  7441  0860                     u170_20:
  7442  0860                     i1l1818:
  7443                           
  7444                           ;adc.c: 81:         Contador = Contador - 1;
  7445  0860  0878               	movf	_Contador,w
  7446  0861  3EFF               	addlw	255
  7447  0862  00F8               	movwf	_Contador
  7448  0863  0879               	movf	_Contador+1,w
  7449  0864  1803               	skipnc
  7450  0865  3E01               	addlw	1
  7451  0866  3EFF               	addlw	255
  7452  0867  00F9               	movwf	_Contador+1
  7453  0868  286D               	goto	i1l180
  7454  0869                     i1l1822:
  7455                           
  7456                           ;adc.c: 84:     Lectura = 'G';
  7457  0869  3047               	movlw	71
  7458  086A  00F6               	movwf	_Lectura
  7459  086B  3000               	movlw	0
  7460  086C  00F7               	movwf	_Lectura+1
  7461  086D                     i1l180:
  7462  086D  0008               	return
  7463  086E                     __end_ofi1_Counter:
  7464  007E                     btemp	set	126	;btemp
  7465  007E                     wtemp0	set	126
  7466                           
  7467                           	psect	config
  7468                           
  7469                           ;Config register CONFIG1 @ 0x2007
  7470                           ;	Oscillator Selection bits
  7471                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7472                           ;	Watchdog Timer Enable bit
  7473                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7474                           ;	Power-up Timer Enable bit
  7475                           ;	PWRTE = OFF, PWRT disabled
  7476                           ;	RE3/MCLR pin function select bit
  7477                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7478                           ;	Code Protection bit
  7479                           ;	CP = OFF, Program memory code protection is disabled
  7480                           ;	Data Code Protection bit
  7481                           ;	CPD = OFF, Data memory code protection is disabled
  7482                           ;	Brown Out Reset Selection bits
  7483                           ;	BOREN = OFF, BOR disabled
  7484                           ;	Internal External Switchover bit
  7485                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7486                           ;	Fail-Safe Clock Monitor Enabled bit
  7487                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7488                           ;	Low Voltage Programming Enable bit
  7489                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7490                           ;	In-Circuit Debugger Mode bit
  7491                           ;	DEBUG = 0x1, unprogrammed default
  7492  2007                     	org	8199
  7493  2007  20D4               	dw	8404
  7494                           
  7495                           ;Config register CONFIG2 @ 0x2008
  7496                           ;	Brown-out Reset Selection bit
  7497                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7498                           ;	Flash Program Memory Self Write Enable bits
  7499                           ;	WRT = OFF, Write protection off
  7500  2008                     	org	8200
  7501  2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     66      80
    BANK1            80      4      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> ContadorSend(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), PUNTO1A(BANK1[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2A(BANK1[5]), ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), PUNTO1A(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), ADCchar1B(BANK1[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCchar2C(BANK1[5]), ADCchar2B(BANK1[5]), ADCchar2A(BANK1[5]), ADCchar1C(BANK1[5]), 
		 -> ADCchar1B(BANK1[5]), ADCchar1A(BANK1[5]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[3]), STR_5(CODE[3]), ContadorSend(BANK1[5]), ADCchar2C(BANK1[5]), 
		 -> ADCchar1C(BANK1[5]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _UART_INIT->___aldiv
    _ADC->___awmod
    _ADC->_strcat
    _ADC->_strcpy
    _sprintf->___bmul
    _sprintf->___lwmod
    _sprintf->_isdigit
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    ___awmod->___awdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _inicializacion->_lcd_cmd
    _UART_INIT->___aldiv
    _ADC->___fldiv
    _sprintf->___lwmod
    _lcd_msg->_lcd_dwr
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17548
                                _ADC
                            _Counter
                          _SerialCom
                          _UART_INIT
                     _inicializacion
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       0     0      0      31
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Counter                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     4      0   16945
                                              0 BANK1      4     4      0
                          _SerialCom
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     361
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     899
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2725
                                             12 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_msg                                              2     0      2     636
                                              1 BANK0      2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (3) _lcd_dwr                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    3429
                                             21 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1900
                                             12 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3893
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              5 COMMON     1     1      0
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SerialCom                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                          i1_Counter
 ---------------------------------------------------------------------------------
 (6) i1_Counter                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _SerialCom
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _lcd_cmd
       _lcd_lat
       _lcd_ready
     _lcd_msg
       _lcd_dwr
         _lcd_lat
         _lcd_ready
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
     _strcat
     _strcpy
   _Counter
   _SerialCom
   _UART_INIT
     ___aldiv
   _inicializacion
     _lcd_cmd
       _lcd_lat
       _lcd_ready

 _ISR (ROOT)
   i1_Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 23:34:39 2021

           ___fldiv@aexp 0061             ___fldiv@bexp 0060                        pc 0002  
           ___fldiv@sign 0059           ___bmul@product 0020                       l61 1775  
                     l64 1761                       l72 1789                       l81 17DC  
                     l69 0932                       l78 08E0                       _PI 00AF  
           ___awdiv@sign 0025                       fsr 0004      __Umul8_16@word_mpld 0024  
                    l217 0AC9                      l180 0892                      _ADC 0028  
                    l176 17BD                      l192 0054                      l505 0B32  
                    l417 0C35                      l195 01C8                      l427 0CBD  
                    l348 0E22                      l701 0E7F                      l518 0A64  
                    l703 0FFF                      l624 0A09                      l545 0C0B  
                    l538 0C20                      l634 09C3                      l378 17A0  
                    l723 0FE3                      l811 08B8                      l548 0C20  
                    l725 0FF3                      l717 0F71                      l741 06F3  
                    l805 0848                      l760 08F7                      l753 06E7  
                    l817 0B8D                      l762 0909                      l834 17FF  
                    l747 065F                      l819 0BA4                      l828 0987  
                    l791 075D                      l785 0718                      l787 07AF  
                    l798 0779                      l799 0785                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      _ISR 0933  
                    _plc 00AD                      fsr0 0004                      indf 0000  
           ___awmod@sign 002D             ___flmul@aexp 003C             ___flmul@bexp 0041  
           ___flmul@sign 003B             ___flmul@temp 0046             ___flmul@prod 0042  
                   ?_ADC 0070                     ?_ISR 0070             ___fltol@exp1 0052  
                   l2000 083F                     l2002 0845                     l2004 0847  
                   l3000 0B89                     l3002 0B91                     l3004 0B98  
                   l3020 1770                     l3012 1765                     l3100 0D55  
                   l2220 0C21                     l2070 17AE                     l2310 0A16  
                   l3006 0B9A                     l3030 0896                     l3014 176A  
                   l3022 08B9                     l3110 0D66                     l3102 0D5A  
                   l2230 0C48                     l2222 0C24                     l2080 17BB  
                   l2072 17B0                     l2320 0A2A                     l2312 0A18  
                   l2304 0A0A                     l2400 0E57                     l3200 0BBB  
                   l3008 0BA0                     l3040 08AA                     l3032 0896  
                   l3016 176E                     l3024 08BA                     l3120 0D9D  
                   l3104 0D60                     l2240 0C6C                     l2232 0C50  
                   l2224 0C28                     l2074 17B2                     l2066 17A1  
                   l2330 0A49                     l2322 0A31                     l2314 0A1C  
                   l2306 0A0D                     l2410 0E6C                     l2402 0E5D  
                   l3210 0BDF                     l3202 0BD0                     l3034 089A  
                   l3018 176F                     l3026 08C8                     l3130 0DCB  
                   l3122 0DB1                     l3114 0D82                     l3106 0D64  
                   l3050 0972                     l2250 0C9F                     l2242 0C75  
                   l2234 0C58                     l2226 0C39                     l2076 17B6  
                   l2068 17AB                     l2332 0A50                     l2324 0A35  
                   l2316 0A21                     l2308 0A11                     l2500 0FB9  
                   l2420 0E93                     l2412 0E74                     l2404 0E61  
                   l3300 0536                     l3204 0BD1                     l3036 08A1  
                   l3028 08D0                     l3132 0DFB                     l3124 0DB7  
                   l3116 0D8C                     l3140 0E1E                     l3060 0CC1  
                   l3052 097A                     l3044 0960                     l2244 0C87  
                   l2236 0C5B                     l2252 0CA5                     l2228 0C44  
                   l2078 17B9                     l3150 0ACA                     l2326 0A39  
                   l2318 0A27                     l2334 0A56                     l2510 0FE9  
                   l2502 0FC7                     l2422 0E97                     l2414 0E75  
                   l2406 0E62                     l3310 05E3                     l3302 0553  
                   l3230 0393                     l3206 0BD9                     l3038 08A5  
                   l3126 0DBF                     l3118 0D9C                     l3070 0CD9  
                   l3062 0CC6                     l3046 0965                     l3054 17E0  
                   l2254 0CAA                     l2246 0C95                     l2238 0C68  
                   l3160 0ADC                     l3152 0ACD                     l2336 0A5B  
                   l2328 0A43                     l2512 0FED                     l2504 0FD6  
                   l2440 0ED8                     l2432 0EAE                     l2408 0E67  
                   l2416 0E77                     l3320 062F                     l3312 060B  
                   l3304 0580                     l3240 03AA                     l3232 039A  
                   l3224 0C00                     l3216 0BE7                     l3208 0BDB  
                   l3400 077D                     l3128 0DC6                     l3136 0E03  
                   l3080 0D07                     l3072 0CE5                     l3064 0CCC  
                   l3048 0969                     l3056 17E5                     l2256 0CB5  
                   l2248 0C96                     l3170 0AF0                     l3162 0AE1  
                   l3154 0AD1                     l2338 0A60                     l2514 0FEF  
                   l2506 0FDA                     l2450 0EF6                     l2442 0EDA  
                   l2434 0EC0                     l2418 0E87                     l2426 0EA0  
                   l3330 0644                     l3322 0630                     l3314 0614  
                   l3306 0590                     l3250 03C6                     l3242 03AF  
                   l3234 03A0                     l3226 0C10                     l3218 0BF9  
                   l3410 07A7                     l3402 0787                     l3090 0D3C  
                   l3082 0D0B                     l3074 0CE9                     l3066 0CD3  
                   l3138 0E0C                     l3058 17ED                     l1802 087E  
                   l3180 0B16                     l3172 0AF7                     l3164 0AE5  
                   l3156 0AD6                     l2508 0FE2                     l2444 0EDF  
                   l2452 0EFF                     l2460 0F24                     l2436 0EC8  
                   l2428 0EA5                     l2380 0E2A                     l3340 0669  
                   l3332 0648                     l3324 0639                     l3316 0622  
                   l3308 05BD                     l3260 03DB                     l3252 03CC  
                   l3244 03B7                     l3236 03A4                     l3228 0C15  
                   l3404 079D                     l3092 0D44                     l3076 0CEB  
                   l3084 0D1C                     l3068 0CD8                     l3500 0354  
                   l3420 0033                     l1804 0885                     l3190 0B2E  
                   l3182 0B17                     l3174 0AFB                     l3166 0AE7  
                   l3158 0AD8                     l2470 0F41                     l2462 0F2A  
                   l2454 0F11                     l2446 0EF1                     l2438 0ED0  
                   l2390 0E3F                     l2382 0E30                     l3350 06A7  
                   l3342 0677                     l3334 065C                     l3318 062B  
                   l3326 063F                     l3270 03F7                     l3262 03E3  
                   l3254 03D0                     l3246 03B9                     l3238 03A5  
                   l3406 07A2                     l3094 0D48                     l3078 0CFC  
                   l3510 0386                     l3502 035A                     l3430 0044  
                   l3422 0034                     l3414 17BE                     l3184 0B1E  
                   l3176 0AFF                     l3168 0AED                     l2480 0F56  
                   l2472 0F42                     l2464 0F32                     l2456 0F12  
                   l2448 0EF5                     l2392 0E47                     l2384 0E34  
                   l3360 06DB                     l3352 06B2                     l3344 067B  
                   l3328 0643                     l3280 043A                     l3264 03E5  
                   l3256 03D1                     l3248 03C1                     l3408 07A6  
                   l3096 0D4C                     l3088 0D1D                     l3504 0365  
                   l3440 0060                     l3432 004E                     l3424 0037  
                   l3416 0028                     l1808 088E                     l3520 07B9  
                   l3512 07B0                     l3178 0B10                     l3186 0B24  
                   l2490 0F7B                     l2482 0F5A                     l2474 0F4B  
                   l2466 0F34                     l2458 0F20                     l2394 0E48  
                   l2386 0E35                     l2378 0E23                     l3362 06DF  
                   l3354 06C1                     l3346 0694                     l3338 0664  
                   l3290 04C3                     l3282 0456                     l3274 0400  
                   l3266 03ED                     l3258 03D6                     l3194 0BA5  
                   l3370 06F7                     l3098 0D50                     l3506 0370  
                   l3450 0146                     l3442 00C9                     l3434 0052  
                   l3426 0038                     l3418 002D                     l2810 0AC3  
                   l2802 0A65                     l3530 07C4                     l3522 07BA  
                   l3514 07B6                     l3188 0B29                     l2492 0F89  
                   l2484 0F6E                     l2468 0F3D                     l2476 0F51  
                   l2388 0E3A                     l2396 0E4A                     l3364 06E0  
                   l3356 06CB                     l3348 069A                     l3292 04D3  
                   l3284 0482                     l3276 0410                     l3268 03F2  
                   l3196 0BB2                     l3372 06FC                     l2900 0914  
                   l3508 037B                     l3460 019E                     l3452 0154  
                   l3444 0101                     l3436 0053                     l3428 0039  
                   l2812 0AC4                     l2804 0AC0                     l3540 07CC  
                   l3532 07C5                     l3524 07BE                     l3516 07B7  
                   l2494 0F8D                     l2478 0F55                     l2398 0E52  
                   l3366 06EB                     l3358 06CD                     l3294 04F0  
                   l3286 049E                     l3278 041D                     l3390 0746  
                   l3382 0729                     l3374 0700                     l2910 092F  
                   l2902 0915                     l3470 01C7                     l3462 01AA  
                   l3454 0178                     l3446 0114                     l3438 0058  
                   l2814 0AC7                     l2806 0AC1                     l3550 07D9  
                   l3542 07CD                     l3534 07C7                     l3526 07BF  
                   l3518 07B8                     l2496 0FA6                     l2488 0F76  
                   l3296 0500                     l3288 04BA                     l3392 0754  
                   l3384 072E                     l3376 0710                     l2920 09C8  
                   l2912 1753                     l2904 091D                     l3480 0288  
                   l3472 01CC                     l3464 01B6                     l3456 0186  
                   l3448 0122                     l2816 0AC8                     l2808 0AC2  
                   l3552 07E8                     l3544 07CE                     l3536 07C8  
                   l3528 07C3                     l2498 0FAC                     l3298 051D  
                   l3394 0764                     l3386 073B                     l3378 0720  
                   l2930 09E0                     l2922 09CE                     l1970 099A  
                   l2914 1756                     l2906 0926                     l3490 0312  
                   l3482 0296                     l3474 01D4                     l3466 01C0  
                   l3458 0192                     l3554 07ED                     l3546 07CF  
                   l3538 07CB                     l3396 076F                     l3388 0742  
                   l2932 09F1                     l2924 09D1                     l2940 0A05  
                   l1980 09B9                     l1972 099E                     l1964 0988  
                   l2916 175E                     l2908 0927                     l3492 031E  
                   l3484 02C0                     l3476 023D                     l3468 01C6  
                   l1796 086E                     l3548 07D4                     l3398 0773  
                   l2934 09F7                     l2926 09D8                     l2918 09C4  
                   l1974 09A2                     l1966 0990                     l1982 09BF  
                   l2950 1783                     l3494 032A                     l3486 02D4  
                   l3478 0275                     l1798 0875                     l2936 09F8  
                   l2928 09DC                     l1976 09AC                     l1968 0993  
                   l2952 1784                     l2944 1779                     l2960 1796  
                   l3496 0336                     l3488 02FE                     l2970 08E6  
                   l2938 09FF                     l1978 09B2                     l2946 177E  
                   l2962 1798                     l2954 178D                     l3586 0D31  
                   l3498 0342                     l2972 08ED                     l2892 090A  
                   l2948 1782                     l2964 179F                     l2956 178E  
                   l1996 0838                     l2974 08F1                     l2990 0B57  
                   l2982 0B36                     l2894 090E                     l2958 1792  
                   l1998 0839                     l2976 0900                     l2968 08E4  
                   l2992 0B5B                     l2984 0B3A                     l2896 0912  
                   l2978 0905                     l2994 0B5D                     l2986 0B4D  
                   l2898 0913                     l2996 0B70                     l2988 0B51  
                   l2998 0B83                     STR_1 081A                     STR_2 0834  
                   STR_3 0834                     STR_4 082C                     STR_5 0831  
                   STR_6 0831                     u2200 0C6C                     u2201 0C6B  
                   u2220 0C87                     u2221 0C86                     u2215 0C6E  
                   u2400 0A39                     u4000 03F2                     u2240 0CA5  
                   u2160 0C28                     u2401 0A38                     u4001 03F1  
                   u2241 0CA4                     u2225 0C83                     u2161 0C27  
                   u2410 0A43                     u4010 03F7                     u2250 0CAA  
                   u2170 0C39                     u2411 0A42                     u4011 03F6  
                   u2251 0CA9                     u2235 0C97                     u2171 0C38  
                   u2180 0C58                     u4101 0545                     u4021 0448  
                   u2181 0C57                     u2430 0A56                     u4102 054C  
                   u4022 044F                     u2431 0A55                     u2415 0A3F  
                   u4111 0572                     u4103 0553                     u4031 0464  
                   u4023 0456                     u2440 0A5B                     u2360 0A11  
                   u2600 0E6C                     u4112 0579                     u4032 046B  
                   u3400 0926                     u2441 0A5A                     u2425 0A4A  
                   u2361 0A10                     u2601 0E6B                     u4121 059F  
                   u4113 0580                     u4041 0490                     u4033 0472  
                   u3401 0925                     u2370 0A1C                     u2610 0E87  
                   u4210 0643                     u4130 05C9                     u4122 05A6  
                   u4042 0497                     u3410 09CE                     u2371 0A1B  
                   u2611 0E86                     u4211 0642                     u4123 05AD  
                   u4051 04AC                     u4043 049E                     u3411 09CD  
                   u2195 0C5D                     u2380 0A27                     u2700 0F32  
                   u2620 0EA5                     u3500 08F1                     u4300 06DF  
                   u4220 0648                     u4052 04B3                     u1820 0990  
                   u2381 0A26                     u2701 0F31                     u2621 0EA4  
                   u3501 08F0                     u4301 06DE                     u4221 0647  
                   u4205 0632                     u4141 05D5                     u4053 04BA  
                   u1821 098F                     u2630 0EDF                     u2550 0E34  
                   u4230 065C                     u4150 05F1                     u4142 05DC  
                   u4310 06FC                     u3430 09E0                     u1670 0875  
                   u2631 0EDE                     u2551 0E33                     u4231 065B  
                   u4143 05E3                     u4135 05C4                     u4071 04E2  
                   u4311 06FB                     u3431 09DF                     u1671 0874  
                   u2800 0F9C                     u2720 0F41                     u2560 0E3A  
                   u3520 0905                     u4240 0663                     u4072 04E9  
                   u4400 0779                     u4320 0700                     u1840 09A2  
                   u3600 17FF                     u1680 0885                     u2721 0F40  
                   u2561 0E39                     u3521 0904                     u4241 0662  
                   u4161 05FD                     u4081 050F                     u4073 04F0  
                   u4065 04BC                     u4401 0778                     u4321 06FF  
                   u3425 09D2                     u1841 09A1                     u3601 17FE  
                   u1681 0884                     u2810 0FB9                     u2570 0E3F  
                   u4250 0669                     u4162 0604                     u4082 0516  
                   u4410 077D                     u4330 0720                     u3450 09F1  
                   u1850 09AC                     u3530 0B57                     u3610 0CCC  
                   u3370 0A75                     u2395 0A2B                     u2811 0FB8  
                   u2715 0F36                     u2571 0E3E                     u3515 08F8  
                   u4251 0668                     u4163 060B                     u4155 05EC  
                   u4083 051D                     u4411 077C                     u4331 071F  
                   u3451 09F0                     u1851 09AB                     u1835 0994  
                   u3531 0B56                     u3611 0CCB                     u2820 0FD6  
                   u2740 0F55                     u2660 0EF5                     u2580 0E61  
                   u4260 067B                     u4420 0792                     u3540 0B89  
                   u3700 0DB1                     u3620 0CE5                     u3380 0A8E  
                   u2821 0FD5                     u2805 0F97                     u2741 0F54  
                   u2661 0EF4                     u2645 0EE1                     u2581 0E60  
                   u4261 067A                     u3445 09E1                     u3541 0B88  
                   u3701 0DB0                     u3621 0CE4                     u2830 0FED  
                   u2750 0F5A                     u2590 0E67                     u4270 068A  
                   u4190 062F                     u4430 07A2                     u4350 0741  
                   u3470 0A05                     u1870 09BF                     u3550 0BA0  
                   u3710 0DBF                     u3630 0D1B                     u2831 0FEC  
                   u2815 0FB5                     u2751 0F59                     u2735 0F44  
                   u2655 0EEA                     u2591 0E66                     u4191 062E  
                   u4175 060D                     u4095 051F                     u4431 07A1  
                   u4351 0740                     u3471 0A04                     u3455 09ED  
                   u1871 09BE                     u1855 09A8                     u3551 0B9F  
                   u3711 0DBE                     u3631 0D1A                     u3391 0AA0  
                   u3375 0A70                     u3800 0B10                     u2760 0F6E  
                   u2680 0F11                     u4280 06A7                     u4440 07A6  
                   u3560 08E0                     u3480 1792                     u1880 083F  
                   u3720 0E0C                     u3640 0D4C                     u3392 0AA1  
                   u3801 0B0F                     u2825 0FD2                     u2761 0F6D  
                   u2681 0F10                     u4281 06A6                     u4185 0624  
                   u4441 07A5                     u4425 078D                     u4345 0733  
                   u3465 09F9                     u1865 09B3                     u3561 08DF  
                   u3481 1791                     u1881 083E                     u3721 0E0B  
                   u3705 0DAD                     u3641 0D4B                     u3393 0AA6  
                   u3385 0A89                     u2770 0F75                     u2690 0F2A  
                   u4290 06C1                     u4370 0763                     u3570 089A  
                   u3490 179F                     u1890 0845                     u3730 0E1E  
                   u3650 0D5A                     u4450 0058                     u3394 0AA7  
                   u2771 0F74                     u2691 0F29                     u2675 0EF8  
                   u4291 06C0                     u4275 0685                     u4371 0762  
                   u3571 0899                     u4507 092B                     u3491 179E  
                   u1891 0844                     u3731 0E1D                     u3651 0D59  
                   u4451 0057                     u3395 0AAC                     u3820 0B24  
                   u3740 0AD1                     u2780 0F7B                     u3900 0BFF  
                   u3660 0D60                     u3580 0971                     u4460 01CC  
                   u3396 0AAD                     u3821 0B23                     u3805 0B0C  
                   u3741 0AD0                     u2781 0F7A                     u2685 0F0D  
                   u4285 06A3                     u3901 0BFE                     u4365 0755  
                   u4517 175A                     u3661 0D5F                     u3581 0970  
                   u4461 01CB                     u3830 0B29                     u3750 0ADC  
                   u2790 0F8D                     u4390 0773                     u3670 0D81  
                   u3590 0987                     u3831 0B28                     u3815 0B18  
                   u3751 0ADB                     u2791 0F8C                     u4295 06BD  
                   u4391 0772                     u3671 0D80                     u3591 0986  
                   u3760 0AED                     u3920 0C10                     u3840 0BB2  
                   u3680 0D8C                     u3761 0AEC                     u3921 0C0F  
                   u3841 0BB1                     u4385 0768                     u3681 0D8B  
                   u3930 0C15                     u3850 0BC9                     u3690 0D9C  
                   u3931 0C14                     u3915 0C02                     u3691 0D9B  
                   u3675 0D7D                     u3780 0AFF                     u3940 03A4  
                   u3860 0BDF                     u3781 0AFE                     u3941 03A3  
                   u3861 0BDE                     u4477 004A                     u3950 03AA  
                   u3870 0BE6                     u3775 0AF1                     u3951 03A9  
                   u3871 0BE5                     u3855 0BC4                     u3695 0D98  
                   u4487 01BC                     u3960 03AF                     u3961 03AE  
                   u4497 0919                     u3970 03D0                     u3890 0BF8  
                   u3795 0B00                     u3971 03CF                     u3891 0BF7  
                   u3980 03D6                     u3981 03D5                     u3885 0BE8  
                   u3990 03DB                     u3991 03DA                     _main 07B0  
                   _itoa 0893                     _test 00A0                     btemp 007E  
                   _utoa 0B33                     start 000C          ___fldiv@new_exp 005A  
      ___bmul@multiplier 0021          __end_of_Counter 0893                    ??_ADC 00E2  
                  ??_ISR 0070                    _ADC1A 006A                    _ADC1B 0068  
                  _ADC1C 0066                    _ADC2A 0062                    _ADC2B 00B3  
                  _ADC2C 00B1            ___fltol@sign1 0051          __end_of___aldiv 0CBE  
                  _ADCLA 00A9                    _ADCLB 00A5                    ?_main 0070  
        __end_of___fldiv 1000                    ?_itoa 0035          __end_of___awdiv 0B33  
        __end_of___awmod 0A65          __end_of___flmul 06F4          __end_of___fltol 0C21  
                  _ANSEL 0188                    ?_utoa 002C          ___awdiv@divisor 0020  
        __end_of___lwdiv 0A0A                    i1l180 086D          __end_of___lwmod 09C4  
                  i1l186 0949                    i1l187 0956          ___awdiv@counter 0024  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019                    _TXSTA 0098  
     __size_of_UART_INIT 0065          __end_of_lcd_cmd 1776          __end_of_lcd_lat 1762  
        __end_of_lcd_dwr 178A          __end_of_lcd_msg 08E1          __end_of_dpowers 081A  
     __size_ofi1_Counter 0025          __end_of_isdigit 0849                    pclath 000A  
                  utoa@c 0033                    utoa@v 0031                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0E23          __initialization 000F  
           __end_of_main 07F6             __end_of_itoa 08B9             __end_of_utoa 0BA5  
                 ??_main 0076                   ??_itoa 0039                   ??_utoa 0030  
                 _DCADC1 006C                   _DCADC2 0064                   _ADRESH 001E  
       ___awdiv@dividend 0022                   _ANSELH 0189                   i1l1810 0849  
                 i1l1812 0850                   i1l1822 0869                   i1l1816 0859  
                 i1l1818 0860                   i1l1870 0939                   i1l1880 0953  
                 i1l1872 0940                   i1l1874 0945                   i1l1868 0933  
                 i1l1878 094A                   u170_20 0860                   u170_21 085F  
                 u171_20 0939                   u171_21 0938                   u169_20 0850  
                 u169_21 084F                   u452_27 094E                   _SPBRGH 009A  
__size_of_inicializacion 001F         __end_of___xxtofl 07B0                ??_Counter 0074  
      __end_of_UART_INIT 0ACA                   ___bmul 178A                ??___aldiv 0074  
              ??___fldiv 0050                ??___awdiv 0074                ??___awmod 0075  
      __end_ofi1_Counter 086E                ??___flmul 0036                ??___fltol 004C  
              ??___lwdiv 0074                ??___lwmod 0075         ___awdiv@quotient 0026  
     __size_of_SerialCom 001D          ___awmod@divisor 0028          ___awmod@counter 002C  
              ??_lcd_cmd 0076                ??_lcd_lat 0074                   _strcat 095D  
              ??_lcd_dwr 0076                ??_lcd_msg 0076                   _strcpy 17DD  
              ??_isdigit 0074       __size_of__Umul8_16 0029                   saved_w 007E  
              ??_sprintf 002F             ___xxtofl@arg 002A             ___xxtofl@exp 0029  
           ___xxtofl@val 0020  __end_of__initialization 0024               ___fltol@f1 0048  
    ___bmul@multiplicand 0074           __pcstackCOMMON 0070       __size_of_lcd_ready 0029  
             __pbssBANK0 0062               __pbssBANK1 00A0        __end_of_SerialCom 17BE  
      __end_of__Umul8_16 090A               __pmaintext 07B0                  ?___bmul 0074  
             __pintentry 0004                  ?_strcat 0074                  ?_strcpy 0074  
              ?___xxtofl 0020                  _PUNTO1A 00CE                  _PUNTO2A 00BA  
             __stringtab 0800           _inicializacion 17BE                  _Counter 086E  
                _Lectura 0076                _ADCchar1A 00DD                _ADCchar1B 00D8  
              _ADCchar1C 00D3                _ADCchar2A 00C9                _ADCchar2B 00C4  
              _ADCchar2C 00BF        __end_of_lcd_ready 0933                  ___aldiv 0C21  
        __size_of___bmul 0017                  ___fldiv 0E23                  ___awdiv 0ACA  
                ___awmod 0A0A                  ___flmul 0393                  ___fltol 0BA5  
                ___lwdiv 09C4                  ___lwmod 0988                  __ptext1 17BE  
                __ptext2 0A65                  __ptext3 0C21                  __ptext4 086E  
                __ptext5 0028                  __ptext6 17DD                  __ptext7 095D  
                __ptext8 0CBE                  __ptext9 0837                  _lcd_cmd 1762  
                _lcd_lat 1753                  _lcd_dwr 1776                  _lcd_msg 08B9  
           __size_of_ADC 036B          __size_of_strcat 002B          __size_of_strcpy 0023  
           __size_of_ISR 002A                  _dpowers 0810             _ContadorSend 00B5  
                _isdigit 0837               ??___xxtofl 0024         ___awmod@dividend 002A  
       ___aldiv@dividend 0024                  _sprintf 0CBE                  clrloop0 07F7  
 __end_of_inicializacion 17DD     end_of_initialization 0024                  itoa@buf 003B  
                itoa@val 0035                _RCSTAbits 0018         ___aldiv@quotient 002A  
                utoa@buf 0034                  utoa@val 002C                _UART_INIT 0A65  
              i1_Counter 0849            ___xxtofl@sign 0028              ___fldiv@grs 005C  
            ___fldiv@rem 0055          ?_inicializacion 0070              ___flmul@grs 003D  
              _TXSTAbits 0098           __end_of___bmul 17A1               ?_UART_INIT 002E  
            _BAUDCTLbits 0187               ?i1_Counter 0070           __end_of_strcat 0988  
         __end_of_strcpy 1800      start_initialization 000F              __end_of_ADC 0393  
            __end_of_ISR 095D                _SerialCom 17A1                 ??___bmul 0075  
              __Umul8_16 08E1                 ??_strcat 0075                 ??_strcpy 0075  
              ___fldiv@a 0048                ___fldiv@b 004C                ___flmul@a 0032  
              ___flmul@b 002E              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00E2        __size_of___xxtofl 00BC  
            sprintf@flag 0033              sprintf@prec 0037                 ?_Counter 0070  
             ?_SerialCom 0070         ___lwdiv@dividend 0022                 ?___aldiv 0020  
               ?___fldiv 0048                 ?___awdiv 0020                 ?___awmod 0028  
               ?___flmul 002E                 ?___fltol 0048               ?__Umul8_16 0074  
               ?___lwdiv 0020                 ?___lwmod 0027              ??_UART_INIT 0032  
              _lcd_ready 090A                __pstrings 0800              ??i1_Counter 0070  
               ?_lcd_cmd 0070                 ?_lcd_lat 0070                 ?_lcd_dwr 0070  
               ?_lcd_msg 0021                 ?_isdigit 0070         ___lwdiv@quotient 0025  
               ?_sprintf 002C               _ADC1ADRESH 006F               _ADC2ADRESH 006E  
        ___aldiv@divisor 0020        interrupt_function 0004          ___aldiv@counter 0028  
              clear_ram0 07F6                 _PIE1bits 008C                 _PIR1bits 000C  
             ?_lcd_ready 0070               _ADCON0bits 001F              __stringbase 080F  
             _ADCON1bits 009F         ??_inicializacion 0076                 _Contador 0078  
       __size_of_Counter 0025              ??_SerialCom 0074              ??__Umul8_16 0020  
       __size_of___aldiv 009D         __size_of___fldiv 01DD         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of___flmul 0361         __size_of___fltol 007C  
       __size_of___lwdiv 0046         __size_of___lwmod 003C       __end_of__stringtab 0810  
            _isdigit$988 0074         __size_of_lcd_cmd 0014         __size_of_lcd_lat 000F  
       __size_of_lcd_dwr 0014         __size_of_lcd_msg 0028               sprintf@val 0035  
               ___xxtofl 06F4               strcat@from 0074         __size_of_isdigit 0012  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 __ptext10 178A  
               __ptext11 08B9                 __ptext20 06F4                 __ptext12 1776  
               __ptext21 0BA5                 __ptext13 1762                 __ptext22 0393  
               __ptext14 090A                 __ptext23 08E1                 __ptext15 1753  
               __ptext24 0E23                 __ptext16 0893                 __ptext25 0A0A  
               __ptext17 0B33                 __ptext26 0ACA                 __ptext18 0988  
               __ptext27 17A1                 __ptext19 09C4                 __ptext28 0933  
               __ptext29 0849         __size_of_sprintf 0165               strcpy@from 0074  
      UART_INIT@baudrate 002E            __size_of_main 0046            __size_of_itoa 0026  
          __size_of_utoa 0072                 lcd_cmd@x 0020                 lcd_dwr@x 0020  
               lcd_msg@c 0021              ??_lcd_ready 0074               _INTCONbits 000B  
               itoa@base 0037                 isdigit@c 0075                 intlevel1 0000  
              sprintf@ap 0032                sprintf@sp 0034         ___lwmod@dividend 0029  
              stringcode 080A               _OSCCONbits 008F                 utoa@base 002E  
 __Umul8_16@multiplicand 0074                 sprintf@c 0038                 sprintf@f 002C  
               strcat@cp 0021                 strcat@to 0020          ___lwmod@divisor 0027  
               strcpy@cp 0020                 strcpy@to 0021          ___lwmod@counter 002B  
               stringdir 080A                 stringtab 0800             ___aldiv@sign 0029  
   __Umul8_16@multiplier 0026        __Umul8_16@product 0022  
